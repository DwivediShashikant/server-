{"version":3,"sources":["/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src async","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/app.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/app.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/app.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/app.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/app.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/bed_create/bed.create.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/bed_create/bed.create.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/bed_create/bed.create.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/bed_create/bed.create.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/bed_create/bed.create.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/bed_create/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/beds.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/beds.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/beds.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/beds.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/beds.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/search.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/camera_create/camera.create.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/camera_create/camera.create.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/camera_create/camera.create.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/camera_create/camera.create.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/camera_create/camera.create.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/camera_create/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/cameras.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/cameras.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/cameras.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/cameras.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/cameras.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/search.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/consultants.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/consultants.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/consultants.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/consultants.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/consultants.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/search.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/dashboard/dashboard.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/dashboard/dashboard.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/dashboard/dashboard.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/dashboard/dashboard.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/dashboard/dashboard.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/dashboard/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/department_create/department.create.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/department_create/department.create.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/department_create/department.create.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/department_create/department.create.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/department_create/department.create.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/department_create/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/departments.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/departments.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/departments.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/departments.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/departments.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/search.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospital_create/hospital.create.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospital_create/hospital.create.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospital_create/hospital.create.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospital_create/hospital.create.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospital_create/hospital.create.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospital_create/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/hospitals.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/hospitals.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/hospitals.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/hospitals.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/hospitals.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/search.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/login/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/login/login.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/login/login.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/login/login.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/login/login.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/login/login.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/model_message/model.message.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/navbar/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/navbar/navbar.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/navbar/navbar.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/navbar/navbar.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/note/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/note/note.display.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/note/note.display.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient-special-instructions/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient-special-instructions/patient.special-instructions.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient-special-instructions/patient.special-instructions.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient-special-instructions/patient.special-instructions.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_checklist/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_checklist/patient.checklist.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_checklist/patient.checklist.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_checklist/patient.checklist.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_document/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_document/patient.clinical.document.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_document/patient.clinical.document.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_document/patient.clinical.document.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_progress_note/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_progress_note/patient.clinical.progress.note.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_progress_note/patient.clinical.progress.note.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_progress_note/patient.clinical.progress.note.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_create/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_create/patient.create.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_create/patient.create.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_create/patient.create.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_create/patient.create.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_create/patient.create.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_diagnosis/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_diagnosis/patient.diagnosis.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_diagnosis/patient.diagnosis.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_diagnosis/patient.diagnosis.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_discharge_summary/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_discharge_summary/patient.discharge.summary.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_discharge_summary/patient.discharge.summary.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_discharge_summary/patient.discharge.summary.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_flow_sheet/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_flow_sheet/patient.flow.sheet.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_flow_sheet/patient.flow.sheet.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_flow_sheet/patient.flow.sheet.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_chart/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_chart/patient.fluid.chart.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_chart/patient.fluid.chart.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_chart/patient.fluid.chart.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_summary/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_summary/patient.fluid.summary.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_summary/patient.fluid.summary.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_summary/patient.fluid.summary.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluids/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluids/patient.fluids.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluids/patient.fluids.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluids/patient.fluids.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_history/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_history/patient.history.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_history/patient.history.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_history/patient.history.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_lab_chart/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_lab_chart/patient.lab.chart.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_lab_chart/patient.lab.chart.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_lab_chart/patient.lab.chart.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_labs/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_labs/patient.labs.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_labs/patient.labs.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_labs/patient.labs.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_care/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_care/patient.nursing.care.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_care/patient.nursing.care.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_care/patient.nursing.care.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_document/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_document/patient.nursing.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_document/patient.nursing.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_document/patient.nursing.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_orders/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_orders/patient.orders.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_orders/patient.orders.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_orders/patient.orders.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_physical_exam/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_physical_exam/patient.physical.exam.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_physical_exam/patient.physical.exam.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_physical_exam/patient.physical.exam.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_plan/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_plan/patient.plan.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_plan/patient.plan.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_plan/patient.plan.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_procedure/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_procedure/patient.procedure.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_procedure/patient.procedure.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_procedure/patient.procedure.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_progress_notes/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_progress_notes/patient.progress.notes.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_progress_notes/patient.progress.notes.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_progress_notes/patient.progress.notes.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_summary/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_summary/patient.summary.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_summary/patient.summary.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_summary/patient.summary.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_flowsheet/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_flowsheet/patient.vitals.flowsheet.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_flowsheet/patient.vitals.flowsheet.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_flowsheet/patient.vitals.flowsheet.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_graphs/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_graphs/patient.vitals_graphs.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_graphs/patient.vitals_graphs.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_graphs/patient.vitals_graphs.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_details/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_details/patients.details.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_details/patients.details.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_details/patients.details.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_details/patients.details.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_details/patients.details.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/patients.summary.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/patients.summary.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/patients.summary.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/patients.summary.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/patients.summary.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/search.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/common.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/care.plan.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/clinical.progress.note.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/devices.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/diagnosis.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/fhir.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/flowsheet.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/history.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/medicationId.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/nurse.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/nursingcare.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/orders.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/patient.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/physical.exam.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/practitioner.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/procedure.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/progress.notes.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/special.instructions.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/bed.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/camera.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/dashboard.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/department.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/hospital.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/login.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/meeting.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/notes.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/patient.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/role.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/user.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/bed-resolver.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/camera-resolver.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/department-resolver.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/departmentsByHospital-resolver.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/device-resolver.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/doctors-resolver.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/hospital-resolver.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/nurses-resolver.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/patient-resolver.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/patientsByHospital-resolver.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/user-resolver.services.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/toolbar/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/toolbar/toolbar.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/toolbar/toolbar.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/toolbar/toolbar.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/user_create/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/user_create/user.create.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/user_create/user.create.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/user_create/user.create.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/user_create/user.create.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/user_create/user.create.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/index.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/search.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/users.component.css","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/users.component.html","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/users.component.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/users.module.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/users.routes.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/environments/environment.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/main.ts","/Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/~/moment/locale ^\\.\\/.*$","ws (ignored)"],"names":[],"mappings":"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CAAI;AAAJ;;;;;;;;;;;;ACXiB;AACuC;AAEzE,IAAM,WAAW,GAAY;IAChC;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,8DAAc;QACzB,OAAO,EAAC,EAAC,QAAQ,EAAC,oGAAgB,EAAC;KACtC;IACD;QACI,IAAI,EAAE,eAAe;QACrB,SAAS,EAAE,8DAAc;QACzB,OAAO,EAAC,EAAC,QAAQ,EAAC,oGAAgB,EAAC;KACtC;CACJ,CAAC;;;;;;;;;ACfF;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEhF,mFALmF;AAK5E,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;;ACP6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oFAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;ACVpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qE;;;;;;;ACtPA,e","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src async\n// module id = ../../../../../src async recursive\n// module chunks = 0","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"wrapper\\\" *ngIf=\\\"loginView\\\">\\n  <login-form (loginEvent)=\\\"handleLoginEvent($event)\\\"></login-form>\\n</div>\\n<div class=\\\"wrapper\\\" *ngIf=\\\"appView\\\">\\n    <app-toolbar></app-toolbar>\\n    <app-navbar></app-navbar>\\n    <div class=\\\"content-wrapper\\\">\\n        <section class=\\\"content\\\">\\n            <router-outlet></router-outlet>\\n        </section>\\n    </div>\\n    <footer class=\\\"main-footer\\\">\\n        <div class=\\\"pull-right hidden-xs\\\">\\n        </div>\\n        <strong>Copyright &copy; 2017 <a href=\\\"http://www.coheremed.com/\\\" target=\\\"_blank\\\">Cohere Med Inc</a>.</strong> All rights reserved.\\n    </footer>\\n</div>\\n\\n<!-- Success -->\\n<div class=\\\"modal alert-popup successPopUp\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"alert alert-success\\\">\\n            <span class=\\\"successPopUpMessage\\\"></span> successfully\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- Info -->\\n<div class=\\\"modal alert-popup infoPopUp\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"alert alert-info\\\">\\n            <span class=\\\"infoPopUpMessage\\\"></span>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- Warning -->\\n<div class=\\\"modal alert-popup warningPopUp\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"alert alert-warning\\\">\\n            <strong>Warning! </strong> <span class=\\\"warningPopUpMessage\\\"></span>\\n        </div>\\n    </div>\\n</div>\\n\\n<!-- Danger -->\\n<div class=\\\"modal alert-popup errorPopUp\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"alert alert-danger\\\">\\n            <strong>Error! </strong> <span class=\\\"errorPopUpMessage\\\"></span>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 0","import { Injectable, Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserServices } from './services/presence/user.services';\nimport { LoginServices } from './services/presence/login.services';\nimport { HospitalServices } from './services/presence/hospital.services';\nimport { CommonServices } from './services/common.services';\n// import { Socket } from 'ng-socket-io';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n@Injectable()\nexport class AppComponent implements OnInit {\n\n  \n  private loginView: boolean = true;\n  private appView: boolean = false;\n  private location: string;\n\n  constructor(private router: Router, private commonServices: CommonServices, private userServices: UserServices, private loginServices: LoginServices, private hospitalServices: HospitalServices) {\n    this.location = router.url;\n  }\n\n  // getSocket(){\n  //   this.socket.on('test',data=>{\n  //     console.log(data);\n  //   });\n  // }\n\n  getLoggedInUSerInfo(){\n        this.userServices.getUserInfo(JSON.parse(sessionStorage.getItem('userRoleInfo')).uuid).subscribe(\n            data => {\n                sessionStorage.setItem('userData', JSON.stringify(data));\n                let userData: any = data;\n                if(userData.userType === 'CC_ADMIN'){\n                   this.userServices.getTenantInfo(sessionStorage.getItem(\"tenantName\")).subscribe(\n                       data => {\n                             let tenantInfo:any = data;\n                             sessionStorage.setItem('fhirOrgId', tenantInfo.fhir_org_logical_id);\n                            //  this.router.navigate(['/']);\n                            //  location.reload();\n                            this.appView = true;\n                            this.loginView = false;\n                       },\n                       error => {\n                           this.loginServices.logout();\n                        }\n                   )\n                }else if(userData.userType.startsWith('HOS')){\n                     this.hospitalServices.getFhirOrgByHospitalId(userData.hospitalId).subscribe(\n                        data => {\n                            let orgInfo: any = data;\n                            if(orgInfo.id){\n                                sessionStorage.setItem('fhirHospitalId', orgInfo.id);\n                                // this.router.navigate(['/']);\n                                // location.reload();\n                                this.appView = true;\n                                this.loginView = false;\n                            }else{\n                               this.loginServices.logout();\n                            }\n                        },\n                        error => {\n                            this.loginServices.logout();\n                        }\n                    );\n                }else{\n                //   this.router.navigate(['/']);\n                //   location.reload();\n                     this.appView = true;\n                     this.loginView = false;\n                }  \n            },\n            error => {  \n                this.loginServices.logout();\n            }\n        );\n    }\n\n  handleLoginEvent(eventData){\n      if(eventData === \"authenticated\"){\n         this.getLoggedInUSerInfo();\n      }\n  }\n\n  ngOnInit() {\n      if (JSON.parse(sessionStorage.getItem('userRoleInfo'))) {\n            this.appView = true;\n            this.loginView = false;\n            this.commonServices.prepareReqOptions();\n      }\n      // this.getSocket();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/app.component.ts","\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpModule } from '@angular/http';\n\n// Service Error Message\nimport { ModelMessage } from './model_message/model.message';\n\n// Application Routes\nimport { routes } from './app.routes';\n\n// Application Components\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './navbar/index';\nimport { ToolbarComponent } from './toolbar/index';\n\n// Application modules\nimport { LoginModule } from './login/login.module';\nimport { DashboardModule } from './dashboard/dashboard.module';\nimport { PatientsSummaryModule } from './patients_summary/patients.summary.module';\nimport { PatientCreateModule } from './patient_create/patient.create.module';\nimport { BedsModule } from './beds/beds.module';\nimport { BedCreateModule } from './bed_create/bed.create.module';\nimport { CamerasModule } from './cameras/cameras.module';\nimport { CameraCreateModule } from './camera_create/camera.create.module';\nimport { DepartmentsModule } from './departments/departments.module';\nimport { DepartmentCreateModule } from './department_create/department.create.module';\nimport { HospitalsModule } from './hospitals/hospitals.module';\nimport { HospitalCreateModule } from './hospital_create/hospital.create.module';\nimport { ConsultantsModule } from './consultants/consultants.module';\nimport { UsersModule } from './users/users.module';\nimport { UserCreateModule } from './user_create/user.create.module';\nimport { PatientsDetailsModule } from './patients_details/patients.details.module';\n\n// Application Services\nimport { CommonServices } from './services/common.services';\nimport { LoginServices } from './services/presence/login.services';\nimport { UserServices } from './services/presence/user.services';\nimport { HospitalServices } from './services/presence/hospital.services';\nimport { RoleServices } from './services/presence/role.services';\nimport { DashboardServices } from './services/presence/dashboard.services';\nimport { PatientServices } from './services/presence/patient.services';\nimport { PatientFhirServices } from './services/fhir/patient.services';\nimport { NotesServices } from './services/presence/notes.services';\nimport { BedServices } from './services/presence/bed.services';\nimport { DepartmentServices } from './services/presence/department.services';\nimport { CameraServices } from './services/presence/camera.services';\nimport { MeetingServices } from './services/presence/meeting.services';\nimport { DeviceServices } from './services/fhir/devices.services';\nimport { PractitionerServices } from './services/fhir/practitioner.services';\nimport { DiagnosisServices } from './services/fhir/diagnosis.services';\nimport { ProcedureServices } from './services/fhir/procedure.services';\nimport { FlowsheetServices } from './services/fhir/flowsheet.services';\nimport { NurseServices } from './services/fhir/nurse.services';\nimport { SpecialInstructionsServices } from './services/fhir/special.instructions.services';\nimport { ProgressNotesServices } from './services/fhir/progress.notes.services';\nimport { NursingCareServices } from './services/fhir/nursingcare.services'\nimport { HistoryServices } from './services/fhir/history.services';\nimport { PhysicalExamServices } from './services/fhir/physical.exam.services';\nimport { CarePlanServices } from './services/fhir/care.plan.services';\nimport { ClinicalProgressNoteServices } from './services/fhir/clinical.progress.note.services';\nimport { OrdersServices } from './services/fhir/orders.services';\nimport { MedicationIdServices } from './services/fhir/medicationId.services'\nimport { FhirServices } from './services/fhir/fhir.services';\n\n\n// Resolve Services\nimport { HospitalListResolver } from './services/resolvers/hospital-resolver.services';\nimport { BedListResolver } from './services/resolvers/bed-resolver.services';\nimport { CameraListResolver } from './services/resolvers/camera-resolver.services';\nimport { DepartmentListResolver } from './services/resolvers/department-resolver.services';\nimport { PatientListResolver } from './services/resolvers/patient-resolver.services';\nimport { UserListResolver } from './services/resolvers/user-resolver.services';\nimport { DeviceListResolver } from './services/resolvers/device-resolver.services';\nimport { DepartmentsByHospitalResolver } from './services/resolvers/departmentsByHospital-resolver.services';\nimport { PatientsByHospitalResolver } from './services/resolvers/patientsByHospital-resolver.services';\nimport { NursesListResolver } from './services/resolvers/nurses-resolver.services';\nimport { DoctorsListResolver } from './services/resolvers/doctors-resolver.services';\n\n//socket.io\nimport { SocketIoModule, SocketIoConfig } from 'ng-socket-io';\n//const config: SocketIoConfig = { url: 'http://localhost:3001', options: {} };\nconst config: SocketIoConfig = { url: 'http://139.59.88.55:3001', options: {} };\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    ToolbarComponent,\n  ],\n  imports: [\n    SocketIoModule.forRoot(config),\n    BrowserModule,HttpModule, RouterModule.forRoot(routes),\n    LoginModule,DashboardModule,PatientsSummaryModule,PatientCreateModule,PatientsDetailsModule,\n    BedsModule,BedCreateModule,\n    CamerasModule,CameraCreateModule,DepartmentsModule,DepartmentCreateModule,\n    HospitalsModule,HospitalCreateModule,\n    ConsultantsModule,UsersModule,UserCreateModule,\n  ],\n  providers: [\n      CommonServices, LoginServices, UserServices, HospitalServices,\n      RoleServices,DashboardServices,PatientServices,NotesServices,\n      ModelMessage,BedServices,DepartmentServices,CameraServices,\n      MeetingServices,DeviceServices,PractitionerServices,PatientFhirServices,\n      DiagnosisServices,ProcedureServices,FlowsheetServices,NurseServices,\n      SpecialInstructionsServices,ProgressNotesServices,NursingCareServices,HistoryServices,PhysicalExamServices,\n      CarePlanServices,FhirServices,ClinicalProgressNoteServices,OrdersServices,MedicationIdServices,\n      \n      HospitalListResolver,BedListResolver,CameraListResolver,\n      DepartmentListResolver,PatientListResolver,\n      UserListResolver,DeviceListResolver,DepartmentsByHospitalResolver,PatientsByHospitalResolver,\n      NursesListResolver,DoctorsListResolver\n  ],\n  bootstrap: [AppComponent],\n  exports: [NavbarComponent, ToolbarComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/app.module.ts","import { Routes } from '@angular/router';\n\nimport { LoginRoutes } from './login/index';\nimport { DashboardRoutes } from './dashboard/index';\nimport { PatientsSummaryRoutes } from './patients_summary/index';\nimport { PatientsDetailsRoutes } from './patients_details/index';\nimport { PatientCreateRoutes } from './patient_create/index';\nimport { BedsRoutes } from './beds/index';\nimport { BedCreateRoutes } from './bed_create/index';\nimport { CamerasRoutes } from './cameras/index';\nimport { CameraCreateRoutes } from './camera_create/index';\nimport { DepartmentsRoutes } from './departments/index';\nimport { DepartmentCreateRoutes } from './department_create/index';\nimport { HospitalsRoutes } from './hospitals/index';\nimport { HospitalCreateRoutes } from './hospital_create/index';\nimport { ConsultantsRoutes } from './consultants/index';\nimport { UsersRoutes } from './users/index';\nimport { UserCreateRoutes } from './user_create/index';\n\n\nexport const routes: Routes = [\n    ...LoginRoutes,\n    ...DashboardRoutes,\n    ...PatientsSummaryRoutes,\n    ...PatientsDetailsRoutes,\n    ...BedsRoutes,\n    ...BedCreateRoutes,\n    ...CamerasRoutes,\n    ...CameraCreateRoutes,\n    ...DepartmentsRoutes,\n    ...DepartmentCreateRoutes,\n    ...HospitalsRoutes,\n    ...HospitalCreateRoutes,\n    ...ConsultantsRoutes,\n    ...UsersRoutes,\n    ...UserCreateRoutes,\n    ...PatientCreateRoutes,\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/app.routes.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".bed-create {}\\n.bed-create .data-lable {\\n    display: block;\\n    padding-top: 7px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/bed_create/bed.create.component.css\n// module id = ../../../../../src/app/bed_create/bed.create.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header bed-create\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h1 class=\\\"sub-page-header\\\">\\n        Bed\\n        <small>({{mode}})</small>\\n      </h1>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"top-action-buttons\\\">\\n                <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"routeBeds()\\\" class=\\\"btn bg-default\\\" title=\\\"Back\\\"><i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li><a (click)=\\\"routeBeds()\\\"><i class=\\\"fa fa-bed\\\"></i> Bed</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-plus\\\"></i> {{mode}} Bed</li>\\n            </ol>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n        </div>\\n    </div>\\n</section>\\n<section class=\\\"bed-create\\\">\\n    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"createBedForm\\\" (ngSubmit)=\\\"save(createBedForm.value, createBedForm.valid)\\\" novalidate>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"box box-info\\\">\\n                    <div class=\\\"box-header with-border\\\">\\n                        <h3 class=\\\"box-title\\\">{{mode}} Bed</h3>\\n                    </div>\\n                    <div class=\\\"box-body\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Bed</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Bed Name\\\" formControlName=\\\"name\\\" pattern=\\\"^([A-Za-z0-9\\\\-]+)\\\" required=\\\"required\\\">\\n                                <small class=\\\"form-error\\\" [hidden]=\\\"createBedForm.controls.name.valid || (createBedForm.controls.name.pristine && !submitted)\\\">\\n                                    Bed name is required. No special characters except - (hyphen) is allowed\\n                                </small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Hospital</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <span class=\\\"data-lable\\\">{{hospitalName}}</span>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Department</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <select class=\\\"form-control\\\" formControlName=\\\"icuId\\\" (change)=\\\"onChangeIcu($event.target.value)\\\" required=\\\"required\\\">\\n                                  <option value=\\\"\\\" selected=\\\"selected\\\">Choose Department</option>\\n                                  <option *ngFor=\\\"let department of departments\\\"[value]=\\\"department.id\\\">{{department.name}}</option>\\n                              </select>\\n                              <small class=\\\"form-error\\\" [hidden]=\\\"createBedForm.controls.icuId.valid || (createBedForm.controls.icuId.pristine && !submitted)\\\">\\n                                  Select department type\\n                               </small> \\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Camera</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <select class=\\\"form-control\\\" formControlName=\\\"cameraId\\\" [(ngModel)]=\\\"selectedCamera\\\" required>\\n                                  <option disabled selected [value]=\\\"default\\\">Choose Camera</option>\\n                                  <option *ngFor=\\\"let camera of cameras\\\" [value]=\\\"camera.id\\\">{{camera.name}}</option>\\n                              </select>\\n                               <small class=\\\"form-error\\\" [hidden]=\\\"createBedForm.controls.cameraId.valid || (createBedForm.controls.cameraId.pristine && !submitted)\\\">\\n                                  Select camera\\n                               </small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Device</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <select class=\\\"form-control\\\" formControlName=\\\"deviceId\\\" (change)=\\\"onChangeDevice($event.target.value)\\\" required=\\\"required\\\">\\n                                  <option value=\\\"\\\" selected=\\\"selected\\\">Choose Device</option>\\n                                  <option *ngFor=\\\"let device of devices\\\"[value]=\\\"device.id\\\">{{device.name}}</option>\\n                              </select>\\n                              <small class=\\\"form-error\\\" [hidden]=\\\"createBedForm.controls.deviceId.valid || (createBedForm.controls.deviceId.pristine && !submitted)\\\">\\n                                  Select device\\n                               </small> \\n                            </div>\\n                        </div>\\n                        <div class=\\\"box-header\\\">\\n                            <div class=\\\"box-footer text-align-right\\\" *ngIf=\\\"!disableCreateAction\\\">\\n                                <button type=\\\"button\\\" (click)=\\\"routeBeds()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-info margin\\\">\\n                                <span *ngIf=\\\"createMode\\\">Create</span>\\n                                <span *ngIf=\\\"!createMode\\\">Update</span>\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/bed_create/bed.create.component.html\n// module id = ../../../../../src/app/bed_create/bed.create.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { BedInterface } from './bed.interface';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ModelMessage } from '../model_message/model.message';\nimport { BedServices } from '../services/presence/bed.services';\nimport { DepartmentServices } from '../services/presence/department.services';\nimport { HospitalServices } from '../services/presence/hospital.services';\nimport { PatientServices } from '../services/presence/patient.services';\nimport { CameraServices } from '../services/presence/camera.services';\nimport { DeviceServices } from '../services/fhir/devices.services';\n\n@Component({\n    moduleId: module.id,\n    selector: 'cm-bed-create',\n    templateUrl: 'bed.create.component.html',\n    styleUrls: ['bed.create.component.css']\n})\n\nexport class BedCreateComponent implements OnInit {\n    public createBedForm: FormGroup;\n    id: any;\n    private sub: any;\n    public submitted: boolean;\n    icus: any;\n    beds: any;\n    public events: any[] = [];\n    hospitalList = [];\n    departments: any;\n    patients: any;\n    cameras: any;\n    devices: any;\n    userData: any;\n    bedData: any;\n    hospitalName: any;\n    mode: string = 'Create';\n    createMode: boolean = true;\n    selectedCamera: any;\n    selectedDevices = [];\n    bedDevices = [];\n    bedDevice: any;\n    disableCreateAction: boolean = false;\n\n    constructor(private router: Router, private route: ActivatedRoute, private fb: FormBuilder, private bedServices: BedServices, private departmentServices: DepartmentServices, private hospitalServices: HospitalServices, private patientServices:PatientServices, private cameraServices: CameraServices, private deviceServices: DeviceServices, private modelMessage: ModelMessage) { }\n\n\n    save(model: BedInterface, isValid: boolean) {\n        this.submitted = true;\n        if (model.hospitalId === '') {\n            model.hospitalId = this.userData.hospitalId;\n        }\n        if (isValid) {\n            if (!this.createMode) {\n                this.disableCreateAction = true;\n                if(this.selectedDevices.length > 0){\n                    delete this.bedDevice.locationId;\n                    if(this.bedDevice.patientId){\n                        delete this.bedDevice.patientId;   \n                    }\n                    this.bedDevice.statusCode = \"available\";\n                    this.bedDevice.statusDisplay = \"Device Available\";\n                    this.selectedDevices.push(this.bedDevice);\n                    model.devices = this.selectedDevices;\n                }\n                this.bedServices.updateBed(model).subscribe(\n                    data => {\n                        let msg = 'Bed ' + model.name + ' was updated ';\n                        this.modelMessage.successMessage(msg);\n                        this.router.navigate(['/beds']);\n                    },\n                    error => {\n                        this.disableCreateAction = false;\n                        this.modelMessage.errorMessage(error);\n                    }\n                );\n            } else {\n                this.disableCreateAction = true;   \n                model.devices = this.selectedDevices;\n                model.fhirOrgId = sessionStorage.getItem(\"fhirHospitalId\");\n                this.bedServices.createBed(model).subscribe(\n                    data => {\n                        this.selectedDevices = [];\n                        let msg = 'Bed ' + model.name + ' was created ';\n                        this.modelMessage.successMessage(msg);\n                        this.router.navigate(['/beds']);\n                    },\n                    error => {\n                        this.disableCreateAction = false;\n                        this.selectedDevices = [];\n                        this.modelMessage.errorMessage(error);\n                    }\n                );\n            }\n        }\n    }\n\n    onChangeDevice(deviceId){\n        if(this.createMode){\n          let selectedDevice = this.devices.find(device => device.id == deviceId);\n          selectedDevice.statusCode = \"not-available\";\n          selectedDevice.statusDisplay = \"Device Not Available\";\n          //this.selectedDevices.push(selectedDevice);\n          this.selectedDevices = [selectedDevice];\n        }else{\n          this.selectedDevices = [];  \n          let selectedDevice = this.devices.find(device => device.id == deviceId);\n          if(selectedDevice.id !== this.bedDevice.id){\n            selectedDevice.statusCode = \"not-available\";\n            selectedDevice.statusDisplay = \"Device Not Available\";\n            selectedDevice.locationId = this.bedDevice.locationId;\n            if(this.bedDevice.patientId){\n              selectedDevice.patientId = this.bedDevice.patientId;  \n            }\n            this.selectedDevices = [selectedDevice];\n          }\n        } \n    }\n\n    onChangeIcu(icuId){\n        this.cameraServices.getAllCamerasByDepartmentID(icuId).subscribe(\n            data => {\n                this.cameras = data;\n            },\n            error => {\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    createBed() {\n        this.createBedForm = new FormGroup({\n            cameraId: new FormControl('', <any>Validators.required),\n            hospitalId: new FormControl(this.userData.hospitalId),\n            icuId: new FormControl('', <any>Validators.required),\n            id: new FormControl(''),\n            name: new FormControl('', <any>Validators.required),\n            deviceId: new FormControl(''),\n            patientId: new FormControl('')\n        });\n    }\n\n    editBed(data) {\n        this.createBedForm = new FormGroup({\n            cameraId: new FormControl(data.cameraId),\n            hospitalId: new FormControl(data.hospitalId),\n            icuId: new FormControl(data.icuId, <any>Validators.required),\n            id: new FormControl(data.id),\n            name: new FormControl(data.name),\n            deviceId: new FormControl(data.deviceId),\n            patientId: new FormControl('')\n        });\n    }\n\n    clickBedGridView() {\n        this.router.navigate(['/beds']);\n    }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    routeBeds() {\n        this.router.navigate(['/beds']);\n    }\n\n    ngOnInit() {\n        this.userData = JSON.parse(sessionStorage.getItem('userData'));\n        this.hospitalList = this.route.snapshot.data['hospitalList'];\n        this.hospitalName = this.hospitalList.find(hospital => hospital.id == this.userData.hospitalId).name;\n        this.departments = this.route.snapshot.data['departmentList'];\n        this.beds = this.route.snapshot.data['bedList'];\n        this.devices = this.route.snapshot.data['deviceList'];;\n        this.createBed();\n        this.sub = this.route.params.subscribe(params => {\n            if (params['id']) {\n                this.createMode = false;\n                this.mode = 'Edit';\n                this.bedData = this.beds.find(bed => bed.id == params['id']);\n                this.selectedCamera = this.bedData.cameraId;\n                this.deviceServices.getAllDevicesByLocationIdentifier(this.bedData.id).subscribe(\n                   data => {\n                       let responseData:any = data || [];\n                        if(responseData.length){\n                           this.bedDevices = responseData;\n                           this.bedDevice = this.bedDevices[0];\n                           this.bedData.deviceId = this.bedDevice.id;\n                           this.devices.push(this.bedDevice);\n                           this.cameraServices.getAllCamerasByDepartmentID(this.bedData.icuId).subscribe(\n                                data => {\n                                    this.cameras = data;\n                                    this.editBed(this.bedData);\n                                },\n                                error => {\n                                    this.modelMessage.errorMessage(error);\n                                }\n                            );\n                        }else{\n                           let errorResponse = {status: 500, statusText: \"Failed to get bed devices\"};\n                           this.modelMessage.errorMessage(errorResponse);\n                        }\n                    },\n                    error => {\n                        this.modelMessage.errorMessage(error);\n                    }  \n                );\n\n                    // this.cameraServices.getAllCamerasByDepartmentID(this.bedData.icuId).subscribe(\n                    //     data => {\n                    //         this.cameras = data;\n                    //         this.editBed(this.bedData);\n                    //     },\n                    //     error => {\n                    //         this.modelMessage.errorMessage(error);\n                    //     }\n                    // );\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/bed_create/bed.create.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { SharedModule } from '../shared/shared.module';\nimport { BedCreateComponent } from './bed.create.component';\n// import { CommonService } from '../shared/services/index';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n//import { BedsModule } from '../beds/beds.module'\n\n\n@NgModule({\n    imports: [CommonModule, BrowserModule,  FormsModule, ReactiveFormsModule],\n    declarations: [BedCreateComponent],\n    exports: [BedCreateComponent, FormsModule, ReactiveFormsModule]\n})\n\nexport class BedCreateModule { }\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/bed_create/bed.create.module.ts","import { Route } from '@angular/router';\nimport { BedCreateComponent } from './index';\nimport { HospitalListResolver } from '../services/resolvers/hospital-resolver.services';\nimport { CameraListResolver } from '../services/resolvers/camera-resolver.services';\nimport { DepartmentListResolver } from '../services/resolvers/department-resolver.services';\nimport { BedListResolver } from '../services/resolvers/bed-resolver.services';\nimport { DeviceListResolver } from '../services/resolvers/device-resolver.services';\n\nexport const BedCreateRoutes: Route[] = [\n    {\n        path: 'bed/create',\n        component: BedCreateComponent,\n        resolve:{\n                    hospitalList:HospitalListResolver,\n                    cameraList:CameraListResolver,\n                    departmentList:DepartmentListResolver,\n                    bedList:BedListResolver,\n                    deviceList:DeviceListResolver\n                }\n    },\n    {\n        path: 'bed/create/:id',\n        component: BedCreateComponent,\n        resolve:{\n                    hospitalList:HospitalListResolver,\n                    cameraList:CameraListResolver,\n                    departmentList:DepartmentListResolver,\n                    bedList:BedListResolver,\n                    deviceList:DeviceListResolver\n                }\n    }\n];\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/bed_create/bed.create.routes.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './bed.create.component';\nexport * from './bed.create.routes';\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/bed_create/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".bed .widget-user-2 .widget-user-username, .bed .widget-user-2 .widget-user-desc {\\n    margin-left: 0;\\n}\\n\\n.bed .widget-user-2 .widget-user-header {\\n    padding: 5px;\\n}\\n\\n.bed .card-list-key {\\n    display: inline-block;\\n    width: 85px;\\n    color: #666;\\n}\\n\\n.bed .card-list-value {\\n    /*display: inline-block;*/\\n}\\n\\n.bed .box-widget {\\n    border: solid 1px #7fdff7;\\n}\\n\\n.bed .box-widget:hover .widget-user-header {\\n    background-color: #00c0ef;\\n    color: #fff;\\n}\\n\\n.bed .widget-user-2 .box-footer ul li a:hover {\\n    cursor: default;\\n}\\n\\n.bed .widget-user-2 .box-footer ul li a.active-link {\\n    /*text-decoration: underline;*/\\n}\\n\\n.bed .widget-user-2 .box-footer ul li a.active-link:hover {\\n    cursor: pointer;\\n}\\n\\n.bed .action-buttons {\\n    margin-top: 10px;\\n}\\n\\n.bed .action-buttons a {\\n    display: inline-block;\\n    margin-right: 10px;\\n}\\n\\n.bed .action-buttons a i {\\n    font-size: 20px;\\n}\\n\\n.bed table.table {\\n    border: 1px solid #d2d6de;\\n    display: table;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/beds.component.css\n// module id = ../../../../../src/app/beds/beds.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header bed\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h1 class=\\\"sub-page-header\\\">\\n              Beds\\n              <small>(All)</small>\\n            </h1>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"top-action-buttons\\\">\\n                <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"clickBedGridView()\\\" [ngClass]=\\\"activeBtnGrid\\\" class=\\\"btn bg-default\\\" title=\\\"Grid View\\\"><i class=\\\"fa fa-th\\\"></i></a>\\n                    <a (click)=\\\"clickBedListView()\\\" [ngClass]=\\\"activeBtnList\\\" class=\\\"btn bg-default btn-mid-border\\\" title=\\\"List View\\\"><i class=\\\"fa fa-align-justify\\\"></i></a>\\n                    <a *ngIf=\\\"backButton\\\" (click)=\\\"userCheck()\\\" [ngClass]=\\\"activeBtnList\\\" class=\\\"btn bg-default btn-mid-border\\\" title=\\\"Back\\\"><i class=\\\"fa fa-arrow-left\\\"></i></a>\\n                    <a (click)=\\\"routeCreateBed()\\\" *ngIf=\\\"roleWrite\\\" class=\\\"btn bg-default\\\" title=\\\"Create Bed\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-bed\\\"></i> Beds</li>\\n            </ol>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"bedSearchboxInput\\\" #listFilter (keyup)=\\\"0\\\" placeholder=\\\"Search Beds...\\\">\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n<section class=\\\"bed\\\">\\n    <div class=\\\"loading-spinner\\\" *ngIf=\\\"loading\\\"></div>\\n    <div *ngIf=\\\"!loading\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"bedGridView\\\">\\n                <div class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-3 col-xxl-5\\\" *ngFor=\\\"let bed of beds | BedSearch:listFilter.value;\\\">\\n                <div class=\\\"box box-widget widget-user-2\\\">\\n                    <div class=\\\"widget-user-header bg-info\\\">\\n                        <h3 class=\\\"widget-user-username text-ellipsis\\\" title=\\\"{{bed.name}}\\\">{{bed.name}}</h3>\\n                        <div class=\\\"action-buttons widget-user-desc\\\">\\n                            <a (click)=\\\"clickEdit(bed.id)\\\" *ngIf=\\\"roleWrite\\\">\\n                                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                            <a (click)=\\\"clickDeleteConfirm(bed.id,bed.name)\\\" *ngIf=\\\"roleWrite\\\">\\n                                <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"box-footer no-padding\\\">\\n                        <ul class=\\\"nav nav-stacked\\\">\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Hospital</span><span class=\\\"card-list-value\\\" title=\\\"{{bed.hospital}}\\\">: {{bed.hospital}}</span></a></li>\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Department</span><span class=\\\"card-list-value\\\" title=\\\"{{bed.icu}}\\\">: {{bed.icu}}</span></a></li>\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Camera</span><span class=\\\"card-list-value\\\" title=\\\"{{bed.camera}}\\\">: {{bed.camera}}</span></a></li>\\n                            <li>\\n                                <a *ngIf=\\\"bed.patient !== null\\\" (click)=\\\"routPatientDetails(bed.patientID)\\\" class=\\\"text-ellipsis active-link\\\"><span class=\\\"card-list-key\\\">Patient</span><span class=\\\"card-list-value\\\" title=\\\"{{bed.patient}}\\\">: <strong>{{bed.patient}}</strong></span></a>\\n                                <a *ngIf=\\\"bed.patient === null\\\" class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Patient</span><span class=\\\"card-list-value\\\" title=\\\"{{bed.patient}}\\\">: <em >empty</em></span></a>\\n                            </li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"bedListView\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <table class=\\\"table table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>\\n                                Name\\n                            </th>\\n                            <th>\\n                                Hospital\\n                            </th>\\n                            <th>\\n                                Department\\n                            </th>\\n                            <th>\\n                                Camera\\n                            </th>\\n                            <th>\\n                                Patient\\n                            </th>\\n                            <th>\\n                                Action\\n                            </th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let bed of beds | BedSearch:listFilter.value;\\\">\\n                            <td>\\n                                {{bed.name}}\\n                            </td>\\n                            <td>\\n                                {{bed.hospital}}\\n                            </td>\\n                            <td>\\n                                {{bed.icu}}\\n                            </td>\\n                            <td>\\n                                {{bed.camera}}\\n                            </td>\\n                            <td>\\n                                {{bed.patient}}\\n                            </td>\\n                            <td>\\n                                <div class=\\\"action-buttons\\\">\\n                                    <a (click)=\\\"clickEdit(bed.id)\\\" *ngIf=\\\"roleWrite\\\">\\n                                        <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </a>\\n                                    <a (click)=\\\"clickDeleteConfirm(bed.id,bed.name)\\\" *ngIf=\\\"roleWrite\\\">\\n                                        <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </a>\\n                                </div>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n<!-- Delete Modal -->\\n<div class=\\\"modal deleteConfirmPopUp\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"clickClosePopup()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Bed Delete Confirmation</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you sure you want to delete bed <strong>{{deleteBedname}}</strong>?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" (click)=\\\"clickClosePopup()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                <button type=\\\"button\\\" (click)=\\\"clickDelete()\\\" class=\\\"btn btn-primary\\\">Delete</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/beds.component.html\n// module id = ../../../../../src/app/beds/beds.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationStart } from '@angular/router';\nimport { RoleServices } from '../services/presence/role.services';\nimport { ModelMessage } from '../model_message/model.message';\nimport { BedServices } from '../services/presence/bed.services';\nimport { DepartmentServices } from '../services/presence/department.services';\nimport { HospitalServices } from '../services/presence/hospital.services';\nimport { PatientServices } from '../services/presence/patient.services';\nimport { CameraServices } from '../services/presence/camera.services';\nimport { BedSearch } from '../beds/search';\nimport * as $ from 'jquery';\n\n@Component({\n    moduleId: module.id,\n    selector: 'cm-beds',\n    templateUrl: 'beds.component.html',\n    styleUrls: ['beds.component.css']\n})\n\nexport class BedsComponent implements OnInit {\n\n    errorMessage: string;\n    activeBtnGrid: string = \"bg-info\";\n    activeBtnList: string = \"\";\n    bedGridView: boolean = true;\n    bedListView: boolean = false;\n    roleWrite: boolean = false;\n    loading: boolean = true;\n    userData: any;\n    userRoleType: any;\n    beds: any[] = [];\n    allBeds: any;\n    allIcus: any[] = [];\n    allCameras: any[] = [];\n    allPatients: any[] = [];\n    allHospitals: any[] = [];\n    bedSearchboxInput: any;\n    backButton: boolean = false;\n    deleteBedID: string;\n    deleteBedname: string;\n\n    constructor(private router: Router,private route: ActivatedRoute, private roleServices: RoleServices, private bedServices: BedServices, private departmentServices: DepartmentServices, private hospitalServices: HospitalServices, private patientServices:PatientServices, private cameraServices: CameraServices, private modelMessage: ModelMessage) { }\n\n    prepareBedData() {\n        let data = [];\n        \n        this.allBeds.forEach(currentBed => {\n            this.allIcus.forEach(currentIcu => {\n                if (currentBed.icuId === currentIcu.id) {\n                    this.allCameras.forEach(currentCamera => {\n                        if (currentBed.cameraId === currentCamera.id) {\n                            this.allHospitals.forEach(currentHospital => {\n                                if (currentBed.hospitalId === currentHospital.id) {\n                                    let assignedPatientName = null, assignedPatientId = null;\n                                    this.allPatients.every((currentPatient, index, _ary) => {\n                                        if (currentPatient.bedId === currentBed.id) {\n                                            assignedPatientName = currentPatient.name;\n                                            assignedPatientId = currentPatient.id;\n                                            return false;\n                                           \n                                        }\n                                        return true;\n                                    });\n                                    let bedDetails = {\n                                        id: currentBed.id,\n                                        name: currentBed.name,\n                                        hospital: currentHospital.name,\n                                        icu: currentIcu.name,\n                                        camera: currentCamera.name,\n                                        patient: assignedPatientName,\n                                        patientID: assignedPatientId\n                                    };\n                                    data.push(bedDetails);\n                                };\n                            });\n                        }\n                    });\n                }\n            });\n        });\n        this.beds = data;\n        this.loading = false;\n    }\n   \n    userCheck() {\n        this.backButton = false;\n        this.clickBedGridView();  \n    }\n\n    clickEdit(id) {\n        this.router.navigate(['/bed/create', id]);\n    }\n\n    clickDeleteConfirm(id, bName) {\n        this.deleteBedID = id;\n        this.deleteBedname = bName;\n        $('.deleteConfirmPopUp').show();\n    }\n\n    checkBedDependency() {\n        let isBedOccupied = false;\n        this.allPatients.every((currentPatient, index, _ary) => {\n            if (currentPatient.bedId === this.deleteBedID) {\n                isBedOccupied = true;\n                return false;\n            }\n            return true;\n        });\n        return isBedOccupied;\n    }\n\n    getBeds() {\n        let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n         if(hospitalId){\n           this.bedServices.getAllBedsByHospitalID(hospitalId).subscribe(\n            data => {\n                this.allBeds = data;\n                this.prepareBedData();\n            },\n            error => {\n                console.log(error);\n            }\n           );\n        }else{\n          this.bedServices.getAllBeds().subscribe(\n            data => {\n                this.allBeds = data;\n                this.prepareBedData();\n            },\n            error => {\n                console.log(error);\n            }\n          );\n        }\n    }\n\n    clickDelete() {\n        let msg = 'Bed ' + this.deleteBedname + ' deleted';\n        if (!this.checkBedDependency()) {\n            this.bedServices.deleteBed(this.deleteBedID).subscribe(\n                data => {\n                    this.userCheck();\n                    this.getBeds();\n                    $('.deleteConfirmPopUp').hide();\n                    this.modelMessage.successMessage(msg);\n                },\n                error => {\n                    $('.deleteConfirmPopUp').hide();\n                    this.modelMessage.errorMessage(error);\n                }\n            );\n        } else {\n            $('.deleteConfirmPopUp').hide();\n            let deleteErrMsg = \"Unable to delete the Bed since there are other resources linked to it. Delete dependent resources and try again\";\n            this.modelMessage.successMessage(deleteErrMsg);\n        }\n\n    }\n\n    clickClosePopup() {\n        $('.deleteConfirmPopUp').hide();\n    }\n\n    clickBedGridView() {\n        this.activeBtnGrid = \"bg-info\";\n        this.activeBtnList = \"\";\n        this.bedGridView = true;\n        this.bedListView = false;\n    }\n\n    clickBedListView() {\n        this.activeBtnGrid = \"\";\n        this.activeBtnList = \"bg-info\";\n        this.bedGridView = false;\n        this.bedListView = true;\n    }\n\n    clickSearch() {\n        this.bedGridView = false;\n        this.bedListView = false;\n    }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    routeCreateBed() {\n        this.router.navigate(['/bed/create']);\n    }\n\n    routPatientDetails(id) {\n        this.router.navigate(['/patient/details/', id]);\n    }\n\n    ngOnInit() {\n        let userRole = this.roleServices.getRole('bed');\n        if (userRole.write) {\n            this.roleWrite = true;\n        }\n        this.allBeds = this.route.snapshot.data['bedList'];\n        this.allIcus = this.route.snapshot.data['departmentList'];\n        this.allCameras =  this.route.snapshot.data['cameraList'];\n        this.allHospitals = this.route.snapshot.data['hospitalList'];\n        let patientsList = this.route.snapshot.data['patientList'];\n        let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n        if(hospitalId){\n            this.allPatients = patientsList.filter(patient => patient.status === \"Admitted\");\n        }else{\n            this.allPatients = patientsList;\n        }\n        this.userRoleType = JSON.parse(sessionStorage.getItem('userRole'));\n        this.userCheck();\n        this.prepareBedData();\n\n        this.route.params.subscribe(params => {\n            if (params['search']) {\n                this.bedSearchboxInput= params['search'];\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/beds.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { BedsComponent } from './beds.component';\nimport { BedSearch } from '../beds/search'\n\n@NgModule({\n    imports: [CommonModule,BrowserModule,FormsModule],\n    declarations: [BedsComponent,BedSearch],\n    exports: [BedsComponent]\n})\n\nexport class BedsModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/beds.module.ts","import { Route } from '@angular/router';\nimport { BedsComponent } from './index';\nimport { HospitalListResolver } from '../services/resolvers/hospital-resolver.services';\nimport { CameraListResolver } from '../services/resolvers/camera-resolver.services';\nimport { DepartmentListResolver } from '../services/resolvers/department-resolver.services';\nimport { PatientListResolver } from '../services/resolvers/patient-resolver.services';\nimport { BedListResolver } from '../services/resolvers/bed-resolver.services';\n\nexport const BedsRoutes: Route[] = [\n  {\n    path: 'beds',\n    component: BedsComponent,\n    resolve:{\n              hospitalList:HospitalListResolver,\n              cameraList:CameraListResolver,\n              departmentList:DepartmentListResolver,\n              patientList:PatientListResolver,\n              bedList:BedListResolver\n            }\n  },\n  {\n    path: 'beds/:search',\n    component: BedsComponent,\n    resolve:{\n              hospitalList:HospitalListResolver,\n              cameraList:CameraListResolver,\n              departmentList:DepartmentListResolver,\n              patientList:PatientListResolver,\n              bedList:BedListResolver\n            }\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/beds.routes.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './beds.component';\nexport * from './beds.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/index.ts","import {Injectable, Pipe, PipeTransform} from '@angular/core';\nimport * as $ from 'jquery';\n\n@Pipe({\n  name: 'BedSearch'\n})\n\n@Injectable()\n\nexport class BedSearch implements PipeTransform {\n    transform(value: any, searchTerm: string) \n    {\n       let filter = searchTerm.toUpperCase();\n       return filter ? value.filter(bed=> bed.name.toUpperCase().indexOf(filter) != -1) : value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/beds/search.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".camera-create .radio {\\n    display: inline-block;\\n    margin-right: 10px;\\n}\\n.camera-create .data-lable {\\n    display: block;\\n    padding-top: 7px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/camera_create/camera.create.component.css\n// module id = ../../../../../src/app/camera_create/camera.create.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header patient-create\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h1 class=\\\"sub-page-header\\\">\\n        Camera\\n        <small>({{mode}})</small>\\n      </h1>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"top-action-buttons\\\">\\n                <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"routeCameras()\\\" class=\\\"btn bg-default\\\" title=\\\"Back\\\"><i class=\\\"fa fa-arrow-left\\\"></i></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li><a (click)=\\\"routeCameras()\\\"><i class=\\\"fa fa-camera\\\"></i> Camera</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-plus\\\"></i> {{mode}} Camera</li>\\n            </ol>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n        </div>\\n    </div>\\n</section>\\n<section class=\\\"camera-create\\\">\\n    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"createCameraForm\\\" (ngSubmit)=\\\"save(createCameraForm.value, createCameraForm.valid)\\\" novalidate>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"box box-info\\\">\\n                    <div class=\\\"box-header with-border\\\">\\n                        <h3 class=\\\"box-title\\\">{{mode}} Camera</h3>\\n                    </div>\\n                    <div class=\\\"box-body\\\">\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Hospital</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <span class=\\\"data-lable\\\">{{hospitalName}}</span>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                           <label class=\\\"col-sm-2 control-label\\\">Department</label>\\n                           <div class=\\\"col-sm-10\\\">\\n                               <select class=\\\"form-control\\\" formControlName=\\\"icuId\\\"   (change)=\\\"getDepartmentName($event.target.value)\\\" required>\\n                                 <option value=\\\"\\\" selected=\\\"selected\\\">Choose Department</option>\\n                                 <option *ngFor=\\\"let department of departments\\\"[value]=\\\"department.id\\\">{{department.name}}</option>\\n                             </select>\\n                             <small class=\\\"form-error\\\" [hidden]=\\\"createCameraForm.controls.icuId.valid || (createCameraForm.controls.icuId.pristine && !submitted)\\\">\\n                                  Select department type\\n                               </small>       \\n                           </div>\\n                       </div>\\n\\n                       <div class=\\\"form-group\\\">\\n                           <label class=\\\"col-sm-2 control-label\\\">Camera S/N<sup>*</sup> </label>\\n                           <div class=\\\"col-sm-10\\\">\\n                               <input type=\\\"text\\\" class=\\\"form-control\\\"   formControlName=\\\"camNumber\\\" placeholder=\\\"Enter Camera Serial Number\\\" (change)=\\\"camNameCheck($event.target.value)\\\" pattern=\\\".{1,30}\\\" required>\\n                               <small class=\\\"form-error\\\" [hidden]=\\\"createCameraForm.controls.camNumber.valid || (createCameraForm.controls.camNumber.pristine && !submitted)\\\">\\n                                            Camera serial number is required. Maximum limit is 30 characters.\\n                                        </small>\\n                           </div>\\n                       </div>\\n\\n                       <div class=\\\"form-group\\\">\\n                           <label class=\\\"col-sm-2 control-label\\\">Camera Name</label>\\n                           <div class=\\\"col-sm-10\\\">\\n                               <input type=\\\"text\\\" disabled class=\\\"form-control\\\" placeholder=\\\"Enter Camera Name\\\" formControlName=\\\"name\\\" [(ngModel)]=\\\"cameraName\\\">\\n                               <small class=\\\"form-error\\\" [hidden]=\\\"createCameraForm.controls.name.valid || (createCameraForm.controls.name.pristine && !submitted)\\\">\\n                                   Camera name is required\\n                               </small>\\n                               <small class=\\\"form-error\\\" *ngIf = \\\"!acceptableCameraName\\\">\\n                                     Camera name already exists.\\n                               </small>\\n                           </div>\\n                       </div>\\n\\n                       <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Description<sup>*</sup></label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Description \\\" formControlName=\\\"description\\\" required>\\n                                <small class=\\\"form-error\\\" [hidden]=\\\"createCameraForm.controls.description.valid || (createCameraForm.controls.description.pristine && !submitted)\\\" >\\n                                    Camera description is required.\\n                                </small>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"box-footer text-align-right\\\" *ngIf=\\\"!disableCreateAction\\\">\\n                            <button type=\\\"button\\\"  (click)=\\\"routeCameras()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-info margin\\\">\\n                                <span *ngIf=\\\"createMode\\\">Create</span>\\n                                <span *ngIf=\\\"!createMode\\\">Update</span>\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/camera_create/camera.create.component.html\n// module id = ../../../../../src/app/camera_create/camera.create.component.html\n// module chunks = 0","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { DepartmentServices } from '../services/presence/department.services';\nimport { HospitalServices } from '../services/presence/hospital.services';\nimport { CameraServices } from '../services/presence/camera.services';\nimport { CameraInterface } from './camera.interface';\nimport { ModelMessage } from '../model_message/model.message';\n\n@Component({\n    moduleId: module.id,\n    selector: 'cm-camera-create',\n    templateUrl: 'camera.create.component.html',\n    styleUrls: ['camera.create.component.css']\n})\n\nexport class CameraCreateComponent implements OnInit, OnDestroy {\n\n    public createCameraForm: FormGroup;\n    public submitted: boolean;\n    public events: any[] = [];\n\n    cameras: any;\n    id: any;\n    private sub: any;\n    hospitals: any;\n    departments: any;\n    cameraData: any;\n    userData: any;\n    hospitalList =  [];\n    hospitalName: any;\n    mode: string = 'Create';\n    createMode: boolean = true;\n    icus: any;\n    editPatientData: any;\n    departmentName: any;\n    departmentId: any;\n    acceptableCameraName: boolean = true;\n    cameraName: any;\n    departmentTextboxInput: any;\n    department: any;\n    cameraNumber: any;\n    hospitalId: any;\n    disableCreateAction: boolean = false;\n\n    constructor(private router: Router, private route: ActivatedRoute, private fb: FormBuilder, private cameraServices: CameraServices, private hospitalServices: HospitalServices, private departmentServices: DepartmentServices, private modelMessage: ModelMessage) { }\n\n    camNameCheck(cameraSerialNumber) {\n        this.cameraName = this.departmentName + '-CAM-' + cameraSerialNumber;\n        let existingCameraName = this.cameras.find(camera => camera.name === this.cameraName);\n        if(existingCameraName){\n            this.acceptableCameraName = false;\n        }else{\n            this.acceptableCameraName = true;\n        }\n    }\n\n    getDepartmentName(departmentId) {\n        this.departmentName = this.departments.find(department => department.id == departmentId).name;\n    }\n\n    save(model: CameraInterface, isValid: boolean) {\n        this.submitted = true;\n        if (model.hospitalId === '') {\n            model.hospitalId = this.userData.hospitalId;\n        }\n        if (isValid && this.acceptableCameraName) {\n            if (!this.createMode) {\n                this.disableCreateAction = true;\n                this.cameraServices.updateCamera(model).subscribe(\n                    data => {\n                        let msg = 'Camera ' + model.name + ' was updated ';\n                        this.modelMessage.successMessage(msg);\n                        this.router.navigate(['/cameras']);\n                    },\n                    error => {\n                        this.disableCreateAction = false;\n                        this.modelMessage.errorMessage(error);\n                    }\n                );\n            } else {\n                this.disableCreateAction = true;\n                this.cameraServices.createCamera(model).subscribe(\n                    data => {\n                        let msg = 'Camera ' + model.name + ' was created ';\n                        this.modelMessage.successMessage(msg);\n                        this.router.navigate(['/cameras']);\n                    },\n                    error => {\n                        this.disableCreateAction = false;\n                        this.modelMessage.errorMessage(error);\n                    }\n                );\n            }\n\n        }\n    }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    routeCameras() {\n        this.router.navigate(['/cameras']);\n    }\n\n    createCamera() {\n        this.createCameraForm = new FormGroup\n            ({\n                description: new FormControl(),\n                hospitalId: new FormControl(this.hospitalId),\n                icuId: new FormControl('', <any>Validators.required),\n                id: new FormControl(''),\n                name: new FormControl('', <any>Validators.required),\n                status: new FormControl('ACTIVE'),\n                zoomUserId: new FormControl(''),\n                camNumber: new FormControl('')\n\n            })\n    }\n\n    editCamera(data) {\n        this.createCameraForm = new FormGroup\n            ({\n                description: new FormControl(data.description),\n                hospitalId: new FormControl(data.hospitalId),\n                icuId: new FormControl(data.icuId, <any>Validators.required),\n                id: new FormControl(data.id),\n                name: new FormControl(data.name, <any>Validators.required),\n                status: new FormControl(data.status),\n                zoomUserId: new FormControl(data.zoomUserId),\n                camNumber: new FormControl(data.name.substring(data.name.lastIndexOf(\"-\") + 1))\n            });\n    }\n\n    ngOnInit() {\n        this.userData = JSON.parse(sessionStorage.getItem('userData'));\n        this.hospitalId = this.userData.hospitalId;\n        this.hospitalList = this.route.snapshot.data['hospitalList'];\n        this.hospitalName = this.hospitalList.find(hospital => hospital.id == this.userData.hospitalId).name;\n        this.cameras =  this.route.snapshot.data['cameraList'];\n        this.departments = this.route.snapshot.data['departmentList'];\n        this.createCamera();\n        this.sub = this.route.params.subscribe(params => {\n            if (params['id']) {\n                this.createMode = false;\n                this.mode = 'Edit';\n                this.cameraData = this.cameras.find(camera => camera.id == params['id']);\n                this.cameraName = this.cameraData.name;\n                this.getDepartmentName(this.cameraData.icuId);\n                this.editCamera(this.cameraData);\n            }\n        });\n    }\n\n    ngOnDestroy() { }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/camera_create/camera.create.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CameraCreateComponent } from './camera.create.component';\n\n@NgModule({\n    imports: [CommonModule, BrowserModule, FormsModule, ReactiveFormsModule],\n    declarations: [CameraCreateComponent],\n    exports: [CameraCreateComponent, FormsModule, ReactiveFormsModule]\n})\n\nexport class CameraCreateModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/camera_create/camera.create.module.ts","import { Route } from '@angular/router';\nimport { CameraCreateComponent } from './index';\nimport { HospitalListResolver } from '../services/resolvers/hospital-resolver.services';\nimport { CameraListResolver } from '../services/resolvers/camera-resolver.services';\nimport { DepartmentListResolver } from '../services/resolvers/department-resolver.services';\n\nexport const CameraCreateRoutes: Route[] = [\n    {\n        path: 'camera/create',\n        component: CameraCreateComponent,\n        resolve:{\n                    hospitalList:HospitalListResolver,\n                    cameraList:CameraListResolver,\n                    departmentList:DepartmentListResolver\n                }\n    }, \n    {\n        path: 'camera/create/:id',\n        component: CameraCreateComponent,\n        resolve:{\n                    hospitalList:HospitalListResolver,\n                    cameraList:CameraListResolver,\n                    departmentList:DepartmentListResolver\n                }\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/camera_create/camera.create.routes.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './camera.create.component';\nexport * from './camera.create.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/camera_create/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".cameras .btn-circle {\\n    width: 30px;\\n    height: 30px;\\n    text-align: center;\\n    padding: 6px 0;\\n    font-size: 12px;\\n    line-height: 1.428571429;\\n    border-radius: 15px;\\n}\\n\\n.cameras .btn-success {\\n    margin-right: 35px;\\n}\\n\\n.cameras .widget-user-2 .widget-user-header {\\n    padding: 5px;\\n}\\n\\n.cameras .widget-user-2 .widget-user-image>img {\\n    width: 100px;\\n}\\n\\n.cameras .widget-user-2 .widget-user-username, .cameras .widget-user-2 .widget-user-desc {\\n    margin-left: 5px;\\n}\\n\\n.cameras .card-list-key {\\n    display: inline-block;\\n    width: 90px;\\n    color: #666;\\n}\\n\\n.cameras .card-list-value {\\n    /*display: inline-block;*/\\n}\\n\\n.cameras .box-widget {\\n    border: solid 1px #7fdff7;\\n}\\n\\n.cameras .box-widget:hover .widget-user-header, .cameras .box-widget:hover .widget-user-header i {\\n    background-color: #00c0ef;\\n    color: #fff;\\n}\\n\\n.cameras .widget-user-2 .box-footer ul li a:hover {\\n    cursor: default;\\n}\\n\\n.cameras .btn-bitbucket, .cameras .btn-flickr {\\n    background-color: #0099bf;\\n}\\n\\n.cameras .btn-social {\\n    padding-left: 30px;\\n    padding-bottom: 2px;\\n    padding-top: 2px;\\n}\\n\\n.cameras .btn-social> :first-child {\\n    width: 28px;\\n    line-height: 25px;\\n    font-size: 20px;\\n}\\n\\n.cameras .action-buttons a {\\n    display: inline-block;\\n    margin-right: 10px;\\n}\\n\\n.cameras .action-buttons a i {\\n    font-size: 20px;\\n}\\n\\n.cameras table.table {\\n    border: 1px solid #d2d6de;\\n    display: table;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/cameras.component.css\n// module id = ../../../../../src/app/cameras/cameras.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header cameras\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h1 class=\\\"sub-page-header\\\">\\n              Camera\\n              <small>(All)</small>\\n            </h1>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"top-action-buttons\\\">\\n                <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"clickCameraGridView()\\\" [ngClass]=\\\"activeBtnGrid\\\" class=\\\"btn bg-default\\\" title=\\\"Grid View\\\"><i class=\\\"fa fa-th\\\"></i></a>\\n                    <a (click)=\\\"clickCameraListView()\\\" [ngClass]=\\\"activeBtnList\\\" class=\\\"btn bg-default btn-mid-border\\\" title=\\\"List View\\\"><i class=\\\"fa fa-align-justify\\\"></i></a>\\n                    <a (click)=\\\"routeCreateCamera()\\\" *ngIf=\\\"roleWrite\\\" class=\\\"btn bg-default\\\" title=\\\"Create Camera\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-camera\\\"></i> Cameras</li>\\n            </ol>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"cameraSearchbox\\\" #listFilter (keyup)=\\\"0\\\" placeholder=\\\"Search Cameras...\\\">\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n<section class=\\\"cameras\\\">\\n    <div class=\\\"loading-spinner\\\" *ngIf=\\\"loading\\\"></div>\\n    <div *ngIf=\\\"!loading\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"cameraGridView\\\">\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-3 col-xxl-5\\\" *ngFor=\\\"let camera of cameras | CameraSearch:listFilter.value;\\\">\\n                <div class=\\\"box box-widget widget-user-2\\\">\\n                    <div class=\\\"widget-user-header bg-info\\\">\\n                        <h3 class=\\\"widget-user-username text-ellipsis\\\" title=\\\"{{camera.name}}\\\">{{camera.name}}</h3>\\n                        <div class=\\\"action-buttons widget-user-desc\\\" *ngIf=\\\"roleWrite\\\">\\n                            <a (click)=\\\"clickEdit(camera.id)\\\">\\n                                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                            <a (click)=\\\"clickDeleteConfirm(camera.id, camera.name)\\\">\\n                                <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"box-footer no-padding\\\">\\n                        <ul class=\\\"nav nav-stacked\\\">\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Description</span><span class=\\\"card-list-value\\\" title=\\\"{{camera.description}}\\\">: {{camera.description}}</span></a></li>\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Hospital</span><span class=\\\"card-list-value\\\" title=\\\"{{camera.hospitalName}}\\\">: {{camera.hospitalName}}</span></a></li>\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Department</span><span class=\\\"card-list-value\\\" title=\\\"{{camera.icuName}}\\\">: {{camera.icuName}}</span></a></li>\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Status</span><span class=\\\"card-list-value\\\" title=\\\"{{camera.status}}\\\">: {{camera.status}}</span></a></li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"cameraListView\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <table class=\\\"table table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>\\n                                Description\\n                            </th>\\n                            <th>\\n                                Hospital\\n                            </th>\\n                            <th>\\n                                Department\\n                            </th>\\n                            <th>\\n                                Name\\n                            </th>\\n                            <th>\\n                                Status\\n                            </th>\\n                            <th *ngIf=\\\"roleWrite\\\">\\n                                Action\\n                            </th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let camera of cameras | CameraSearch:listFilter.value;\\\">\\n                            <td>\\n                                {{camera.description}}\\n                            </td>\\n                            <td>\\n                                {{camera.hospitalName}}\\n                            </td>\\n                            <td>\\n                                {{camera.icuName}}\\n                            </td>\\n                            <td>\\n                                {{camera.name}}\\n                            </td>\\n                            <td>\\n                                {{camera.status}}\\n                            </td>\\n                            <td *ngIf=\\\"roleWrite\\\">\\n                                <div class=\\\"action-buttons\\\">\\n                                    <a (click)=\\\"clickEdit(camera.id)\\\">\\n                                        <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </a>\\n                                    <a (click)=\\\"clickDeleteConfirm(camera.id, camera.name)\\\">\\n                                        <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </a>\\n                                </div>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n\\n<div class=\\\"modal deleteConfirmPopUp\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"clickClosePopup()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Camera Delete Confirmation</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you sure you want to delete camera <strong>{{deleteCameraname}}</strong>?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" (click)=\\\"clickClosePopup()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                <button type=\\\"button\\\" (click)=\\\"clickDelete()\\\" class=\\\"btn btn-primary\\\">Delete</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/cameras.component.html\n// module id = ../../../../../src/app/cameras/cameras.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { RoleServices } from '../services/presence/role.services';\nimport { BedServices } from '../services/presence/bed.services';\nimport { DepartmentServices } from '../services/presence/department.services';\nimport { HospitalServices } from '../services/presence/hospital.services';\nimport { CameraServices } from '../services/presence/camera.services';\nimport { MeetingServices } from '../services/presence/meeting.services';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { ModelMessage } from '../model_message/model.message';\nimport {CameraSearch} from '../cameras/search';\nimport * as $ from 'jquery';\n\n@Component({\n    moduleId: module.id,\n    selector: 'cameras',\n    templateUrl: './cameras.component.html',\n    styleUrls: ['cameras.component.css']\n})\n\nexport class CamerasComponent implements OnInit {\n\n    errorMessage: string;\n    allCameras: any;\n    activeBtnGrid: string = \"bg-info\";\n    activeBtnList: string = \"\";\n    cameraGridView: boolean = true;\n    cameraListView: boolean = false;\n    allHospitals: any;\n    allDepartments: any;\n    cameras: any;\n    roleWrite: boolean = false;\n    loading: boolean = true;\n    deleteCameraname:any;\n    deleteCameraID:any;\n    allBeds:any;\n    cameraSearchbox: string='';\n\n    constructor(private router: Router, private route: ActivatedRoute, private roleServices: RoleServices, private bedServices: BedServices, private cameraServices: CameraServices, private hospitalServices: HospitalServices, private departmentServices: DepartmentServices, private meetingServices: MeetingServices, private modelMessage: ModelMessage) { }\n    \n    prepareCameraData() {\n        let data = [];\n        this.allCameras.forEach(currentCamera => {\n            this.allHospitals.forEach(currentHospital => {\n                if (currentHospital.id === currentCamera.hospitalId) {\n                    this.allDepartments.forEach(currentDepartment => {\n                        if (currentDepartment.id === currentCamera.icuId) {\n                            let cameraDetails = {\n                                id: currentCamera.id,\n                                name: currentCamera.name,\n                                description: currentCamera.description,\n                                status: currentCamera.status,\n                                hospitalId: currentHospital.hospitalId,\n                                hospitalName: currentHospital.name,\n                                zoomUserId: currentCamera.zoomUserId,\n                                icuId: currentDepartment.icuId,\n                                icuName: currentDepartment.name,\n                            };\n                            data.push(cameraDetails);\n                        }\n                    });\n                }\n            });\n        });\n        this.cameras = data;\n        this.loading = false;\n    }\n\n    clickEdit(id) {\n        this.router.navigate(['/camera/create', id]);\n    }\n\n     checkCameraDependency() {\n       let isCameraMapped = false; \n       this.allBeds.every((currentBed, index, _ary) => {\n            if (currentBed.cameraId === this.deleteCameraID) {\n                isCameraMapped = true;\n                return false;\n            }\n            return true;\n       });\n       return isCameraMapped;\n    }    \n\n    clickDeleteConfirm(id, camName) {\n        this.deleteCameraID = id;\n        this.deleteCameraname = camName;\n        $('.deleteConfirmPopUp').show();\n    }\n\n    clickClosePopup() {\n        $('.deleteConfirmPopUp').hide();\n    }\n\n    getCameras() {\n        let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n         if(hospitalId){\n           this.cameraServices.getAllCamerasByHospitalID(hospitalId).subscribe(\n            data => {\n                this.allCameras = data;\n                this.prepareCameraData();\n            },\n            error => {\n                this.modelMessage.errorMessage(error);\n            }\n           );\n        }else{\n          this.cameraServices.getAllCameras().subscribe(\n            data => {\n                this.allCameras = data;\n                this.prepareCameraData();\n            },\n            error => {\n                this.modelMessage.errorMessage(error);\n            }\n          );\n        }\n    }\n\n    clickDelete() {\n        let msg = 'Camera ' +this.deleteCameraname +' deleted';\n        if(!this.checkCameraDependency())\n        {\n            $('.deleteConfirmPopUp').hide();\n            this.modelMessage.successMessage(msg);\n            this.cameraServices.deleteCamera(this.deleteCameraID).subscribe(\n                data => {\n                   this.getCameras();\n                   $('.deleteConfirmPopUp').hide();\n                   this.modelMessage.successMessage(msg);\n                },\n                error => {\n                    this.modelMessage.errorMessage(error);\n                }\n            );\n        }\n        else{\n            $('.deleteConfirmPopUp').hide();\n            let deleteErrMsg = \"Unable to delete the camera since there are other resources linked to it. Delete dependent resources and try again\";\n            this.modelMessage.successMessage(deleteErrMsg);\n        }\n    }\n\n    clickCameraGridView() {\n        this.activeBtnGrid = \"bg-info\";\n        this.activeBtnList = \"\";\n        this.cameraGridView = true;\n        this.cameraListView = false;\n    }\n\n    clickCameraListView() {\n        this.activeBtnGrid = \"\";\n        this.activeBtnList = \"bg-info\";\n        this.cameraGridView = false;\n        this.cameraListView = true;\n    }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    routeCreateCamera() {\n        this.router.navigate(['/camera/create']);\n    }\n\n    ngOnInit() {\n        let userRole = this.roleServices.getRole('camera');\n        if (userRole.write) {\n            this.roleWrite = true;\n        }\n        this.allDepartments = this.route.snapshot.data['departmentList'];\n        this.allCameras =  this.route.snapshot.data['cameraList'];\n        this.allHospitals = this.route.snapshot.data['hospitalList'];\n        this.allBeds = this.route.snapshot.data['bedList'];\n        this.prepareCameraData();\n\n        this.route.params.subscribe(params => {\n            if (params['search']) {\n                this.cameraSearchbox= params['search'];\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/cameras.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CamerasComponent } from './cameras.component';\nimport {CameraSearch} from '../cameras/search'\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n    imports: [CommonModule,BrowserModule,FormsModule],\n    declarations: [CamerasComponent,CameraSearch],\n    exports: [CamerasComponent]\n})\n\nexport class CamerasModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/cameras.module.ts","import { Route } from '@angular/router';\nimport { CamerasComponent } from './index';\nimport { HospitalListResolver } from '../services/resolvers/hospital-resolver.services';\nimport { CameraListResolver } from '../services/resolvers/camera-resolver.services';\nimport { DepartmentListResolver } from '../services/resolvers/department-resolver.services';\nimport { BedListResolver } from '../services/resolvers/bed-resolver.services';\n\nexport const CamerasRoutes: Route[] = [\n  {\n    path: 'cameras',\n    component: CamerasComponent,\n    resolve:{\n              hospitalList:HospitalListResolver,\n              cameraList:CameraListResolver,\n              departmentList:DepartmentListResolver,\n              bedList:BedListResolver\n            }\n  },\n  {\n    path: 'cameras/:search',\n    component: CamerasComponent,\n    resolve:{\n              hospitalList:HospitalListResolver,\n              cameraList:CameraListResolver,\n              departmentList:DepartmentListResolver,\n              bedList:BedListResolver\n            }\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/cameras.routes.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './cameras.component';\nexport * from './cameras.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/index.ts","import {Injectable, Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'CameraSearch'\n})\n\n@Injectable()\n\nexport class CameraSearch implements PipeTransform {\n    transform(value: any, searchTerm: string) \n    {\n       let filter = searchTerm.toUpperCase();\n       return filter ? value.filter(camera=> camera.name.toUpperCase().indexOf(filter) != -1) : value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/cameras/search.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".consultants .widget-user-2 .widget-user-username, .consultants .widget-user-2 .widget-user-desc {\\n    margin-left: 0;\\n}\\n\\n.consultants .widget-user-2 .widget-user-header {\\n    padding: 5px;\\n}\\n\\n.consultants .card-list-key {\\n    display: inline-block;\\n    width: 80px;\\n    color: #666;\\n}\\n\\n.consultants .card-list-value {\\n    /*display: inline-block;*/\\n}\\n\\n.consultants .box-widget {\\n    border: solid 1px #7fdff7;\\n}\\n\\n.consultants .box-widget:hover .widget-user-header {\\n    background-color: #00c0ef;\\n    color: #fff;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/consultants.component.css\n// module id = ../../../../../src/app/consultants/consultants.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header consultant\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h1 class=\\\"sub-page-header\\\">\\n              Consultants\\n              <small>(All)</small>\\n            </h1>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"top-action-buttons\\\">\\n                <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"clickConsultantGridView()\\\" [ngClass]=\\\"activeBtnGrid\\\" class=\\\"btn bg-default\\\" title=\\\"Grid View\\\"><i class=\\\"fa fa-th\\\"></i></a>\\n                    <a (click)=\\\"clickConsultantListView()\\\" [ngClass]=\\\"activeBtnList\\\" class=\\\"btn bg-default btn-mid-border\\\" title=\\\"List View\\\"><i class=\\\"fa fa-align-justify\\\"></i></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-bed\\\"></i> Consultants</li>\\n            </ol>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"consultantsSearchbox\\\" placeholder=\\\"Search Consultants...\\\" #listFilter (keyup)=\\\"0\\\">\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n<section class=\\\"consultants\\\">\\n    <div class=\\\"loading-spinner\\\" *ngIf=\\\"loading\\\"></div>\\n    <div *ngIf=\\\"!loading\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"consultantsGridView\\\">\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-3 col-xxl-5\\\" *ngFor=\\\"let consultant of consultants | ConsultantSearch:listFilter.value;\\\">\\n                <div class=\\\"box box-widget widget-user-2\\\">\\n                    <div class=\\\"widget-user-header bg-info\\\">\\n                        <h3 class=\\\"widget-user-username text-ellipsis\\\" title=\\\"{{consultant.firstName}} {{consultant.lastName}}\\\">{{consultant.firstName}} {{consultant.lastName}}</h3>\\n                        <h5 class=\\\"widget-user-desc\\\">{{consultant.qualification}}</h5>\\n                    </div>\\n                    <div class=\\\"box-footer no-padding\\\">\\n                        <ul class=\\\"nav nav-stacked\\\">\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Designation</span><span class=\\\"card-list-value\\\" title=\\\"{{consultant.designation}}\\\">: {{consultant.designation}}</span></a></li>\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Mobile</span><span class=\\\"card-list-value\\\" title=\\\"{{consultant.mobile}}\\\">: {{consultant.mobile}}</span></a></li>\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">E-mail</span><span class=\\\"card-list-value\\\" title=\\\"{{consultant.email}}\\\">: {{consultant.email}}</span></a></li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"consultantsListView\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <table class=\\\"table table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>\\n                                Name\\n                            </th>\\n                            <th>\\n                                Designation\\n                            </th>\\n                            <th>\\n                                Mobile\\n                            </th>\\n                            <th>\\n                                E-mail\\n                            </th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let consultant of consultants | ConsultantSearch:listFilter.value;\\\">\\n                            <td>\\n                                {{consultant.firstName}}\\n                            </td>\\n                            <td>\\n                                {{consultant.designation}}\\n                            </td>\\n                            <td>\\n                                {{consultant.mobile}}\\n                            </td>\\n                            <td>\\n                                {{consultant.email}}\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/consultants.component.html\n// module id = ../../../../../src/app/consultants/consultants.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { UserServices } from '../services/presence/user.services';\nimport { ConsultantSearch } from '../consultants/search';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'cm-consultants',\n    templateUrl: 'consultants.component.html',\n    styleUrls: ['consultants.component.css']\n})\n\nexport class ConsultantsComponent implements OnInit {\n\n    errorMessage: string;\n    activeBtnGrid: string = \"bg-info\";\n    activeBtnList: string = \"\";\n    consultants: any[] = [];\n    consultantsGridView: boolean = true;\n    consultantsListView: boolean = false;\n    loading: boolean = true;\n    consultantsSearchbox: any;\n\n    constructor(private router: Router, private route: ActivatedRoute, private userServices: UserServices) { }\n\n    getConsultants() {\n        this.userServices.getAllUsers().subscribe(data => {\n            let responseData:any = data || [];\n            responseData.forEach(currentConsultant => {\n                if (currentConsultant.userType == \"CC_CONSULTANT\") {\n                    let consultantDetails = {\n                        id: currentConsultant.id,\n                        userID: currentConsultant.userID,\n                        firstName: currentConsultant.firstName,\n                        lastName: currentConsultant.lastName,\n                        email: currentConsultant.email,\n                        designation: currentConsultant.designation,\n                        mobile: currentConsultant.mobile,\n                        landline: currentConsultant.landline,\n                        userType: currentConsultant.userType,\n                        qualification: currentConsultant.qualification,\n                        hospitalId: currentConsultant.hospitalId,\n                        zoomUserId: currentConsultant.zoomUserId,\n                        pmi: currentConsultant.pmi,\n                    };\n                    this.consultants.push(consultantDetails);\n                }\n            });\n            this.loading = false;\n        });\n    }\n\n    clickConsultantGridView() {\n        this.activeBtnGrid = \"bg-info\";\n        this.activeBtnList = \"\";\n        this.consultantsGridView = true;\n        this.consultantsListView = false;\n    }\n\n    clickConsultantListView() {\n        this.activeBtnGrid = \"\";\n        this.activeBtnList = \"bg-info\";\n        this.consultantsGridView = false;\n        this.consultantsListView = true;\n    }\n\n    routeCreateConsultant() { }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    ngOnInit() {\n        this.getConsultants()\n        this.route.params.subscribe(params => {\n            if (params['search']) {\n                this.consultantsSearchbox= params['search'];\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/consultants.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsultantsComponent } from './consultants.component';\nimport { ConsultantSearch } from '../consultants/search';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n    imports: [CommonModule,FormsModule],\n    declarations: [ConsultantsComponent,ConsultantSearch],\n    exports: [ConsultantsComponent]\n})\n\nexport class ConsultantsModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/consultants.module.ts","import { Route } from '@angular/router';\nimport { ConsultantsComponent } from './index';\n\nexport const ConsultantsRoutes: Route[] = [\n  {\n    path: 'consultants',\n    component: ConsultantsComponent\n  },\n  {\n    path: 'consultants/:search',\n    component: ConsultantsComponent\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/consultants.routes.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './consultants.component';\nexport * from './consultants.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/index.ts","import {Injectable, Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'ConsultantSearch'\n})\n\n@Injectable()\n\nexport class ConsultantSearch implements PipeTransform {\n    transform(value: any, searchTerm: string) \n    {\n       let filter = searchTerm.toUpperCase();\n       return filter ? value.filter(consultant=> consultant.firstName.toUpperCase().indexOf(filter) != -1) : value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/consultants/search.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dashboard .box-comments {\\n    background-color: #fff;\\n}\\n\\n.dashboard iframe.calendar {\\n    max-width: 100%;\\n    max-height: 100%;\\n}\\n\\n.dashboard .box-comments {\\n    height: 366px;\\n    overflow-x: auto;\\n}\\n\\n.dashboard .comment-text-notes {\\n    display: block;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/dashboard/dashboard.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"dashboard\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3 col-md-6 col-xs-6\\\" *ngIf=\\\"showPatients\\\">\\n            <div class=\\\"small-box bg-teal m-btn\\\">\\n                <div class=\\\"inner\\\">\\n                    <h3>{{countPatients}}</h3>\\n                    <p>Patients</p>\\n                </div>\\n                <div class=\\\"icon\\\">\\n                    <i class=\\\"fa fa-users\\\"></i>\\n                </div>\\n                <a (click)=\\\"routePatients()\\\" class=\\\"small-box-footer\\\">More info <i class=\\\"fa fa-arrow-circle-right\\\"></i></a>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-6 col-xs-6\\\" *ngIf=\\\"showHospitals\\\">\\n            <div class=\\\"small-box bg-teal m-btn\\\">\\n                <div class=\\\"inner\\\">\\n                    <h3>{{countHospitals}}</h3>\\n                    <p>Hospitals</p>\\n                </div>\\n                <div class=\\\"icon\\\">\\n                    <i class=\\\"fa fa-hospital-o\\\"></i>\\n                </div>\\n                <a (click)=\\\"routeHospitals()\\\" class=\\\"small-box-footer\\\">More info <i class=\\\"fa fa-arrow-circle-right\\\"></i></a>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-6 col-xs-6\\\" *ngIf=\\\"showBeds\\\">\\n            <div class=\\\"small-box bg-teal m-btn\\\">\\n                <div class=\\\"inner\\\">\\n                    <h3>{{countBeds}}</h3>\\n                    <p>Beds</p>\\n                </div>\\n                <div class=\\\"icon\\\">\\n                    <i class=\\\"fa fa-bed\\\"></i>\\n                </div>\\n                <a (click)=\\\"routeBeds()\\\" class=\\\"small-box-footer\\\">More info <i class=\\\"fa fa-arrow-circle-right\\\"></i></a>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-6 col-xs-6\\\" *ngIf=\\\"showConsultants\\\">\\n            <div class=\\\"small-box bg-teal m-btn\\\">\\n                <div class=\\\"inner\\\">\\n                    <h3>{{countConsultants}}</h3>\\n                    <p>Consultants</p>\\n                </div>\\n                <div class=\\\"icon\\\">\\n                    <i class=\\\"fa fa-user-md\\\"></i>\\n                </div>\\n                <a (click)=\\\"routeConsultants()\\\" class=\\\"small-box-footer\\\">More info <i class=\\\"fa fa-arrow-circle-right\\\"></i></a>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-6 col-xs-6\\\" *ngIf=\\\"showCameras\\\">\\n            <div class=\\\"small-box bg-teal m-btn\\\">\\n                <div class=\\\"inner\\\">\\n                    <h3>{{countCameras}}</h3>\\n                    <p>Cameras</p>\\n                </div>\\n                <div class=\\\"icon\\\">\\n                    <i class=\\\"fa fa-camera\\\"></i>\\n                </div>\\n                <a (click)=\\\"routeCameras()\\\" class=\\\"small-box-footer\\\">More info <i class=\\\"fa fa-arrow-circle-right\\\"></i></a>\\n            </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-6 col-xs-6\\\" *ngIf=\\\"showDepartments\\\">\\n            <div class=\\\"small-box bg-teal m-btn\\\">\\n                <div class=\\\"inner\\\">\\n                    <h3>{{countIcus}}</h3>\\n                    <p>Departments</p>\\n                </div>\\n                <div class=\\\"icon\\\">\\n                    <i class=\\\"fa fa-building-o\\\"></i>\\n                </div>\\n                <a (click)=\\\"routeDepartments()\\\" class=\\\"small-box-footer\\\">More info <i class=\\\"fa fa-arrow-circle-right\\\"></i></a>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-12 col-xs-12 \\\">\\n            <div class=\\\"box box-widget \\\">\\n                <div class=\\\"box-header with-border \\\">\\n                    <h3 class=\\\"box-title \\\">Doctor's Notes</h3>\\n                </div>\\n                <div class=\\\"box-footer box-comments \\\">\\n                    <div class=\\\"box-comment \\\" *ngFor=\\\"let note of notes \\\">\\n                        <img class=\\\"img-circle img-sm \\\" src=\\\"./assets/images/user01.png \\\" alt=\\\"User Image \\\">\\n                        <div class=\\\"comment-text \\\">\\n                            <div class=\\\"username \\\">\\n                                {{note.patientName}}\\n                                <span class=\\\"text-muted pull-right \\\">{{note.startTime | date:'medium'}}</span>\\n                            </div>\\n                            <span class=\\\"comment-text-notes\\\">{{note.details}}</span>\\n                            <span class=\\\"text-muted pull-right \\\">-{{note.consultantName}}</span>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { DashboardServices } from '../services/presence/dashboard.services';\nimport { NotesServices } from '../services/presence/notes.services';\nimport { RoleServices } from '../services/presence/role.services';\nimport { ModelMessage } from '../model_message/model.message';\nimport { PatientServices } from '../services/presence/patient.services';\n\n@Component({\n    moduleId: module.id,\n    selector: 'sd-dashboard',\n    templateUrl: 'dashboard.component.html',\n    styleUrls: ['dashboard.component.css']\n})\nexport class DashboardComponent {\n\n    countPatients: number;\n    countHospitals: number;\n    countBeds: number;\n    countConsultants: number;\n    countCameras: number;\n    countIcus: number;\n    showPatients: boolean = false;\n    showHospitals: boolean = false;\n    showBeds: boolean = false;\n    showConsultants: boolean = false;\n    showCameras: boolean = false;\n    showDepartments: boolean = false;\n    notes: any;\n    userScope: any[];\n    roleInfo: any;\n    userInfo: any;\n    diagnosis: any;\n    diagnosislist: any;\n\n    constructor(private router: Router, private patientServices: PatientServices, private dashboardServices: DashboardServices, private notesServices: NotesServices, private roleServices:RoleServices, private modelMessage:ModelMessage) { }\n\n    getDashboardData() {\n        let role = JSON.parse(sessionStorage.getItem('userRoleInfo')).role;\n        let test = \"qe\";\n        this.roleInfo = this.roleServices.getRoleInfo(role);\n        this.showPatients = this.roleInfo.patients;\n        // this.showPatients = true;\n        this.showHospitals = this.roleInfo.hospital;\n        this.showBeds = this.roleInfo.bed;\n        // this.showBeds = true;\n        this.showConsultants = this.roleInfo.consultant;\n        this.showCameras = this.roleInfo.camera;\n        // this.showCameras = true;\n        this.showDepartments = this.roleInfo.department;\n        // this.showDepartments = true;\n\n        if (this.userInfo.hospitalId) {\n            this.dashboardServices.getDashboardByHospital(this.userInfo.hospitalId).subscribe(\n                data => {\n                    let responseData:any = data || {};\n                    this.countPatients = responseData.patients;\n                    this.countHospitals = responseData.hospitals;\n                    this.countIcus = responseData.icus;\n                    this.countBeds = responseData.beds;\n                    this.countCameras = responseData.cameras;\n                    this.countConsultants = responseData.consultants;\n                },\n                error => {\n                    this.modelMessage.errorMessage(error);\n                }\n            );\n        } else {\n            this.dashboardServices.getDashboard().subscribe(\n                data => {\n                    let responseData:any = data || {};\n                    this.countPatients = responseData.patients;\n                    this.countHospitals = responseData.hospitals;\n                    this.countIcus = responseData.icus;\n                    this.countBeds = responseData.beds;\n                    this.countCameras = responseData.cameras;\n                    this.countConsultants = responseData.consultants;\n                },\n                error => {\n                    this.modelMessage.errorMessage(error);\n                }\n            );\n        }\n    }\n\n    getAllNotes() {\n        this.notesServices.getAllNotes().subscribe(    \n            data => this.notes = data,\n            error => {\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    routePatients() {\n        this.router.navigate(['/patients']);\n    }\n\n    routeHospitals() {\n        this.router.navigate(['/hospitals']);\n    }\n\n    routeBeds() {\n        this.router.navigate(['/beds']);\n    }\n\n    routeConsultants() {\n        this.router.navigate(['/consultants']);\n    }\n\n    routeCameras() {\n        this.router.navigate(['/cameras']);\n    }\n\n    routeDepartments() {\n        this.router.navigate(['/departments']);\n    }\n\n    ngOnInit() {\n        this.userScope = JSON.parse(sessionStorage.getItem('userRoleInfo')).role;\n        this.userInfo = JSON.parse(sessionStorage.getItem('userData'));\n        if (this.userScope) {\n            this.getDashboardData();\n            this.getAllNotes();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/dashboard/dashboard.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { SharedModule } from '../shared/shared.module';\nimport { DashboardComponent } from './dashboard.component';\n// import { ChartModule } from 'angular2-highcharts/dist/index';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [DashboardComponent],\n    exports: [DashboardComponent]\n})\n\nexport class DashboardModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/dashboard/dashboard.module.ts","import { Route } from '@angular/router';\nimport { DashboardComponent } from './index';\n\nexport const DashboardRoutes: Route[] = [\n    {\n        path: '',\n        component: DashboardComponent\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/dashboard/dashboard.routes.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './dashboard.component';\nexport * from './dashboard.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/dashboard/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".department-create {}\\n.department-create .data-lable {\\n    display: block;\\n    padding-top: 7px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/department_create/department.create.component.css\n// module id = ../../../../../src/app/department_create/department.create.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header department-create\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h1 class=\\\"sub-page-header\\\">\\n        Department\\n        <small>({{mode}})</small>\\n      </h1>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"top-action-buttons\\\">\\n                 <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"routeDepartments()\\\" class=\\\"btn bg-default\\\" title=\\\"Back\\\"><i class=\\\"fa fa-arrow-left\\\"></i></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li><a (click)=\\\"routeDepartments()\\\"><i class=\\\"fa fa-users\\\"></i> Department</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-plus\\\"></i> {{mode}} Department</li>\\n            </ol>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n        </div>\\n    </div>\\n</section>\\n<section class=\\\"department-create\\\">\\n    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"createDepartmentForm\\\" (ngSubmit)=\\\"save(createDepartmentForm.value, createDepartmentForm.valid)\\\" novalidate>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"box box-info\\\">\\n                    <div class=\\\"box-header with-border\\\">\\n                        <h3 class=\\\"box-title\\\">{{mode}} Department</h3>\\n                    </div>\\n\\n                    <div class=\\\"box-body\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Hospital</label>\\n                            \\n                            <div class=\\\"col-sm-10\\\">\\n                                <span class=\\\"data-lable\\\">{{hospitalName}}</span>\\n                            </div>\\n                        </div>\\n\\n                         <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Department Name</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\" formControlName=\\\"name\\\" minlength=\\\"4\\\" pattern=\\\"^([A-Za-z0-9\\\\-]+)\\\"  required=\\\"required\\\">\\n                                <small class=\\\"form-error\\\" [hidden]=\\\"createDepartmentForm.controls.name.valid || (createDepartmentForm.controls.name.pristine && !submitted)\\\">\\n                                    Department name is required.Minimum 4 characters.No special characters except - (hyphen) is allowed.\\n                                </small>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Type</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <div class=\\\"radio\\\">\\n                                    <label>\\n                                      <input type=\\\"radio\\\" name=\\\"type\\\" value=\\\"ICU\\\" checked=\\\"checked\\\"  formControlName=\\\"type\\\">ICU\\n                                    </label>\\n                                </div>\\n                                <!--<div class=\\\"radio\\\">\\n                                    <label>\\n                                      <input type=\\\"radio\\\" name=\\\"type\\\" value=\\\"Emergency\\\" formControlName=\\\"type\\\">Emergency\\n                                    </label>\\n                                </div>-->\\n                                <small class=\\\"form-error\\\" [hidden]=\\\"createDepartmentForm.controls.type.valid || (createDepartmentForm.controls.type.pristine && !submitted)\\\">\\n                                    Select department type\\n                                </small>\\n                            </div>\\n                        </div>\\n                        \\n                        <div class=\\\"box-header\\\">\\n                          <div class=\\\"box-footer text-align-right\\\" *ngIf=\\\"!disableCreateAction\\\">\\n                              <button *ngIf=\\\"createMode\\\" type=\\\"reset\\\" class=\\\"btn btn-default\\\">Reset</button>\\n                              <button *ngIf=\\\"!createMode\\\" (click)=\\\"routeDepartments()\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                              <button type=\\\"submit\\\" class=\\\"btn btn-info margin\\\">\\n                                <span *ngIf=\\\"createMode\\\">Create</span>\\n                                <span *ngIf=\\\"!createMode\\\">Update</span>\\n                              </button>\\n                            </div>\\n                       </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/department_create/department.create.component.html\n// module id = ../../../../../src/app/department_create/department.create.component.html\n// module chunks = 0","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { DepartmentInterface } from './department.interface';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { DepartmentServices } from '../services/presence/department.services';\nimport { HospitalServices } from '../services/presence/hospital.services';\nimport { ModelMessage } from '../model_message/model.message';\n\n@Component({\n    moduleId: module.id,\n    selector: 'cm-department-create',\n    templateUrl: 'department.create.component.html',\n    styleUrls: ['department.create.component.css']\n})\n\nexport class DepartmentCreateComponent implements OnInit {\n    public createDepartmentForm: FormGroup;\n    private sub: any;\n    public submitted: boolean;\n    departments: any;\n    hospitals: any;\n    userData: any;\n    depratmentData: any;\n    hospitalName: string;\n    mode: string = 'Create';\n    hospitalId: any;\n    createMode: boolean = true;\n    disableCreateAction: boolean = false;\n\n    constructor(private router: Router, private route: ActivatedRoute, private fb: FormBuilder, private hospitalServices: HospitalServices, private departmentServices: DepartmentServices, private modelMessage: ModelMessage) {\n\n    }\n\n    \n    save(model: DepartmentInterface, isValid: boolean) {\n        this.submitted = true;\n        if (isValid) {\n            model.hospitalId = this.hospitalId;\n            if (!this.createMode) {\n                this.disableCreateAction = true;\n                this.departmentServices.updateDepartment(model).subscribe(\n                    data => {\n                        let msg = 'Department ' + model.name + ' was updated ';\n                        this.modelMessage.successMessage(msg);\n                        this.router.navigate(['/departments']);\n                    },\n                    error => {\n                        this.disableCreateAction=false;\n                        this.modelMessage.errorMessage(error);\n                    }\n                );\n            } else {\n                this.disableCreateAction = true;\n                this.departmentServices.createDepartment(model).subscribe(\n                    data => {\n                        let msg = 'Department ' + model.name + ' was created ';\n                        this.modelMessage.successMessage(msg);\n                        this.router.navigate(['/departments']);\n                    },\n                    error => {\n                        this.disableCreateAction=false;\n                        this.modelMessage.errorMessage(error);\n                    }\n                );\n            }\n        }\n    }\n\n    createDepartment() {\n        this.createDepartmentForm = new FormGroup({\n            hospitalId: new FormControl(this.hospitalId),\n            id: new FormControl('', ),\n            name: new FormControl('', <any>Validators.required),\n            type: new FormControl('', <any>Validators.required),\n\n        });\n    }\n\n\n    editDepartment(data) {\n        this.createDepartmentForm = new FormGroup({\n            hospitalId: new FormControl(this.hospitalId),\n            id: new FormControl(data.id),\n            name: new FormControl(data.name),\n            type: new FormControl(data.type, <any>Validators.required),\n\n        });\n    }\n\n    clickDepartmentGridView() {\n        this.router.navigate(['/departments']);\n    }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    routeDepartments() {\n        this.router.navigate(['/departments']);\n    }\n\n    ngOnInit() {\n        this.userData = JSON.parse(sessionStorage.getItem('userData'));\n        this.hospitalId = this.userData.hospitalId;\n        this.hospitals = this.route.snapshot.data['hospitalList'];\n        this.hospitalName = this.hospitals.find(hospital => hospital.id == this.hospitalId).name;\n        this.departments = this.route.snapshot.data['departmentList'];\n        this.createDepartment();\n        this.sub = this.route.params.subscribe(params => {\n            if (params['id']) {\n                this.createMode = false;\n                this.mode = 'Edit';\n                this.depratmentData = this.departments.find(department => department.id == params['id']);\n                this.editDepartment(this.depratmentData);\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/department_create/department.create.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { SharedModule } from '../shared/shared.module';\nimport { DepartmentCreateComponent } from './department.create.component';\n// import { CommonService } from '../shared/services/index';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\nimport { DepartmentsModule } from '../departments/departments.module';\n\n\n\n\n\n@NgModule({\n    imports: [CommonModule,BrowserModule, FormsModule, ReactiveFormsModule,DepartmentsModule],\n    declarations: [DepartmentCreateComponent],\n    exports: [DepartmentCreateComponent, FormsModule, ReactiveFormsModule,]\n})\n\nexport class DepartmentCreateModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/department_create/department.create.module.ts","import { Route } from '@angular/router';\nimport { DepartmentCreateComponent } from './index';\nimport { HospitalListResolver } from '../services/resolvers/hospital-resolver.services';\nimport { DepartmentListResolver } from '../services/resolvers/department-resolver.services';\n\nexport const DepartmentCreateRoutes: Route[] = [\n  {\n    path: 'department/create',\n    component: DepartmentCreateComponent,\n    resolve:{hospitalList:HospitalListResolver,\n             departmentList:DepartmentListResolver\n            }\n  },\n\n  {\n    path: 'department/create/:id',\n    component: DepartmentCreateComponent,\n    resolve: {hospitalList:HospitalListResolver,\n              departmentList:DepartmentListResolver}\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/department_create/department.create.routes.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './department.create.component';\nexport * from './department.create.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/department_create/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".department .widget-user-2 .widget-user-username, .department .widget-user-2 .widget-user-desc {\\n    margin-left: 0;\\n}\\n\\n.department .widget-user-2 .widget-user-header {\\n    padding: 5px;\\n}\\n\\n.department .card-list-key {\\n    display: inline-block;\\n    width: 90px;\\n    color: #666;\\n}\\n\\n.department .card-list-value {\\n    /*display: inline-block;*/\\n}\\n\\n.department .widget-user-2 .widget-user-image>img {\\n    width: 100px;\\n}\\n\\n.department .box-widget {\\n    border: solid 1px #7fdff7;\\n}\\n\\n.department .box-widget:hover .widget-user-header {\\n    background-color: #00c0ef;\\n    color: #fff;\\n}\\n\\n.department .widget-user-2 .box-footer ul li a:hover {\\n    cursor: default;\\n}\\n\\n.department .btn-bitbucket, .department .btn-flickr {\\n    background-color: #0099bf;\\n}\\n\\n.department .btn-social {\\n    padding-left: 30px;\\n    padding-bottom: 2px;\\n    padding-top: 2px;\\n}\\n\\n.department .btn-social> :first-child {\\n    width: 28px;\\n    line-height: 25px;\\n    font-size: 20px;\\n}\\n\\n.department .action-buttons {\\n    margin-top: 10px;\\n}\\n\\n.department .action-buttons a {\\n    display: inline-block;\\n    margin-right: 10px;\\n}\\n\\n.department .action-buttons a i {\\n    font-size: 20px;\\n}\\n\\n.department table.table {\\n    border: 1px solid #d2d6de;\\n    display: table;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/departments.component.css\n// module id = ../../../../../src/app/departments/departments.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header hospital department-content\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h1 class=\\\"sub-page-header\\\">\\n            Department\\n            <small>(All)</small>\\n          </h1>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"top-action-buttons\\\">\\n                <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"clickDepartmentGridView()\\\" [ngClass]=\\\"activeBtnGrid\\\" class=\\\"btn bg-default\\\" title=\\\"Grid View\\\"><i class=\\\"fa fa-th\\\"></i></a>\\n                    <a (click)=\\\"clickDepartmentListView()\\\" [ngClass]=\\\"activeBtnList\\\" class=\\\"btn bg-default btn-mid-border\\\" title=\\\"List View\\\"><i class=\\\"fa fa-align-justify\\\"></i></a>\\n                    <a (click)=\\\"routeCreateDepartment()\\\" *ngIf=\\\"roleWrite\\\" class=\\\"btn bg-default\\\" title=\\\"Create Department\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-hospital-o\\\"></i> Department</li>\\n            </ol>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"departmentSearchBox\\\" placeholder=\\\"Search Departments...\\\" #listFilter (keyup)=\\\"0\\\">\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n<section class=\\\"department\\\">\\n    <div class=\\\"loading-spinner\\\" *ngIf=\\\"loading\\\"></div>\\n    <div *ngIf=\\\"!loading\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"departmentGridView\\\">\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-3 col-xxl-5\\\" *ngFor=\\\"let department of departments | DepartmentSearch:listFilter.value;\\\">\\n                <div class=\\\"box box-widget widget-user-2\\\">\\n                    <div class=\\\"widget-user-header bg-info\\\">\\n                        <h3 class=\\\"widget-user-username text-ellipsis\\\" title=\\\"{{department.name}}\\\">{{department.name}}</h3>\\n                        <div class=\\\"action-buttons widget-user-desc\\\">\\n                            <a (click)=\\\"clickEdit(department.id)\\\" *ngIf=\\\"roleWrite\\\">\\n                                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i> Edit\\n                            </a>\\n                            <a (click)=\\\"clickDeleteConfirm(department.id,department.name)\\\" *ngIf=\\\"roleWrite\\\">\\n                                <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i> Delete\\n                            </a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"box-footer no-padding\\\">\\n                        <ul class=\\\"nav nav-stacked\\\">\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Type</span><span class=\\\"card-list-value\\\" title=\\\"{{department.type}}\\\">: {{department.type}}</span></a></li>\\n                        </ul>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"departmentListView\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <table class=\\\"table table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>\\n                                Name\\n                            </th>\\n                            <th>\\n                                Type\\n                            </th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let department of departments | DepartmentSearch:listFilter.value;\\\">\\n                            <td>\\n                                {{department.name}}\\n                            </td>\\n                            <td>\\n                                {{department.type}}\\n                            </td>\\n                            <td>\\n                                <div class=\\\"action-buttons\\\">\\n                                    <a (click)=\\\"clickEdit(department.id)\\\" *ngIf=\\\"roleWrite\\\">\\n                                        <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </a>\\n                                    <a (click)=\\\"clickDelete(department.id)\\\" *ngIf=\\\"roleWrite\\\">\\n                                        <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </a>\\n                                </div>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n<!-- Delete Modal -->\\n<div class=\\\"modal deleteConfirmPopUp\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"clickClosePopup()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Department Delete Confirmation</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you sure you want to delete department <strong>{{deleteDepartmentName}}</strong>?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" (click)=\\\"clickClosePopup()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                <button type=\\\"button\\\" (click)=\\\"clickDelete()\\\" class=\\\"btn btn-primary\\\">Delete</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/departments.component.html\n// module id = ../../../../../src/app/departments/departments.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationStart } from '@angular/router';\nimport { RoleServices } from '../services/presence/role.services';\nimport { DepartmentServices } from '../services/presence/department.services';\nimport { ModelMessage } from '../model_message/model.message';\nimport * as $ from 'jquery';\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'departments',\n    templateUrl: './departments.component.html',\n    styleUrls: ['departments.component.css']\n})\n\nexport class DepartmentsComponent implements OnInit {\n\n    errorMessage: string;\n    departments: any;\n    activeBtnGrid: string = \"bg-info\";\n    activeBtnList: string = \"\";\n    departmentGridView: boolean = true;\n    departmentListView: boolean = false;\n    roleWrite: boolean = false;\n    loading: boolean = true;\n    deleteDepartmentID: string;\n    deleteDepartmentName: string;\n    allBeds: any[] = [];\n    allCameras: any[] = [];\n    allPatients: any[] = [];\n    allDepartments:any[] = [];\n    departmentSearchBox: any;\n\n    constructor(private router: Router, private route: ActivatedRoute, private roleServices: RoleServices, private departmentServices: DepartmentServices, private modelMessage: ModelMessage) { }\n\n    clickEdit(id) {\n        this.router.navigate(['/department/create', id]);\n    }\n\n    clickClosePopup() {\n        $('.deleteConfirmPopUp').hide();\n    }\n\n\n    clickDeleteConfirm(id, hName) {\n        this.deleteDepartmentID = id;\n        this.deleteDepartmentName = hName;\n        $('.deleteConfirmPopUp').show();\n    }\n\n    checkDepartmentDependency() {\n       let isDepartmentMaped = false; \n       this.allPatients.every((currentPatient, index, _ary) => {\n            if (currentPatient.icuId === this.deleteDepartmentID) {\n                isDepartmentMaped = true;\n                return false;\n            }\n            return true;\n       });\n\n       if(!isDepartmentMaped){\n           this.allBeds.every((currentBed, index, _ary) => {\n            if (currentBed.icuId === this.deleteDepartmentID) {\n                isDepartmentMaped = true;\n                return false;\n            }\n            return true;\n          });\n       }\n\n       if(!isDepartmentMaped){\n           this.allCameras.every((currentCamera, index, _ary) => {\n            if (currentCamera.icuId === this.deleteDepartmentID) {\n                isDepartmentMaped = true;\n                return false;\n            }\n            return true;\n          });\n       }\n       \n       return isDepartmentMaped;\n    } \n\n    getDepartmentsList() {\n        let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n         if(hospitalId){\n           this.departmentServices.getAllDepartmentsByHospitalID(hospitalId).subscribe(\n            data => {\n                this.departments = data;\n            },\n            error => {\n                console.log(error);\n            }\n           );\n        }else{\n          this.departmentServices.getAllDepartments().subscribe(\n            data => {\n                this.departments = data;\n            },\n            error => {\n                console.log(error);\n            }\n          );\n        }\n    }\n\n    clickDelete() {\n        let msg = 'Department ' + this.deleteDepartmentName + ' deleted';\n        if(!this.checkDepartmentDependency()){\n            this.departmentServices.deleteDepartment(this.deleteDepartmentID).subscribe(\n            data => {\n                this.getDepartmentsList();\n                $('.deleteConfirmPopUp').hide();\n                this.modelMessage.successMessage(msg);\n            },\n            error => {\n                $('.deleteConfirmPopUp').hide();\n                this.modelMessage.errorMessage(error);\n            }\n          );\n        }else{\n          $('.deleteConfirmPopUp').hide();\n          let deleteErrMsg = \"Unable to delete the Department since there are other resources linked to it. Delete dependent resources and try again\";\n          this.modelMessage.successMessage(deleteErrMsg);\n        }    \n    }\n\n     prepareDepartmentData() {\n        let data = [];\n        this.allDepartments.forEach(currentDepartment => {\n                            let departmentDetails = {\n                                id: currentDepartment.id,\n                                name: currentDepartment.name,\n                                type: currentDepartment.type\n                                };\n                            data.push(departmentDetails);\n                        });\n                    \n        this.departments = data;\n        this.loading = false;\n    }\n\n    clickDepartmentGridView() {\n        this.activeBtnGrid = \"bg-info\";\n        this.activeBtnList = \"\";\n        this.departmentGridView = true;\n        this.departmentListView = false;\n    }\n\n    clickDepartmentListView() {\n        this.activeBtnGrid = \"\";\n        this.activeBtnList = \"bg-info\";\n        this.departmentGridView = false;\n        this.departmentListView = true;\n    }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    routeCreateDepartment() {\n        this.router.navigate(['/department/create']);\n    }\n\n    ngOnInit() {\n        let userRole = this.roleServices.getRole('department');\n        if (userRole.write) {\n            this.roleWrite = true;\n        }\n        this.allDepartments =  this.route.snapshot.data['departmentList'];\n        this.allPatients =  this.route.snapshot.data['patientList'];\n        this.allBeds =  this.route.snapshot.data['bedList'];\n        this.allCameras =  this.route.snapshot.data['cameraList'];\n        this.prepareDepartmentData();\n\n        this.route.params.subscribe(params => {\n            if (params['search']) {\n                this.departmentSearchBox= params['search'];\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/departments.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DepartmentsComponent } from './departments.component';\nimport {DepartmentSearch} from '../departments/search'\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n    imports: [CommonModule,FormsModule],\n    declarations: [DepartmentsComponent,DepartmentSearch],\n    exports: [DepartmentsComponent]\n})\n\nexport class DepartmentsModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/departments.module.ts","import { Route } from '@angular/router';\nimport { DepartmentsComponent } from './index';\nimport { CameraListResolver } from '../services/resolvers/camera-resolver.services';\nimport { DepartmentListResolver } from '../services/resolvers/department-resolver.services';\nimport { PatientListResolver } from '../services/resolvers/patient-resolver.services';\nimport { BedListResolver } from '../services/resolvers/bed-resolver.services';\n\nexport const DepartmentsRoutes: Route[] = [\n  {\n    path: 'departments',\n    component: DepartmentsComponent,\n    resolve:{\n              departmentList:DepartmentListResolver,\n              cameraList:CameraListResolver,\n              patientList:PatientListResolver,\n              bedList:BedListResolver\n            }\n  },\n  {\n    path: 'departments/:search',\n    component: DepartmentsComponent,\n    resolve:{\n              departmentList:DepartmentListResolver,\n              cameraList:CameraListResolver,\n              patientList:PatientListResolver,\n              bedList:BedListResolver\n            }\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/departments.routes.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './departments.component';\nexport * from './departments.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/index.ts","import {Injectable, Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'DepartmentSearch'\n})\n\n@Injectable()\n\nexport class DepartmentSearch implements PipeTransform {\n    transform(value: any, searchTerm: string) \n    {\n       let filter = searchTerm.toUpperCase();\n       return filter ? value.filter(patient=> patient.name.toUpperCase().indexOf(filter) != -1 ) : value \n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/departments/search.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospital_create/hospital.create.component.css\n// module id = ../../../../../src/app/hospital_create/hospital.create.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header hospital-create\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h1 class=\\\"sub-page-header\\\">\\n        Hospital\\n        <small>({{mode}})</small>\\n      </h1>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"top-action-buttons\\\">\\n                <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"routeHospitals()\\\" class=\\\"btn bg-default\\\"><i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li><a (click)=\\\"routeHospitals()\\\"><i class=\\\"fa fa-hospital-o\\\"></i> Hospitals</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-plus\\\"></i> {{mode}} Hospital</li>\\n            </ol>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n        </div>\\n    </div>\\n</section>\\n<section class=\\\"hospital-create\\\">\\n    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"createHospitalForm\\\" (ngSubmit)=\\\"save(createHospitalForm.value, createHospitalForm.valid)\\\" novalidate>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"box box-info\\\">\\n                    <div class=\\\"box-header with-border\\\">\\n                        <h3 class=\\\"box-title\\\">{{mode}} Hospital</h3>\\n                    </div>\\n                    <div class=\\\"box-body\\\">\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Hospital</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Hospital Name\\\" formControlName=\\\"name\\\" minlength=\\\"3\\\" maxlength=\\\"100\\\" required=\\\"required\\\">\\n                                <small class=\\\"form-error\\\" [hidden]=\\\"createHospitalForm.controls.name.valid || (createHospitalForm.controls.name.pristine && !submitted)\\\">\\n                                    Hospital name is required. Minimum 3 characters.\\n                                </small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Address</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Address\\\" formControlName=\\\"addressline\\\" minlength=\\\"3\\\" maxlength=\\\"100\\\" required=\\\"required\\\">\\n                                <small class=\\\"form-error\\\" [hidden]=\\\"createHospitalForm.controls.addressline.valid || (createHospitalForm.controls.addressline.pristine && !submitted)\\\">\\n                                    Address is required. Minimum 3 characters.\\n                                </small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">City</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter City\\\" formControlName=\\\"city\\\" minlength=\\\"3\\\" maxlength=\\\"50\\\" required=\\\"required\\\">\\n                                <small class=\\\"form-error\\\" [hidden]=\\\"createHospitalForm.controls.city.valid || (createHospitalForm.controls.city.pristine && !submitted)\\\">\\n                                    City is required. Minimum 3 characters.\\n                                </small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">E-mail</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Enter email\\\" formControlName=\\\"email\\\" maxlength=\\\"50\\\" pattern=\\\"[a-zA-Z0–9_.+-]+@[a-zA-Z0–9-]+.[a-zA-Z0–9.]+[a-zA-Z0–9]+$\\\" required=\\\"required\\\">\\n                                <small class=\\\"form-error\\\" [hidden]=\\\"createHospitalForm.controls.email.valid || (createHospitalForm.controls.email.pristine && !submitted)\\\">\\n                                    E-mail is required and it should be a proper E-mail id.\\n                                </small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Phone</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Phone\\\" formControlName=\\\"phone\\\" maxlength=\\\"15\\\" pattern=\\\"^[\\\\d\\\\ \\\\-+]+$\\\" required=\\\"required\\\">\\n                                <small class=\\\"form-error\\\" [hidden]=\\\"createHospitalForm.controls.phone.valid || (createHospitalForm.controls.phone.pristine && !submitted)\\\">\\n                                    Phone is required.\\n                                </small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">Pin</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Pin\\\" formControlName=\\\"pin\\\" maxlength=\\\"15\\\" pattern=\\\"^([A-Za-z0-9\\\\ ]+)\\\" required=\\\"required\\\">\\n                                <small class=\\\"form-error\\\" [hidden]=\\\"createHospitalForm.controls.pin.valid || (createHospitalForm.controls.pin.pristine && !submitted)\\\">\\n                                    Pin is required.\\n                                </small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group\\\">\\n                            <label class=\\\"col-sm-2 control-label\\\">State</label>\\n                            <div class=\\\"col-sm-10\\\">\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter State\\\" formControlName=\\\"state\\\" minlength=\\\"2\\\" maxlength=\\\"50\\\" required=\\\"required\\\">\\n                                <small class=\\\"form-error\\\" [hidden]=\\\"createHospitalForm.controls.state.valid || (createHospitalForm.controls.state.pristine && !submitted)\\\">\\n                                    State is required. Minimum 2 characters.\\n                                </small>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"box-footer text-align-right\\\" *ngIf= \\\"!disableCreateAction\\\">\\n                            <button (click)=\\\"routeHospitals()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-info margin\\\">\\n                            <span *ngIf=\\\"createMode\\\">Create</span>\\n                            <span *ngIf=\\\"!createMode\\\">Update</span>\\n                            </button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</section>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospital_create/hospital.create.component.html\n// module id = ../../../../../src/app/hospital_create/hospital.create.component.html\n// module chunks = 0","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { HospitalServices } from '../services/presence/hospital.services';\nimport { HospitalInterface } from './hospital.interface';\nimport { ModelMessage } from '../model_message/model.message';\n\n@Component({\n    moduleId: module.id,\n    selector: 'cm-hospital-create',\n    templateUrl: 'hospital.create.component.html',\n    styleUrls: ['hospital.create.component.css']\n})\n\nexport class HospitalCreateComponent implements OnInit {\n    public createHospitalForm: FormGroup;\n    private hospitalId: any;\n    private sub: any;\n    hospitals: any;\n    hospitalData: any;\n    public submitted: boolean;\n    public events: any[] = [];\n    createMode: boolean = true;\n    mode: string = 'Create';\n    disableCreateAction: boolean = false;\n\n    constructor(private router: Router, private route: ActivatedRoute, private fb: FormBuilder, private hospitalServices: HospitalServices, private modelMessage: ModelMessage) { }\n\n    routeHospitals() {\n        this.router.navigate(['/hospitals']);\n    }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    save(model: HospitalInterface, isValid: boolean) {\n        this.submitted = true;\n        if (isValid) {\n            if (this.createMode) {\n                this.disableCreateAction = true;\n                this.hospitalServices.createHospital(model,sessionStorage.getItem(\"fhirOrgId\")).subscribe(\n                    data => {\n                        let msg = 'Hospital ' + model.name + ' was created ';\n                        this.modelMessage.successMessage(msg);\n                        this.routeHospitals();\n                    },\n                    error => {\n                        this.disableCreateAction = false;\n                        let errorResponse = {status: 500, statusText: \"Failed to create Hospital\"}; \n                        this.modelMessage.errorMessage(errorResponse);\n                    }\n                );\n            } else {\n                this.disableCreateAction = true;\n                this.hospitalServices.getFhirOrgByHospitalId(this.hospitalId).subscribe(\n                   data => {\n                       let responseData:any = data || {};\n                       if(responseData.id){\n                        let fhirOrgId = responseData.id;\n                        this.hospitalServices.updateHospital(model,fhirOrgId).subscribe(\n                            data => {\n                                let msg = 'Hospital ' + model.name + ' was updated ';\n                                this.modelMessage.successMessage(msg);\n                                this.routeHospitals();\n                            },\n                            error => {\n                               this.disableCreateAction = false;\n                               let errorResponse = {status: 500, statusText: \"Failed to update Hospital\"}; \n                               this.modelMessage.errorMessage(errorResponse);\n                            }\n                        );\n                        \n                       }else{\n                          this.disableCreateAction = false;\n                          let error = {status: 500, statusText: \"Failed to update Hospital\"}; \n                          this.modelMessage.errorMessage(error);\n                       }\n                   },\n                   error => {\n                       this.disableCreateAction = false;\n                       let errorResponse = {status: 500, statusText: \"Failed to update Hospital\"}; \n                       this.modelMessage.errorMessage(errorResponse);\n                   }\n                );\n            }\n        }\n        \n    }\n\n    createHospital() {\n        this.createHospitalForm = new FormGroup({\n            addressline: new FormControl('', <any>Validators.required),\n            city: new FormControl('', <any>Validators.required),\n            email: new FormControl('', <any>Validators.required),\n            id: new FormControl(''),\n            name: new FormControl('', <any>Validators.required),\n            phone: new FormControl('', <any>Validators.required),\n            pin: new FormControl('', <any>Validators.required),\n            state: new FormControl('', <any>Validators.required),\n        });\n    }\n\n    editHospital(data) {\n        this.createHospitalForm = new FormGroup({\n            addressline: new FormControl(data.addressline, <any>Validators.required),\n            city: new FormControl(data.city, <any>Validators.required),\n            email: new FormControl(data.email, <any>Validators.required),\n            id: new FormControl(data.id, <any>Validators.required),\n            name: new FormControl(data.name),\n            phone: new FormControl(data.phone, <any>Validators.required),\n            pin: new FormControl(data.pin, <any>Validators.required),\n            state: new FormControl(data.state, <any>Validators.required),\n        });\n    }\n\n    ngOnInit() {\n        this.createHospital();\n        this.hospitals = this.route.snapshot.data['hospitalList'];\n        this.sub = this.route.params.subscribe(params => {\n            if (params['id']) {\n                this.hospitalId = params['id'];\n                this.mode = 'Edit';\n                this.createMode = false;\n                this.hospitalData = this.hospitals.find(hospital => hospital.id == this.hospitalId);\n                this.editHospital(this.hospitalData);\n            }\n        });\n    }\n\n    ngOnDestroy() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospital_create/hospital.create.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n// import { SharedModule } from '../shared/shared.module';\nimport { HospitalCreateComponent } from './hospital.create.component';\n// import { CommonService } from '../shared/services/index';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\n\n@NgModule({\n    imports: [CommonModule,BrowserModule, FormsModule, ReactiveFormsModule,],\n    declarations: [HospitalCreateComponent],\n    exports: [HospitalCreateComponent, FormsModule, ReactiveFormsModule,]\n})\n\nexport class HospitalCreateModule { }\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospital_create/hospital.create.module.ts","import { Route } from '@angular/router';\nimport { HospitalCreateComponent } from './index';\nimport { HospitalListResolver } from '../services/resolvers/hospital-resolver.services';\n\nexport const HospitalCreateRoutes: Route[] = [\n  {\n    path: 'hospital/create',\n    component: HospitalCreateComponent,\n    resolve:{hospitalList:HospitalListResolver}\n  },\n\n  {\n    path: 'hospital/create/:id',\n    component: HospitalCreateComponent,\n    resolve:{hospitalList:HospitalListResolver}\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospital_create/hospital.create.routes.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './hospital.create.component';\nexport * from './hospital.create.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospital_create/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".hospital .widget-user-2 .widget-user-username, .hospital .widget-user-2 .widget-user-desc {\\n    margin-left: 0;\\n}\\n\\n.hospital .widget-user-2 .widget-user-header {\\n    padding: 5px;\\n}\\n\\n.hospital .card-list-key {\\n    display: inline-block;\\n    width: 90px;\\n    color: #666;\\n}\\n\\n.hospital .card-list-value {\\n    /*display: inline-block;*/\\n}\\n\\n.hospital .widget-user-2 .widget-user-image>img {\\n    width: 100px;\\n}\\n\\n.hospital .box-widget {\\n    border: solid 1px #7fdff7;\\n}\\n\\n.hospital .box-widget:hover .widget-user-header {\\n    background-color: #00c0ef;\\n    color: #fff;\\n}\\n\\n.hospital .widget-user-2 .box-footer ul li a:hover {\\n    cursor: default;\\n}\\n\\n.hospital .btn-bitbucket, .hospital .btn-flickr {\\n    background-color: #0099bf;\\n}\\n\\n.hospital .btn-social {\\n    padding-left: 30px;\\n    padding-bottom: 2px;\\n    padding-top: 2px;\\n}\\n\\n.hospital .btn-social> :first-child {\\n    width: 28px;\\n    line-height: 25px;\\n    font-size: 20px;\\n}\\n\\n.hospital .action-buttons {\\n    margin-top: 10px;\\n}\\n\\n.hospital .action-buttons a {\\n    display: inline-block;\\n    margin-right: 10px;\\n}\\n\\n.hospital .action-buttons a i {\\n    font-size: 20px;\\n}\\n\\n.hospital table.table {\\n    border: 1px solid #d2d6de;\\n    display: table;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/hospitals.component.css\n// module id = ../../../../../src/app/hospitals/hospitals.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header hospital\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h1 class=\\\"sub-page-header\\\">\\n            Hospital\\n            <small>(All)</small>\\n          </h1>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"top-action-buttons\\\">\\n                <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"clickHospitalGridView()\\\" [ngClass]=\\\"activeBtnGrid\\\" class=\\\"btn bg-default\\\" title=\\\"Grid View\\\"><i class=\\\"fa fa-th\\\"></i></a>\\n                    <a (click)=\\\"clickHospitalListView()\\\" [ngClass]=\\\"activeBtnList\\\" class=\\\"btn bg-default btn-mid-border\\\" title=\\\"List View\\\"><i class=\\\"fa fa-align-justify\\\"></i></a>\\n                    <a (click)=\\\"routeCreateHospital()\\\" *ngIf=\\\"roleWrite\\\" class=\\\"btn bg-default\\\" title=\\\"Create Hospital\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-hospital-o\\\"></i> Hospital</li>\\n            </ol>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"hospitalSearchBoxInput\\\" #listFilter (keyup)=\\\"0\\\" placeholder=\\\"Search Hospitals...\\\">\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n<section class=\\\"hospital\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"hospitalGridView\\\">\\n        <div class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-3 col-xxl-5\\\" *ngFor=\\\"let hospital of hospitals | HospitalSearch:listFilter.value;\\\">\\n            <div class=\\\"box box-widget widget-user-2\\\">\\n                <div class=\\\"widget-user-header bg-info\\\">\\n                    <h3 class=\\\"widget-user-username text-ellipsis\\\" title=\\\"{{hospital.name}}\\\">{{hospital.name}}</h3>\\n                    <div class=\\\"action-buttons widget-user-desc\\\">\\n                        <a (click)=\\\"clickEdit(hospital.id)\\\" *ngIf=\\\"roleWrite\\\">\\n                            <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                        </a>\\n                        <a (click)=\\\"clickDeleteConfirm(hospital.id, hospital.name)\\\" *ngIf=\\\"roleWrite\\\">\\n                            <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n                        </a>\\n                    </div>\\n                </div>\\n                <div class=\\\"box-footer no-padding\\\">\\n                    <ul class=\\\"nav nav-stacked\\\">\\n                        <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Address</span><span class=\\\"card-list-value\\\" title=\\\"{{hospital.addressline}}\\\">: {{hospital.addressline}}</span></a></li>\\n                        <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">City</span><span class=\\\"card-list-value\\\" title=\\\"{{hospital.city}}\\\">: {{hospital.city}}</span></a></li>\\n                        <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">State</span><span class=\\\"card-list-value\\\" title=\\\"{{hospital.state}}\\\">: {{hospital.state}}</span></a></li>\\n                        <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Pin Code</span><span class=\\\"card-list-value\\\" title=\\\"{{hospital.pin}}\\\">: {{hospital.pin}}</span></a></li>\\n                        <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Phone</span><span class=\\\"card-list-value\\\" title=\\\"{{hospital.phone}}\\\">: {{hospital.phone}}</span></a></li>\\n                        <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Email</span><span class=\\\"card-list-value\\\" title=\\\"{{hospital.email}}\\\">: {{hospital.email}}</span></a></li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"hospitalListView\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <table class=\\\"table table-bordered\\\">\\n                <thead>\\n                    <tr>\\n                        <th>\\n                            Hospital Name\\n                        </th>\\n                        <th>\\n                            Address\\n                        </th>\\n                        <th>\\n                            City\\n                        </th>\\n                        <th>\\n                            State\\n                        </th>\\n                        <th>\\n                            Pin\\n                        </th>\\n                        <th>\\n                            Phone\\n                        </th>\\n                        <th>\\n                            Email\\n                        </th>\\n                        <th>\\n                            Action\\n                        </th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr *ngFor=\\\"let hospital of hospitals | HospitalSearch:listFilter.value;\\\">\\n                        <td>\\n                            {{hospital.name}}\\n                        </td>\\n                        <td>\\n                            {{hospital.addressline}}\\n                        </td>\\n                        <td>\\n                            {{hospital.city}}\\n                        </td>\\n                        <td>\\n                            {{hospital.state}}\\n                        </td>\\n                        <td>\\n                            {{hospital.pin}}\\n                        </td>\\n                        <td>\\n                            {{hospital.phone}}\\n                        </td>\\n                        <td>\\n                            {{hospital.email}}\\n                        </td>\\n                        <td>\\n                            <div class=\\\"action-buttons\\\">\\n                                <a (click)=\\\"clickEdit(hospital.id)\\\" *ngIf=\\\"roleWrite\\\">\\n                                    <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                                </a>\\n                                <a (click)=\\\"clickDelete(hospital.id)\\\" *ngIf=\\\"roleWrite\\\">\\n                                    <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n                                </a>\\n                            </div>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</section>\\n<!-- Delete Modal -->\\n<div class=\\\"modal deleteConfirmPopUp\\\" role=\\\"dialog\\\">>\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"clickClosePopup()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Hospital Delete Confirmation</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you sure you want to delete hospital <strong>{{deleteHospitalname}}</strong>?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" (click)=\\\"clickClosePopup()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                <button type=\\\"button\\\" (click)=\\\"clickDelete()\\\" class=\\\"btn btn-primary\\\">Delete</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/hospitals.component.html\n// module id = ../../../../../src/app/hospitals/hospitals.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { RoleServices } from '../services/presence/role.services';\nimport { BedServices } from '../services/presence/bed.services';\nimport { DepartmentServices } from '../services/presence/department.services';\nimport { HospitalServices } from '../services/presence/hospital.services';\nimport { PatientServices } from '../services/presence/patient.services';\nimport { UserServices } from '../services/presence/user.services';\nimport { CameraServices } from '../services/presence/camera.services';\nimport { ModelMessage } from '../model_message/model.message';\nimport * as $ from 'jquery';\n\n@Component({\n    moduleId: module.id,\n    selector: 'hospitals',\n    templateUrl: './hospitals.component.html',\n    styleUrls: ['hospitals.component.css']\n})\n\nexport class HospitalsComponent implements OnInit {\n\n    errorMessage: string;\n    hospitals: any;\n    subURL: any = 'hospital/all';\n    activeBtnGrid: string = \"bg-info\";\n    activeBtnList: string = \"\";\n    hospitalGridView: boolean = true;\n    hospitalListView: boolean = false;\n    roleWrite: boolean = false;\n    loading: boolean = true;\n    deleteHospitalID: string;\n    deleteHospitalname: string;\n    allBeds: any[] = [];\n    allIcus: any[] = [];\n    allCameras: any[] = [];\n    allPatients: any[] = [];\n    allUsers: any[] = [];\n    allHospitals: any[] = [];\n    hospitalSearchBoxInput: any;\n\n    constructor(private router: Router, private route: ActivatedRoute, private roleServices: RoleServices, private bedServices: BedServices, private departmentServices: DepartmentServices, private hospitalServices: HospitalServices, private patientServices:PatientServices, private userServices: UserServices, private cameraServices: CameraServices, private modelMessage: ModelMessage) { }\n\n    clickEdit(id) {\n        this.router.navigate(['/hospital/create', id]);\n    }\n\n    clickDeleteConfirm(id,hName) {\n        this.deleteHospitalID = id;\n        this.deleteHospitalname = hName;\n        $('.deleteConfirmPopUp').show();\n    }\n\n    checkHospitalDependency() {\n       let isHospitalMaped = false; \n       this.allPatients.every((currentPatient, index, _ary) => {\n            if (currentPatient.hospitalId === this.deleteHospitalID) {\n                isHospitalMaped = true;\n                return false;\n            }\n            return true;\n       });\n\n       if(!isHospitalMaped){\n           this.allBeds.every((currentBed, index, _ary) => {\n            if (currentBed.hospitalId === this.deleteHospitalID) {\n                isHospitalMaped = true;\n                return false;\n            }\n            return true;\n          });\n       }\n\n       if(!isHospitalMaped){\n           this.allCameras.every((currentCamera, index, _ary) => {\n            if (currentCamera.hospitalId === this.deleteHospitalID) {\n                isHospitalMaped = true;\n                return false;\n            }\n            return true;\n          });\n       }\n\n       if(!isHospitalMaped){\n           this.allIcus.every((currentIcu, index, _ary) => {\n            if (currentIcu.hospitalId === this.deleteHospitalID) {\n                isHospitalMaped = true;\n                return false;\n            }\n            return true;\n          });\n       }\n\n       if(!isHospitalMaped){\n           this.allUsers.every((currentUser, index, _ary) => {\n            if (currentUser.hospitalId === this.deleteHospitalID) {\n                isHospitalMaped = true;\n                return false;\n            }\n            return true;\n          });\n       }\n\n       return isHospitalMaped;\n       \n    } \n\n    getHospitals() {\n        let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n        if(hospitalId){\n            return this.hospitalServices.getHospitalDataByHospitalId(hospitalId).subscribe(\n                        data => {\n                            this.hospitals = data;\n                            this.loading = false;\n                        },\n                        error => {\n                            console.log(error);\n                            this.loading = false;\n                        }\n                    );\n        }else{\n             return this.hospitalServices.getAllHospitals().subscribe(\n                        data => {\n                            this.hospitals = data;\n                            this.loading = false;\n                        },\n                        error => {\n                            console.log(error);\n                            this.loading = false;\n                        }\n                    );\n        }\n    }\n\n    clickDelete() {\n        let msg = 'Hospital ' + this.deleteHospitalname + ' deleted';\n        if(!this.checkHospitalDependency()){\n            this.hospitalServices.getFhirOrgByHospitalId(this.deleteHospitalID).subscribe(\n                data => {\n                    let responseData: any = data;\n                    if(responseData.id){\n                        var fhirOrgId = responseData.id;\n                        this.hospitalServices.deleteHospital(this.deleteHospitalID,fhirOrgId).subscribe(\n                            data => {\n                                this.getHospitals();\n                                $('.deleteConfirmPopUp').hide();\n                                this.modelMessage.successMessage(msg);\n                            },\n                            error => {\n                                let errorResponse = {status: 500, statusText: \"Failed to delete hospital\"}; \n                                this.modelMessage.errorMessage(errorResponse);\n                            }\n                        );\n                    }else{\n                        let error = {status: 500, statusText: \"Failed to delete hospital\"}; \n                        this.modelMessage.errorMessage(error);\n                    }\n                },\n                error => {\n                    let errorResponse = {status: 500, statusText: \"Failed to delete hospital\"}; \n                    this.modelMessage.errorMessage(errorResponse);\n                }\n            );\n        }else{\n          $('.deleteConfirmPopUp').hide();\n          let deleteErrMsg = \"Unable to delete the Hospital since there are other resources linked to it. Delete dependent resources and try again\";\n          this.modelMessage.successMessage(deleteErrMsg);\n        }\n        \n    }\n\n    preapreHospitalData() {\n        let data = [];\n        this.allHospitals.forEach(currentHospital => \n        {\n            let hospitalDetails = {\n                                    id: currentHospital.id,\n                                    name: currentHospital.name,\n                                    addressline: currentHospital.addressline,\n                                    city: currentHospital.city,\n                                    state: currentHospital.state,\n                                    pin: currentHospital.pin,\n                                    phone: currentHospital.phone,\n                                    email: currentHospital.email,\n                                    hospitalId: currentHospital.hospitalId    \n                                };\n                                data.push(hospitalDetails)\n        });\n        this.hospitals = data;\n        this.loading = false;\n    }\n\n    clickHospitalGridView() {\n        this.activeBtnGrid = \"bg-info\";\n        this.activeBtnList = \"\";\n        this.hospitalGridView = true;\n        this.hospitalListView = false;\n    }\n\n    clickHospitalListView() {\n        this.activeBtnGrid = \"\";\n        this.activeBtnList = \"bg-info\";\n        this.hospitalGridView = false;\n        this.hospitalListView = true;\n    }\n\n    clickClosePopup() {\n        $('.deleteConfirmPopUp').hide();\n    }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    routeCreateHospital() {\n        this.router.navigate(['/hospital/create']);\n    }\n\n    ngOnInit() {\n        let userRole = this.roleServices.getRole('hospital');\n        this.roleWrite = true;\n        if (userRole.write) {\n            this.roleWrite = true;\n        }\n        \n        this.allHospitals =  this.route.snapshot.data['hospitalList'];\n        this.allBeds = this.route.snapshot.data['bedList'];\n        this.allIcus = this.route.snapshot.data['departmentList'];\n        this.allCameras = this.route.snapshot.data['cameralList'];\n        this.allPatients = this.route.snapshot.data['patientList'];\n        this.allUsers = this.route.snapshot.data['userList'];\n   \n        this.preapreHospitalData();\n        this.route.params.subscribe(params => {\n            if (params['search']) {\n                this.hospitalSearchBoxInput= params['search'];\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/hospitals.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HospitalsComponent } from './hospitals.component';\nimport {HospitalSearch} from '../hospitals/search';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [HospitalsComponent,HospitalSearch],\n    exports: [HospitalsComponent]\n})\n\nexport class HospitalsModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/hospitals.module.ts","import { Route } from '@angular/router';\nimport { HospitalsComponent } from './index';\nimport { HospitalListResolver } from '../services/resolvers/hospital-resolver.services';\nimport { CameraListResolver } from '../services/resolvers/camera-resolver.services';\nimport { DepartmentListResolver } from '../services/resolvers/department-resolver.services';\nimport { PatientListResolver } from '../services/resolvers/patient-resolver.services';\nimport { BedListResolver } from '../services/resolvers/bed-resolver.services';\nimport { UserListResolver } from '../services/resolvers/user-resolver.services';\n\nexport const HospitalsRoutes: Route[] = [\n  {\n    path: 'hospitals',\n    component: HospitalsComponent,\n    resolve:{\n              hospitalList:HospitalListResolver,\n              cameralList:CameraListResolver,\n              departmentList:DepartmentListResolver,\n              patientList:PatientListResolver,\n              bedList:BedListResolver,\n              userList:UserListResolver\n            } \n  },\n  {\n    path: 'hospitals/:search',\n    component: HospitalsComponent,\n    resolve:{\n              hospitalList:HospitalListResolver,\n              cameralList:CameraListResolver,\n              departmentList:DepartmentListResolver,\n              patientList:PatientListResolver,\n              bedList:BedListResolver,\n              userList:UserListResolver\n            } \n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/hospitals.routes.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './hospitals.component';\nexport * from './hospitals.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/index.ts","import {Injectable, Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'HospitalSearch'\n})\n\n@Injectable()\n\nexport class HospitalSearch implements PipeTransform {\n    transform(value: any, searchTerm: string) \n    {\n       let filter = searchTerm.toUpperCase();\n       return filter ? value.filter(hospital=> hospital.name.toUpperCase().indexOf(filter) != -1) : value;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/hospitals/search.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './login.component';\nexport * from './login.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/login/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dashboard .box-comments {\\n  background-color: #fff;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/login/login.component.css\n// module id = ../../../../../src/app/login/login.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"login-box\\\">\\n    <div class=\\\"login-logo\\\">\\n        <a><b>Digital</b>ICU</a>\\n    </div>\\n    <div class=\\\"login-box-body\\\">\\n        <form class=\\\"form-horizontal\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login(loginForm.value, loginForm.valid)\\\">\\n            <p class=\\\"login-box-msg\\\">Sign in to start your session</p>\\n            <div class=\\\"form-group has-feedback\\\">\\n                <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Email\\\" formControlName=\\\"username\\\" required=\\\"required\\\">\\n                <span class=\\\"glyphicon glyphicon-envelope form-control-feedback\\\"></span>\\n                <small class=\\\"form-error\\\" [hidden]=\\\"loginForm.controls.username.valid || (loginForm.controls.username.pristine && !submitted)\\\">\\n                Email ID is required.\\n            </small>\\n            </div>\\n            <div class=\\\"form-group has-feedback\\\">\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required=\\\"required\\\">\\n                <span class=\\\"glyphicon glyphicon-lock form-control-feedback\\\"></span>\\n                <small class=\\\"form-error\\\" [hidden]=\\\"loginForm.controls.password.valid || (loginForm.controls.password.pristine && !submitted)\\\">\\n                Password is required.\\n            </small>\\n            </div>\\n            <p class=\\\"login-box-msg error\\\">{{errorMessage}}</p>\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-xs-8\\\"></div>\\n                <div class=\\\"col-xs-4\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block btn-flat\\\">Sign In</button>\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = 0","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, FormBuilder, Validators, FormsModule } from '@angular/forms';\nimport { LoginInterface } from './login.interface';\nimport { CommonServices } from '../services/common.services';\nimport { LoginServices } from '../services/presence/login.services';\n\n@Component({\n    moduleId: module.id,\n    selector: 'login-form',\n    templateUrl: 'login.component.html',\n    styleUrls: ['login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n   @Output()\n   loginEvent: EventEmitter<string> = new EventEmitter(); \n\n   private loginForm: FormGroup;\n   private location: string;\n   private username: string;\n   private password: string;\n   private errorMessage: string;\n   private submitted: boolean;\n    \n\n   constructor(private router: Router,private commonServices: CommonServices,private loginServices: LoginServices) {\n        this.location = router.url;\n   }\n\n   getTenantName(userName){\n      let tenantName = userName.split('@')[1];\n      sessionStorage.setItem('tenantName',tenantName);\n   }\n\n   login(model: LoginInterface, isValid: boolean) {\n        this.submitted = true;\n        if (isValid) {\n            this.getTenantName(model.username);\n            this.commonServices.prepareReqOptions();\n            this.loginServices.login(model).subscribe(\n              data => {\n                console.log(\"login response:\"+JSON.stringify(data));\n                sessionStorage.setItem('userRoleInfo', JSON.stringify(data));\n                let userSessionInfo: any = data;\n                let scope = userSessionInfo.scope;\n                sessionStorage.setItem('userScope', JSON.stringify(scope.split(' ')));\n                this.loginEvent.emit(\"authenticated\");\n              },\n              error => {\n                this.username = '';\n                this.password = '';\n                this.errorMessage = \"UserId/Password is invalid\";\n              }\n            );\n        }\n    }\n\n   createLogin() {\n        this.loginForm = new FormGroup({\n            username: new FormControl('', <any>Validators.required),\n            password: new FormControl('', <any>Validators.required)\n        });\n    }\n\n   ngOnInit() {\n       this.createLogin();\n   }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/login/login.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n    imports: [CommonModule, BrowserModule, FormsModule, ReactiveFormsModule],\n    declarations: [LoginComponent],\n    exports: [LoginComponent, FormsModule, ReactiveFormsModule]\n})\n\nexport class LoginModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/login/login.module.ts","import { Route } from '@angular/router';\nimport { LoginComponent } from './index';\n\nexport const LoginRoutes: Route[] = [\n    {\n        path: 'login',\n        component: LoginComponent\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/login/login.routes.ts","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as $ from 'jquery';\n\n@Injectable()\nexport class ModelMessage {\n\n    constructor(private router:Router) { }\n\n    infoMessage(data) {\n        $('.infoPopUp').show(function() {\n            $('.infoPopUpMessage').html(data);\n            $('.infoPopUp').delay(5000).hide(0);\n        });\n    }\n\n    successMessage(data) {\n        $('.successPopUp').show(function() {\n            $('.successPopUpMessage').html(data);\n            $('.successPopUp').delay(5000).hide(0);\n        });\n    }\n\n    warningMessage(data) { }\n\n    errorMessage(data) {\n        $('.errorPopUp').show(function() {\n            $('.errorPopUpMessage').html(data.statusText);\n            $('.errorPopUp').delay(5000).hide(0, () => {\n                if (data.status === 401) {\n                    //this.router.navigate(['/']);\n                    sessionStorage.clear();\n                    location.reload();\n                }\n            });\n        });\n    }\n\n    ngOnInit() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/model_message/model.message.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './navbar.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/navbar/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".user-icon-3 {\\n    display: inline-block;\\n}\\n\\n.user-icon-3 i {\\n    font-size: 33px;\\n    color: #fff;\\n}\\n\\n.sidebar-menu a {\\n    display: inline-block;\\n    width: 80%;\\n}\\n\\n.sidebar-menu a.menu-action {\\n    text-align: center;\\n    width: 42px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/navbar/navbar.component.css\n// module id = ../../../../../src/app/navbar/navbar.component.css\n// module chunks = 0","module.exports = \"<aside class=\\\"main-sidebar\\\">\\n    <section class=\\\"sidebar\\\">\\n        <ul class=\\\"sidebar-menu\\\">\\n            <li class=\\\"header\\\">Main Menu</li>\\n            <li>\\n                <a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-tachometer\\\"></i> <span>Dashboard</span></a>\\n            </li>\\n            <li *ngIf=\\\"navPatients\\\">\\n                <a (click)=\\\"routePatients()\\\"><i class=\\\"fa fa-users\\\"></i> <span>Patients</span></a>\\n            </li>\\n            <li *ngIf=\\\"navHospitals\\\">\\n                <a (click)=\\\"routeHospitals()\\\"><i class=\\\"fa fa-hospital-o\\\"></i> <span>Hospitals</span></a>\\n                <!-- <a (click)=\\\"routeCreateHospital()\\\" *ngIf=\\\"roleWriteHospital\\\" class=\\\"menu-action\\\" title=\\\"Create Hospital\\\"><i class=\\\"fa fa-plus\\\"></i></a> -->\\n            </li>\\n            <li *ngIf=\\\"navBeds\\\">\\n                <a (click)=\\\"routeBeds()\\\"><i class=\\\"fa fa-bed\\\"></i> <span>Beds</span></a>\\n                <!-- <a (click)=\\\"routeCreateBed()\\\" *ngIf=\\\"roleWriteBed\\\" class=\\\"menu-action\\\" title=\\\"Create Patient\\\"><i class=\\\"fa fa-plus\\\"></i></a> -->\\n            </li>\\n            <li *ngIf=\\\"navConsultants\\\">\\n                <a (click)=\\\"routeConsultants()\\\"><i class=\\\"fa fa-user-md\\\"></i> <span>Consultants</span></a>\\n                <!-- <a (click)=\\\"routeCreateConsultant()\\\" *ngIf=\\\"roleWriteConsultant\\\" class=\\\"menu-action\\\" title=\\\"Create Patient\\\"><i class=\\\"fa fa-plus\\\"></i></a> -->\\n            </li>\\n            <li *ngIf=\\\"navCameras\\\">\\n                <a (click)=\\\"routeCameras()\\\"><i class=\\\"fa fa-camera\\\"></i> <span>Cameras</span></a>\\n                <!-- <a (click)=\\\"routeCreateCamera()\\\" *ngIf=\\\"roleWriteCamera\\\" class=\\\"menu-action\\\" title=\\\"Create Patient\\\"><i class=\\\"fa fa-plus\\\"></i></a> -->\\n            </li>\\n            <li *ngIf=\\\"navDepartments\\\">\\n                <a (click)=\\\"routeDepartments()\\\"><i class=\\\"fa fa-building-o\\\"></i> <span>Departments</span></a>\\n                <!-- <a (click)=\\\"routeCreateDepartment()\\\" *ngIf=\\\"roleWriteDepartment\\\" class=\\\"menu-action\\\" title=\\\"Create Patient\\\"><i class=\\\"fa fa-plus\\\"></i></a> -->\\n            </li>\\n            <li *ngIf=\\\"navAdmin\\\">\\n                <a (click)=\\\"routeUsers()\\\"><i class=\\\"fa fa-cog\\\"></i> <span>Admin</span></a>\\n                <!-- <ul>\\n                    <li>\\n                        <a (click)=\\\"routeUsers()\\\"><i class=\\\"fa fa-user-o\\\"></i> <span>User</span></a>\\n                    </li>\\n                </ul> -->\\n            </li>\\n        </ul>\\n    </section>\\n</aside>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/navbar/navbar.component.html\n// module id = ../../../../../src/app/navbar/navbar.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RoleServices } from '../services/presence/role.services';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-navbar',\n    templateUrl: 'navbar.component.html',\n    styleUrls: ['navbar.component.css'],\n})\n\nexport class NavbarComponent implements OnInit {\n\n    navPatients: boolean = false;\n    navHospitals: boolean = false;\n    navBeds: boolean = false;\n    navConsultants: boolean = false;\n    navCameras: boolean = false;\n    navDepartments: boolean = false;\n    navAdmin: boolean = false;\n    userName: string;\n    roleInfo: any;\n    userData: any;\n    navbarSearchInput: any;\n    selectedSearchOption: any;\n\n    constructor(private router: Router, private roleServices: RoleServices) { }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    routePatients() {\n        this.router.navigate(['/patients']);\n    }\n\n    routeHospitals() {\n        this.router.navigate(['/hospitals']);\n    }\n\n    routeBeds() {\n        this.router.navigate(['/beds']);\n    }\n\n    routeConsultants() {\n        this.router.navigate(['/consultants']);\n    }\n\n    routeCameras() {\n        this.router.navigate(['/cameras']);\n    }\n\n    routeDepartments() {\n        this.router.navigate(['/departments']);\n    }\n\n    routeUsers() {\n        this.router.navigate(['/users']);\n    }\n\n    onChangeSearchOption(selectedSearchOption)\n    {\n        if(this.navbarSearchInput==\"\" || this.navbarSearchInput==undefined)\n        {\n            this.router.navigate(['/']);\n        }else{\n            this.selectedSearchOption = selectedSearchOption;\n            switch(selectedSearchOption)\n                {\n                    case \"Bed\" :\n                        this.router.navigate(['/beds',this.navbarSearchInput]);\n                        break;\n\n                    case \"Patient\" :\n                        this.router.navigate(['/patients',this.navbarSearchInput]);\n                        break;\n\n                    case \"Camera\" :\n                        this.router.navigate(['/cameras',this.navbarSearchInput]);\n                        break;\n\n                    case \"Hospital\" :\n                        this.router.navigate(['/hospitals',this.navbarSearchInput]);\n                        break;\n\n                    case \"Consultant\" :\n                        this.router.navigate(['/consultants',this.navbarSearchInput]);\n                        break;\n\n                    case \"Department\" :\n                        this.router.navigate(['/departments',this.navbarSearchInput]);\n                        break;\n                    \n                    case \"User\" :\n                        this.router.navigate(['/users',this.navbarSearchInput]);\n                        break;\n                    \n                    case \"\" :\n                        this.router.navigate(['/']);\n                        break;\n\n                    default:\n                        this.router.navigate(['/patients',this.navbarSearchInput]);\n                }\n        }\n    }\n\n    search()\n    {\n        if(this.navbarSearchInput==\"\" || this.navbarSearchInput==undefined)\n        {\n            this.router.navigate(['/']);\n        }else\n        {\n            this.onChangeSearchOption(this.selectedSearchOption)\n        }\n    }\n\n    ngOnInit() {\n        if(sessionStorage.getItem('userData')){\n            this.userData = JSON.parse(sessionStorage.getItem('userData'));\n            this.userName = this.userData.firstName + ' ' + this.userData.lastName;\n            let role = JSON.parse(sessionStorage.getItem('userRoleInfo')).role;\n            this.roleInfo = this.roleServices.getRoleInfo(role);\n            this.navPatients = this.roleInfo.patients;\n            this.navHospitals = this.roleInfo.hospital;\n            this.navBeds = this.roleInfo.bed;\n            this.navConsultants = this.roleInfo.consultant;\n            this.navCameras = this.roleInfo.camera;\n            this.navDepartments = this.roleInfo.department;\n            if (role.indexOf('ADMIN') > -1) {\n                this.navAdmin = true;\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/navbar/navbar.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './note.display.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/note/index.ts","module.exports = \"<div class=\\\"box-comment\\\">\\n    <div class=\\\"comment-text\\\">\\n        <span class=\\\"username\\\">\\n            <b> {{note.name}} </b>\\n            <span class=\\\"text-muted pull-right\\\">{{note.createdDate}}</span>\\n            <br>\\n        </span>\\n        <ng-content></ng-content>\\n        {{note.note}}\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/note/note.display.component.html\n// module id = ../../../../../src/app/note/note.display.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    moduleId: module.id,\n    selector: 'note-display',\n    templateUrl: 'note.display.component.html'\n})\n\nexport class NoteDisplayComponent implements OnInit {\n\n    // @Input() patName: any;\n    // @Input() patId: any;\n    @Input() note: any;\n\n\n    constructor(private router: Router) { }\n\n    ngOnInit() {\n        //console.log(this.note);\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/note/note.display.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.special-instructions.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient-special-instructions/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".special-instructions-box {\\n    height: 250px;\\n}\\n\\n.special-instructions-box .box-body {\\n    padding-top: 0;\\n    min-height: 185px;\\n}\\n\\n.special-instructions-box .box-header {\\n    position: absolute;\\n    right: 10px;\\n    top: 2px;\\n}\\n\\n.special-instructions-box select {\\n    display: block;\\n    margin-bottom: 10px;\\n}\\n\\n.special-instructions-box .username {\\n    display: block;\\n    margin-bottom: 5px;\\n}\\n\\n.special-instructions-box .box-overflow {\\n    height: 250px;\\n    overflow-x: auto;\\n}\\n\\n.special-instructions-box h3.box-title {\\n    display: inline-block;\\n}\\n\\n.special-instructions-box .sub-head-btn-group {\\n    padding: 0;\\n    margin: 0;\\n    text-align: right;\\n    float: right;\\n}\\n\\n.special-instructions-box .sub-head-btn-group li {\\n    list-style: none;\\n    display: inline-block;\\n    margin-left: 25px;\\n}\\n\\n.special-instructions-box .sub-head-btn-group li a i {\\n    font-size: 20px;\\n}\\n\\n.special-instructions-box .data-display ul {\\n    padding: 0;\\n    margin: 0;\\n}\\n\\n.special-instructions-box .data-display ul li {\\n    list-style: none;\\n    display: inline-block;\\n    margin-right: 10px;\\n}\\n\\n.special-instructions-box.full-box {\\n    position: fixed;\\n    top: 0;\\n    left: 0;\\n    right: 0;\\n    bottom: 0;\\n    z-index: 1031;\\n}\\n\\n.special-instructions-box.full-box .box-overflow {\\n    height: 100%;\\n    overflow-x: auto;\\n}\\n\\n/* for popups */\\n\\n.textarea {\\n    width: 100%;\\n    min-height: 100px;\\n}\\n\\n.box-comments {\\n    background-color: #fff;\\n}\\n\\n.box-comments {\\n    height: 366px;\\n    overflow-x: auto;\\n}\\n\\n.comment-text-notes {\\n    display: block;\\n}\\n\\n.box-footer.box-comments {\\n    overflow: auto;\\n}\\n\\n.box-footer.box-comments .box-comment {\\n    text-align: left;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient-special-instructions/patient.special-instructions.component.css\n// module id = ../../../../../src/app/patient-special-instructions/patient.special-instructions.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"loading-spinner\\\" *ngIf=\\\"loading\\\"></div>\\n\\n<div *ngIf=\\\"!loading\\\">\\n  <div class=\\\"box\\\">\\n      <div class=\\\"box-header\\\">\\n          <h3 class=\\\"box-title\\\">{{patientName}}'s\\n              <small> Special Instruction</small>\\n          </h3>\\n      </div>\\n      <div class=\\\"box-body pad\\\">\\n          <form class=\\\"form-horizontal\\\" [formGroup]=\\\"createSpecialInstructionForm\\\" (ngSubmit)=\\\"save(createSpecialInstructionForm.valid)\\\"\\n              novalidate>\\n              <div class=\\\"img-push\\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-4\\\">\\n                          <strong>EF (%)</strong> : <input type=\\\"number\\\" required [(ngModel)]=\\\"efEntry\\\" class=\\\"form-control\\\" (change)=\\\"efValueValidate()\\\"\\n                              placeholder=\\\"enter Ejection Fraction\\\" formControlName=\\\"EF\\\">\\n                          <small class=\\\"form-error\\\" [hidden]=\\\"createSpecialInstructionForm.controls.EF.valid || (createSpecialInstructionForm.controls.EF.pristine  && !submitted)\\\">\\n                              EF is required.\\n                          </small>\\n                          <small class=\\\"form-error\\\" *ngIf=\\\"!efValidationError\\\" >\\n                              Enter valid EF (Range: > 24 and < 76). \\n                          </small>\\n                      </div>\\n                      <div class=\\\"col-md-4\\\">\\n                          <strong>BP systolic (mmHg)</strong> : <input type=\\\"number\\\" required [(ngModel)]=\\\"bpEntrySys\\\" class=\\\"form-control\\\" (change)=\\\"bpSysValueValidate()\\\"\\n                              placeholder=\\\"enter Blood Pressure\\\" formControlName=\\\"BPSys\\\">\\n                          <small class=\\\"form-error\\\" [hidden]=\\\"createSpecialInstructionForm.controls.BPSys.valid || ( createSpecialInstructionForm.controls.BPSys.pristine  && !submitted)\\\">\\n                              BP Systolic is required.\\n                          </small>\\n                          <small class=\\\"form-error\\\" *ngIf=\\\"!bpSysValidationError\\\" >\\n                              Enter valid BP Systolic (Range: > - 1 and < 221 ). \\n                          </small>\\n                      </div>\\n                      <div class=\\\"col-md-4\\\">\\n                          <strong>BP diastolic (mmHg)</strong> : <input type=\\\"number\\\" required [(ngModel)]=\\\"bpEntryDia\\\" class=\\\"form-control\\\" (change)=\\\"bpDiaValueValidate()\\\"\\n                              placeholder=\\\"enter Blood Pressure\\\" formControlName=\\\"BPDia\\\">\\n                          <small class=\\\"form-error\\\" [hidden]=\\\"createSpecialInstructionForm.controls.BPDia.valid || ( createSpecialInstructionForm.controls.BPDia.pristine  && !submitted)\\\">\\n                              BP Diastolic is required.\\n                          </small>\\n                          <small class=\\\"form-error\\\" *ngIf=\\\"!bpDiaValidationError\\\" >\\n                              Enter valid BP Diastolic (Range: > - 1 and < 101). \\n                          </small>\\n                      </div>\\n                      <div class=\\\"col-md-4\\\">\\n                          <strong>PA (mmHg)</strong> : <input type=\\\"number\\\" required [(ngModel)]=\\\"paEntry\\\" class=\\\"form-control\\\" (change)=\\\"paValueValidate()\\\"\\n                              placeholder=\\\"enter PA\\\" formControlName=\\\"PA\\\">\\n                          <small class=\\\"form-error\\\" [hidden]=\\\"createSpecialInstructionForm.controls.PA.valid || (createSpecialInstructionForm.controls.PA.pristine && !submitted)\\\">\\n                              PA is required.\\n                          </small>\\n                          <small class=\\\"form-error\\\" *ngIf=\\\"!paValidationError\\\" >\\n                              Enter valid PA (Range: > - 1and < 51). \\n                          </small>\\n                      </div>\\n                  </div>\\n                  <br>\\n                  <div class=\\\"box-body pad\\\">\\n                      <textarea id=\\\"notes-entry\\\" class=\\\"form-control input-sm textarea\\\" required formControlName=\\\"textArea\\\" placeholder=\\\"Press enter to post comment\\\"\\n                      [(ngModel)]=\\\"entrySpecialInstruction\\\"></textarea>\\n                      <small class=\\\"form-error\\\" [hidden]=\\\"createSpecialInstructionForm.controls.textArea.valid || (createSpecialInstructionForm.controls.textArea.pristine && !submitted)\\\">\\n                        Notes should be not be left blank.\\n                      </small>\\n                  </div>\\n              </div>\\n              <div class=\\\"text-align-right\\\">\\n                  <br>\\n                  <span class=\\\"success\\\">{{successMessage}}</span>\\n                  <span class=\\\"error\\\">{{errorMessage}}</span>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"clickSpecialInstructionsCancel()\\\">Cancel</button>\\n                  <button class=\\\"btn btn-info margin\\\">Add</button>\\n              </div>\\n          </form>\\n          <div class=\\\"box box-widget \\\" *ngIf=\\\"specialInslist.length\\\">\\n              <div class=\\\"box-header with-border \\\">\\n                  <h3 class=\\\"box-title \\\">Special Instructions Notes</h3>\\n              </div>\\n              <div class=\\\"box-footer box-comments \\\">\\n                  <div class=\\\"box-comment\\\" *ngFor=\\\"let SInote of specialInslist\\\">\\n                      <div class=\\\"comment-text \\\">\\n                          <span class=\\\"text-muted pull-right \\\">{{SInote.createdDate}}</span>\\n                          <span class=\\\"comment-text-notes\\\">\\n                                    <strong>EF</strong> : {{SInote.ef}} &nbsp;&nbsp;&nbsp;&nbsp;\\n                                    <strong>BP</strong> : {{SInote.bpSys}} / {{SInote.bpDia}} &nbsp;&nbsp;&nbsp;&nbsp;\\n                                    <strong>PA</strong> : {{SInote.pa}} &nbsp;&nbsp;&nbsp;&nbsp;\\n                        </span>\\n                          <span class=\\\"text-muted pull-right \\\">{{SInote.name}}</span>\\n                          <span class=\\\"comment-text-notes\\\">{{SInote.note}}</span>\\n                      </div>\\n                  </div>\\n              <div>\\n              </div>\\n          </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient-special-instructions/patient.special-instructions.component.html\n// module id = ../../../../../src/app/patient-special-instructions/patient.special-instructions.component.html\n// module chunks = 0","import { Component, OnInit, Input, Output, EventEmitter} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { SpecialInstructionsServices } from '../services/fhir/special.instructions.services';\nimport { ModelMessage } from '../model_message/model.message';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport * as moment from 'moment/moment';\nimport { RoleServices } from '../services/presence/role.services';\n\n@Component({\n    moduleId: module.id,\n    selector: 'patient-special-instructions',\n    templateUrl: 'patient.special-instructions.component.html',\n    styleUrls: ['patient.special-instructions.component.css'],\n})\n\nexport class PatientSpecialInstructionsComponent implements OnInit {\n\n    @Output()\n    cancelEvent: EventEmitter<string> = new EventEmitter(); \n\n    loading: boolean = true;\n    entrySpecialInstruction: any;\n    specialInstructionObservationData:any;\n    roleWrite: boolean = false;\n    submitted: boolean;\n    specialInslist: any = [];\n    efEntry: any;\n    bpEntrySys: any;\n    bpEntryDia: any;\n    paEntry: any;\n    public createSpecialInstructionForm: FormGroup;\n    efValidationError: boolean = true;\n    bpSysValidationError: boolean = true;\n    bpDiaValidationError: boolean = true;\n    paValidationError: boolean = true;\n\n\n    @Input() patientData: any;\n    @Input() practitionerData:any;\n    @Input() patientName:string;\n\n    constructor(private router: Router, private roleServices: RoleServices, \n                     private specialInstructionsServices: SpecialInstructionsServices, private modelMessage: ModelMessage, \n                     private fb: FormBuilder) { }\n\n\n    efValueValidate() {\n        if (this.efEntry > 24 && this.efEntry < 76) {\n            this.efValidationError = true;\n        }\n        else {\n            this.efValidationError = false;\n        }\n    }\n    bpSysValueValidate() {\n        if (this.bpEntrySys > -1 && this.bpEntrySys < 221) {\n            this.bpSysValidationError = true;\n        }\n        else {\n            this.bpSysValidationError = false;\n        }\n    }\n    bpDiaValueValidate() {\n        if (this.bpEntryDia > -1 && this.bpEntryDia < 101) {\n            this.bpDiaValidationError = true;\n        }\n        else {\n            this.bpDiaValidationError = false;\n        }\n    }\n    paValueValidate() {\n        if (this.paEntry > -1 && this.paEntry < 51) {\n            this.paValidationError = true;\n        }\n        else {\n            this.paValidationError = false;\n        }\n    }\n\n    createSpecialInstruction() {\n        this.createSpecialInstructionForm = new FormGroup\n            ({\n                name: new FormControl(),\n                EF: new FormControl(),\n                BPDia: new FormControl(),\n                BPSys: new FormControl(),\n                PA: new FormControl(),\n                Doctor: new FormControl(),\n                textArea: new FormControl()\n            })\n    }\n\n    clickSpecialInsReset() {\n        this.createSpecialInstruction();\n        this.entrySpecialInstruction=\"\";\n        this.efEntry = \"\";\n        this.bpEntrySys = \"\";\n        this.bpEntryDia = \"\";\n        this.paEntry = \"\";\n        this.submitted = false;\n        this.efValidationError = true;\n        this.bpSysValidationError = true;\n        this.bpDiaValidationError = true;\n        this.paValidationError = true;\n    }\n\n    getSpecialInstructionsVitalsData(patientId,patientAdmittedDate):Promise<any>{\n      return new Promise((resolve, reject)=>{\n        this.specialInstructionsServices.getSpecialInstructionsVitals(patientId,patientAdmittedDate).subscribe(\n            data => {\n              resolve(data);\n            },\n            error => {\n                reject(error);\n            }\n        );\n      })\n    }\n\n    getSpecialInstructionsNotes(patientId,encounterID):Promise<any> {\n      return new Promise((resolve, reject)=>{\n        this.specialInstructionsServices.getSpecialInstructionsNotes(patientId,encounterID).subscribe(\n            data => {\n              resolve(data);\n            },\n            error => {\n              reject(error)\n            }\n        );\n      })\n    }\n\n    clickSpecialInstructionsCancel(){\n        this.specialInslist=null;\n        this.clickSpecialInsReset();\n        this.cancelEvent.emit();\n    }\n\n    save(isValid) {\n      this.submitted = true;\n        if (isValid && (this.efValidationError && this.bpDiaValidationError && this.bpSysValidationError && this.paValidationError)) {\n             let specialInstructionData = {\n                 \"patientId\": this.patientData.id,\n                 \"practitionerId\": this.practitionerData.id,\n                 \"note\": this.entrySpecialInstruction,\n                 \"ef\": this.efEntry,\n                 \"bpSys\": this.bpEntrySys,\n                 \"bpDia\": this.bpEntryDia,\n                 \"pa\": this.paEntry,\n                 \"name\": this.practitionerData.name,\n                 \"encounterId\": this.patientData.encounterId\n             };\n\n            this.specialInstructionsServices.postSpecialInstructionsNote(specialInstructionData).subscribe(\n                data => {\n                  this.specialInslist.unshift(data);\n                  this.clickSpecialInsReset();\n                },\n                error => {\n                    this.modelMessage.errorMessage(error);\n                }\n            );\n        }\n    }\n\n    ngOnInit() {\n        let userRole = this.roleServices.getRole('patient-detail');\n        if (userRole.write) {\n            this.roleWrite = true;\n        }\n\n        let specialInstructionsNotes:any = this.getSpecialInstructionsNotes(this.patientData.id, this.patientData.encounterId);\n        let specialInstructionsVital:any = this.getSpecialInstructionsVitalsData(this.patientData.id, this.patientData.encounterId);\n        Promise.all([specialInstructionsNotes,specialInstructionsVital]).then(data=>{\n\n          //setting the SI Notes List\n          if(data[0]){\n               if(data[0].length){\n                  this.specialInslist = data[0];\n                  this.loading=false;\n              }else{\n                  if(!this.roleWrite){\n                      this.cancelEvent.emit();\n                      this.modelMessage.infoMessage(\"No Special Instructions Notes\");\n                  }\n                   this.loading=false;\n              }\n          }\n\n          //setting the Vital values to variables\n          if(data[1]){\n              this.efEntry = data[1].ef;\n              this.bpEntrySys = data[1].bpS;\n              this.bpEntryDia = data[1].bpD;\n              this.paEntry = data[1].pa;\n          }\n\n        },err=>{\n          this.loading=false;\n          this.cancelEvent.emit();\n          this.modelMessage.errorMessage(err);\n        });\n\n        //create the Form Group object\n        this.createSpecialInstruction();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient-special-instructions/patient.special-instructions.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.checklist.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_checklist/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/*.checklist-box .table-wrapper {\\n    overflow-x: auto;\\n    overflow-y: visible;\\n    width: calc(100% - 175px);\\n    margin-left: 175px;\\n}\\n\\n.checklist-box .table-wrapper thead tr:first-child,\\n.checklist-box .table-wrapper thead tr th:first-child {\\n    background: #eee;\\n}\\n\\n.checklist-box .table-wrapper th:first-child {\\n    position: fixed;\\n    margin-left: -175px;\\n    display: block;\\n    width: 175px;\\n    vertical-align: top;\\n}*/\\n\\n.checklist-box .box-header .btn {\\n  float: right;\\n}\\n\\n.checklist-box .table-wrapper {\\n  width: 100%;\\n  white-space: nowrap;\\n}\\n\\n.checklist-box table thead {\\n  background: #eee;\\n}\\n\\n.checklist-box table {\\n  font-size: 14px;\\n}\\n\\n.checklist-box .table-firstcolon {\\n  display: inline-block;\\n  vertical-align: top;\\n  width: initial;\\n}\\n.checklist-box .table-firstcolon td,\\n.checklist-box .table-firstcolon th {\\n  width: 175px;\\n}\\n.checklist-box .table-firstcolon tbody th,\\n.checklist-box .table-content-wrapper tbody td {\\n  height: 45px;\\n}\\n\\n.checklist-box .table-content-wrapper {\\n  display: inline-block;\\n  overflow-x: auto;\\n  vertical-align: top;\\n  max-width: calc(100% - 175px);\\n}\\n\\n.checklist-box .table-content-wrapper>table {\\n  display: inline-block;\\n  vertical-align: top;\\n}\\n\\n.checklist-box .table-content-wrapper>table thead tr:first-child th {\\n  text-align: center;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_checklist/patient.checklist.component.css\n// module id = ../../../../../src/app/patient_checklist/patient.checklist.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"box box-info checklist-box\\\">\\n    <div class=\\\"box-header with-border\\\">\\n        <h3 class=\\\"box-title\\\">Checklist</h3>\\n        <button class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\">Save</button>\\n    </div>\\n    <div class=\\\"box-body\\\">\\n        <div class=\\\"table-wrapper\\\">\\n            <table class=\\\"table-firstcolon table table-bordered table-hover\\\">\\n                <thead>\\n                    <tr>\\n                        <th>Days</th>\\n                    </tr>\\n                    <tr>\\n                        <th>Shift Handover</th>\\n                    </tr>\\n                </thead>\\n                <tbody>\\n                    <tr>\\n                        <th>ETT Level (cm)</th>\\n                    </tr>\\n                    <tr>\\n                        <th>Cuff Pressure(mmHg)</th>\\n                    </tr>\\n                    <tr>\\n                        <th>PA Mark (cm)</th>\\n                    </tr>\\n                    <tr>\\n                        <th>Circuit checked</th>\\n                    </tr>\\n                    <tr>\\n                        <th>Alarms checked</th>\\n                    </tr>\\n                    <tr>\\n                        <th>Diet</th>\\n                    </tr>\\n                    <tr>\\n                        <th>Medication</th>\\n                    </tr>\\n                    <tr>\\n                        <th>Nurse ID</th>\\n                    </tr>\\n                    <tr>\\n                        <th>Nurse Name</th>\\n                    </tr>\\n                </tbody>\\n            </table>\\n            <div class=\\\"table-content-wrapper\\\">\\n                <table class=\\\"table table-bordered table-hover\\\">\\n                    <thead>\\n                        <tr>\\n                            <th colspan=\\\"3\\\">17 Feb, 2017</th>\\n                            <th colspan=\\\"3\\\">18 Feb, 2017</th>\\n                            <th colspan=\\\"3\\\">19 Feb, 2017</th>\\n                            <th colspan=\\\"3\\\">20 Feb, 2017</th>\\n                            <th colspan=\\\"3\\\">21 Feb, 2017</th>\\n                            <th colspan=\\\"3\\\">22 Feb, 2017</th>\\n                        </tr>\\n                        <tr>\\n                            <th>Morning</th>\\n                            <th>Evening</th>\\n                            <th>Night</th>\\n                            <th>Morning</th>\\n                            <th>Evening</th>\\n                            <th>Night</th>\\n                            <th>Morning</th>\\n                            <th>Evening</th>\\n                            <th>Night</th>\\n                            <th>Morning</th>\\n                            <th>Evening</th>\\n                            <th>Night</th>\\n                            <th>Morning</th>\\n                            <th>Evening</th>\\n                            <th>Night</th>\\n                            <th>Morning</th>\\n                            <th>Evening</th>\\n                            <th>Night</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr>\\n                            <td>1</td>\\n                            <td>2</td>\\n                            <td>3</td>\\n                            <td>4</td>\\n                            <td>5</td>\\n                            <td>6</td>\\n                            <td>7</td>\\n                            <td>1</td>\\n                            <td>2</td>\\n                            <td>3</td>\\n                            <td>4</td>\\n                            <td>5</td>\\n                            <td>6</td>\\n                            <td>7</td>\\n                            <td>1</td>\\n                            <td>2</td>\\n                            <td><input type=\\\"text\\\" value=\\\"8\\\"></td>\\n                            <td></td>\\n                        </tr>\\n                        <tr>\\n                            <td>1</td>\\n                            <td>2</td>\\n                            <td>3</td>\\n                            <td>4</td>\\n                            <td>5</td>\\n                            <td>6</td>\\n                            <td>7</td>\\n                            <td>1</td>\\n                            <td>2</td>\\n                            <td>3</td>\\n                            <td>4</td>\\n                            <td>5</td>\\n                            <td>6</td>\\n                            <td>7</td>\\n                            <td>1</td>\\n                            <td>2</td>\\n                            <td><input type=\\\"text\\\" value=\\\"8\\\"></td>\\n                            <td></td>\\n                        </tr>\\n                        <tr>\\n                            <td>1</td>\\n                            <td>2</td>\\n                            <td>3</td>\\n                            <td>4</td>\\n                            <td>5</td>\\n                            <td>6</td>\\n                            <td>7</td>\\n                            <td>1</td>\\n                            <td>2</td>\\n                            <td>3</td>\\n                            <td>4</td>\\n                            <td>5</td>\\n                            <td>6</td>\\n                            <td>7</td>\\n                            <td>1</td>\\n                            <td>2</td>\\n                            <td><input type=\\\"text\\\" value=\\\"8\\\"></td>\\n                            <td></td>\\n                        </tr>\\n                        <tr>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td>\\n                                <div class=\\\"btn-group btn-group-xs\\\" role=\\\"group\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i> Yes</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i> No</button>\\n                                </div>\\n                            </td>\\n                            <td></td>\\n                        </tr>\\n                        <tr>\\n                        <tr>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td>\\n                                <div class=\\\"btn-group btn-group-xs\\\" role=\\\"group\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i> Yes</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i> No</button>\\n                                </div>\\n                            </td>\\n                            <td></td>\\n                        </tr>\\n                        <tr>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td>\\n                                <div class=\\\"btn-group btn-group-xs\\\" role=\\\"group\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i> Yes</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i> No</button>\\n                                </div>\\n                            </td>\\n                            <td></td>\\n                        </tr>\\n                        <tr>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i></td>\\n                            <td>\\n                                <div class=\\\"btn-group btn-group-xs\\\" role=\\\"group\\\">\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\"><i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i> Yes</button>\\n                                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\"><i class=\\\"fa fa-times\\\" aria-hidden=\\\"true\\\"></i> No</button>\\n                                </div>\\n                            </td>\\n                            <td></td>\\n                        </tr>\\n                        <tr>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td>ER3254GH</td>\\n                            <td><input type=\\\"text\\\" value=\\\"ER3254GH\\\"></td>\\n                            <td></td>\\n                        </tr>\\n                        <tr>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td>Liza</td>\\n                            <td><input type=\\\"text\\\" value=\\\"Liza\\\"></td>\\n                            <td></td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_checklist/patient.checklist.component.html\n// module id = ../../../../../src/app/patient_checklist/patient.checklist.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'patient-checklist',\n    templateUrl: 'patient.checklist.component.html',\n    styleUrls: ['patient.checklist.component.css'],\n})\n\nexport class ChecklistComponent implements OnInit {\n\n    constructor(private router: Router) { }\n\n    ngOnInit() {\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_checklist/patient.checklist.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.clinical.document.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_document/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".clinical-document-box .btn-info.btn-sm {\\n    margin-right: 0;\\n}\\n\\nform {\\n    padding: 0;\\n    margin: 0;\\n}\\n\\n\\n/* add space to denote child element */\\n\\n.textarea {\\n    width: 100%;\\n    min-height: 200px;\\n}\\n\\n.box-comments {\\n    background-color: #fff;\\n}\\n\\n.box-comments {\\n    height: 366px;\\n    overflow-x: auto;\\n}\\n\\n.comment-text-notes {\\n    display: block;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_document/patient.clinical.document.component.css\n// module id = ../../../../../src/app/patient_clinical_document/patient.clinical.document.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header clinical-document-box\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"nav-tabs-custom box box-info\\\">\\n                <ul class=\\\"nav nav-tabs\\\">\\n                    <li [ngClass]=\\\"{active: currentTab==='history'}\\\"><a (click)=\\\"changeCurrentTab('history')\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"true\\\">History</a></li>\\n                    <li [ngClass]=\\\"{active: currentTab==='physical'}\\\"><a (click)=\\\"changeCurrentTab('physical')\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\">Physical Exam</a></li>\\n                    <li [ngClass]=\\\"{active: currentTab==='order'}\\\"><a (click)=\\\"changeCurrentTab('order')\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\">Order</a></li>\\n                    <li [ngClass]=\\\"{active: currentTab==='plan'}\\\"><a (click)=\\\"changeCurrentTab('plan')\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\">Plan</a></li>\\n                    <li [ngClass]=\\\"{active: currentTab==='progress'}\\\"><a (click)=\\\"changeCurrentTab('progress')\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\">Progress Notes</a></li>\\n                </ul>\\n                <div class=\\\"tab-content\\\">\\n                    <div *ngIf=\\\"currentTab === 'history'\\\">\\n                        <patient-history [patientData]=\\\"patientData\\\" [practitioner]=\\\"practitionerData\\\"></patient-history>\\n                    </div>\\n                    <div *ngIf=\\\"currentTab === 'physical'\\\">\\n                        <patient-physical-exam [patientData]=\\\"patientData\\\" [practitioner]=\\\"practitionerData\\\"></patient-physical-exam>    \\n                    </div>\\n                    <div *ngIf=\\\"currentTab === 'order'\\\">\\n                        <patient-orders [patientData]=\\\"patientData\\\" [practitioner]=\\\"practitionerData\\\"></patient-orders>\\n                    </div>\\n                    <div *ngIf=\\\"currentTab === 'plan'\\\">\\n                        <patient-plan [patientName]='patientName' [patientData]=\\\"patientData\\\" [practitioner]=\\\"practitionerData\\\"></patient-plan>\\n                    </div>\\n                    <div *ngIf=\\\"currentTab === 'progress'\\\">\\n                        <patient-clinical-progress-note [patientData]=\\\"patientData\\\" [practitioner]=\\\"practitionerData\\\"></patient-clinical-progress-note>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_document/patient.clinical.document.component.html\n// module id = ../../../../../src/app/patient_clinical_document/patient.clinical.document.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModelMessage } from '../model_message/model.message';\nimport * as moment from 'moment/moment';\n\n@Component({\n  moduleId: module.id,\n  selector: 'patient-clinical-document',\n  templateUrl: 'patient.clinical.document.component.html',\n  styleUrls: ['patient.clinical.document.component.css'],\n})\n\nexport class ClinicalDocumentComponent implements OnInit {\n\n  currentTab: string = 'history';\n\n  @Input() patientData: any;\n  @Input() practitionerData: any;\n  @Input() patientName:any;\n\n  constructor(private router: Router, private modelMessage: ModelMessage) { }\n  \n  changeCurrentTab(tabName: string) {\n    this.currentTab = tabName;\n  }\n\n\n  ngOnInit() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_document/patient.clinical.document.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.clinical.progress.note.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_progress_note/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".error-message {\\n    color: #f60;\\n}\\n\\n.textarea {\\n    width: 100%;\\n    min-height: 100px;\\n}\\n\\n.box-comments {\\n    background-color: #fff;\\n}\\n\\n.box-comments {\\n    height: 366px;\\n    overflow-x: auto;\\n}\\n\\n.comment-text-notes {\\n    display: block;\\n}\\n\\n.box-footer.box-comments {\\n    overflow: auto;\\n}\\n\\n.box-footer.box-comments .box-comment {\\n    text-align: left;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_progress_note/patient.clinical.progress.note.component.css\n// module id = ../../../../../src/app/patient_clinical_progress_note/patient.clinical.progress.note.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"box-body\\\">\\n    <div class=\\\"box-body pad\\\">\\n        <div class=\\\"box-body pad\\\">\\n            <textarea class=\\\"textarea\\\" id=\\\"notes-entry\\\" placeholder=\\\"Please enter the progress note's here\\\" [(ngModel)]=\\\"entryProgressNote\\\"></textarea>\\n        </div>\\n        <p class=\\\"error-message\\\">{{errorMessage}}</p>\\n        <div class=\\\"box-footer text-align-right\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"clickCancel()\\\">Cancel</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-info margin\\\" (click)=\\\"clickProgressNoteAdd()\\\">Add</button>\\n        </div>\\n        <div class=\\\"box box-widget \\\">\\n            <div class=\\\"box-footer box-comments \\\">\\n                <div class=\\\"box-comment\\\" *ngFor=\\\"let progressNote of progressNoteList\\\">\\n                    <note-display [note]=\\\"progressNote\\\"> </note-display> \\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_progress_note/patient.clinical.progress.note.component.html\n// module id = ../../../../../src/app/patient_clinical_progress_note/patient.clinical.progress.note.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { ClinicalProgressNoteServices } from '../services/fhir/clinical.progress.note.services';\nimport { ModelMessage } from '../model_message/model.message';\nimport { RoleServices } from '../services/presence/role.services';\n\n@Component({\n  moduleId: module.id,\n  selector: 'patient-clinical-progress-note',\n  templateUrl: 'patient.clinical.progress.note.component.html',\n  styleUrls: ['patient.clinical.progress.note.component.css']\n})\n\nexport class PatientClinicalProgressNoteComponent implements OnInit {\n\n  entryProgressNote:any;\n  progressNoteList:any = [];\n  errorMessage:any;\n  roleWrite: boolean = false;\n\n  @Input() patientData: any;\n  @Input() practitioner: any;\n  \n  constructor(private roleServices: RoleServices, private clinicalProgressNoteServices: ClinicalProgressNoteServices, private modelMessage: ModelMessage ) { }\n\n  clickProgressNoteAdd(){\n    if(this.entryProgressNote){\n      this.errorMessage = '';\n      let progressData = {\n        \"patientId\" : this.patientData.id,\n        \"encounterId\" : this.patientData.encounterId,\n        \"note\" : this.entryProgressNote,\n        \"practitionerId\" : this.practitioner.id,\n        \"practitionerName\" : this.practitioner.name,\n      }\n\n      this.clinicalProgressNoteServices.createProgressNote(progressData).subscribe(\n        data => {\n          this.progressNoteList.unshift(data);\n          this.entryProgressNote = null;\n        },\n        error => {\n          this.modelMessage.errorMessage(error);\n        });\n      }else{\n        this.errorMessage = 'Please enter progress notes'\n      }\n  }\n\n  clickCancel(){\n    this.entryProgressNote = null;\n    this.errorMessage = null;\n  }\n\n  getProgressNote(patientId,encounterId){\n    this.clinicalProgressNoteServices.getProgressNote(patientId,encounterId).subscribe(\n      data=> {\n          this.progressNoteList = data;\n      },\n      error=> {\n        this.modelMessage.errorMessage(error);\n      }\n    );\n  }\n\n  ngOnInit() {\n    let userRole = this.roleServices.getRole('patient-detail');\n        if (userRole.write) {\n            this.roleWrite = true;\n        }\n    \n    this.getProgressNote(this.patientData.id,this.patientData.encounterId)   \n  }      \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_clinical_progress_note/patient.clinical.progress.note.component.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './patient.create.component';\nexport * from './patient.create.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_create/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".patient-create .radio {\\n    display: inline-block;\\n    margin-right: 10px;\\n}\\n\\n.patient-create .data-lable {\\n    display: block;\\n    padding-top: 7px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_create/patient.create.component.css\n// module id = ../../../../../src/app/patient_create/patient.create.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header patient-create\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h1 class=\\\"sub-page-header\\\">\\n                Patients\\n                <small>({{mode}})</small>\\n            </h1>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"top-action-buttons\\\">\\n                <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"routePatients()\\\" class=\\\"btn bg-default\\\" title=\\\"Back\\\"><i class=\\\"fa fa-arrow-left\\\"></i></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li><a (click)=\\\"routePatients()\\\"><i class=\\\"fa fa-users\\\"></i> Patients</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-plus\\\"></i> {{mode}} Patient</li>\\n            </ol>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n        </div>\\n    </div>\\n</section>\\n<section class=\\\"patient-create\\\">\\n    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"createPatientForm\\\" (ngSubmit)=\\\"save(createPatientForm.value, createPatientForm.valid)\\\" novalidate>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"box box-info\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"box-header with-border\\\">\\n                                <h3 class=\\\"box-title\\\">Admission Details</h3>\\n                            </div>\\n                            <div class=\\\"box-body\\\">\\n\\n                               <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Hospital</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <span class=\\\"data-lable\\\">{{hospitalName}}</span>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">MRN</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" (change)=\\\"onChangeMrn($event.target.value)\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Medical Record Number for the Patient\\\" maxlength=\\\"50\\\" formControlName=\\\"mrn\\\" required>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createPatientForm.controls.mrn.valid || (createPatientForm.controls.mrn.pristine && !submitted)\\\">\\n                                            MRN is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">IPN</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Inpatient Number\\\" maxlength=\\\"50\\\" formControlName=\\\"ipno\\\" required>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createPatientForm.controls.ipno.valid || (createPatientForm.controls.ipno.pristine && !submitted)\\\">\\n                                            IPN is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Department</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <select class=\\\"form-control\\\" formControlName=\\\"icuId\\\" [(ngModel)]=\\\"selectedICU\\\" (change)=\\\"onChangeIcu($event.target.value)\\\" required>\\n                                            <option disabled selected [value]=\\\"default\\\" >Choose Department</option>\\n                                            <option *ngFor=\\\"let icu of icus\\\" [value]=\\\"icu.id\\\">{{icu.name}}</option>\\n                                        </select>\\n                                         <small class=\\\"form-error\\\" [hidden]=\\\"createPatientForm.controls.icuId.valid || (createPatientForm.controls.icuId.pristine && !submitted)\\\">\\n                                                Department is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Bed</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <select class=\\\"form-control\\\" formControlName=\\\"bedId\\\" [(ngModel)]=\\\"selectedBed\\\" required>\\n                                            <option disabled selected [value]=\\\"default\\\" >Choose Bed</option>\\n                                            <option *ngFor=\\\"let bed of beds\\\" [value]=\\\"bed.id\\\">{{bed.name}}</option>\\n                                        </select>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createPatientForm.controls.bedId.valid || (createPatientForm.controls.bedId.pristine && !submitted)\\\">\\n                                                Bed is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Status</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <div class=\\\"radio\\\">\\n                                            <label>\\n                                                <input type=\\\"radio\\\" name=\\\"status\\\" value=\\\"Admitted\\\" checked formControlName=\\\"status\\\">Admitted\\n                                            </label>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-6\\\">\\n                            <div class=\\\"box-header with-border\\\">\\n                                <h3 class=\\\"box-title\\\">Patient Details</h3>\\n                            </div>\\n                            <div class=\\\"box-body\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Patient Name</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Patient Name\\\" maxlength=\\\"100\\\" formControlName=\\\"name\\\" required>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createPatientForm.controls.name.valid || (createPatientForm.controls.name.pristine && !submitted)\\\">\\n                                            Name is required (minimum 2 characters).\\n                                        </small>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Gender</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <div class=\\\"radio\\\">\\n                                            <label>\\n                                                <input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"Male\\\" checked=\\\"checked\\\" formControlName=\\\"gender\\\">Male\\n                                            </label>\\n                                        </div>\\n                                        <div class=\\\"radio\\\">\\n                                            <label>\\n                                                <input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"Female\\\" formControlName=\\\"gender\\\">Female\\n                                            </label>\\n                                        </div>\\n                                        <div class=\\\"radio\\\">\\n                                            <label>\\n                                                <input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"Other\\\" formControlName=\\\"gender\\\">Other\\n                                            </label>\\n                                        </div>\\n                                        <div class=\\\"radio\\\">\\n                                            <label>\\n                                                <input type=\\\"radio\\\" name=\\\"gender\\\" value=\\\"Unknown\\\" formControlName=\\\"gender\\\">Unknown\\n                                            </label>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Date of Birth</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"date\\\" class=\\\"form-control dateOfBirth\\\" placeholder=\\\"Enter Date of Birth\\\" formControlName=\\\"dateOfBirth\\\" [max]=\\\"todayDate\\\" required=\\\"required\\\">\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createPatientForm.controls.dateOfBirth.valid || (createPatientForm.controls.dateOfBirth.pristine && !submitted)\\\">\\n                                            Date of Birth is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Phone Number</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Phone Number\\\" formControlName=\\\"phoneNumber\\\"  maxlength=\\\"15\\\" pattern=\\\"^[\\\\d\\\\ \\\\-+]+$\\\" required>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createPatientForm.controls.phoneNumber.valid || (createPatientForm.controls.phoneNumber.pristine && !submitted)\\\">\\n                                            Phone number is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\"> E-mail </label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Enter email\\\" formControlName=\\\"emailId\\\" maxlength=\\\"50\\\" pattern=\\\"[a-zA-Z0-9!#$%&'*+=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\" required>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createPatientForm.controls.emailId.valid || (createPatientForm.controls.emailId.pristine && !submitted)\\\">\\n                                            E-mail is required and it should be a proper E-mail id.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Maritial Status</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <div class=\\\"radio\\\">\\n                                            <label>\\n                                                <input type=\\\"radio\\\" name=\\\"maritialStatus\\\" value=\\\"Single\\\" checked formControlName=\\\"maritialStatus\\\">Single\\n                                            </label>\\n                                        </div>\\n                                        <div class=\\\"radio\\\">\\n                                            <label>\\n                                                <input type=\\\"radio\\\" name=\\\"maritialStatus\\\" value=\\\"Married\\\" formControlName=\\\"maritialStatus\\\">Married\\n                                            </label>\\n                                        </div>\\n                                        <div class=\\\"radio\\\">\\n                                            <label>\\n                                                <input type=\\\"radio\\\" name=\\\"maritialStatus\\\" value=\\\"Divorced\\\" formControlName=\\\"maritialStatus\\\">Divorced\\n                                            </label>\\n                                        </div>\\n                                        <div class=\\\"radio\\\">\\n                                            <label>\\n                                                <input type=\\\"radio\\\" name=\\\"maritialStatus\\\" value=\\\"Widowed\\\" formControlName=\\\"maritialStatus\\\">Widowed\\n                                            </label>\\n                                        </div>\\n                                        <div class=\\\"radio\\\">\\n                                            <label>\\n                                                <input type=\\\"radio\\\" name=\\\"maritialStatus\\\" value=\\\"Unknown\\\" formControlName=\\\"maritialStatus\\\">Unknown\\n                                            </label>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Address</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Address\\\" formControlName=\\\"addressline\\\" maxlength=\\\"100\\\" required>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createPatientForm.controls.addressline.valid || (createPatientForm.controls.addressline.pristine && !submitted)\\\">\\n                                                Address is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">City</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter City Name\\\" formControlName=\\\"city\\\" maxlength=\\\"50\\\" required>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createPatientForm.controls.city.valid || (createPatientForm.controls.city.pristine && !submitted)\\\">\\n                                                City is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">State</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter State Name\\\" formControlName=\\\"state\\\" maxlength=\\\"50\\\" required>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createPatientForm.controls.state.valid || (createPatientForm.controls.state.pristine && !submitted)\\\">\\n                                                State is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Pin</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Pin Number\\\" formControlName=\\\"pin\\\" maxlength=\\\"15\\\" pattern=\\\"^[\\\\d\\\\ \\\\-+]+$\\\" required>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createPatientForm.controls.pin.valid || (createPatientForm.controls.pin.pristine && !submitted)\\\">\\n                                                Pin is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-12\\\">\\n                            <div class=\\\"box-header\\\">\\n                                <div class=\\\"box-footer text-align-right\\\" *ngIf=\\\"!disableCreateAction\\\">\\n                                    <button (click)=\\\"routePatients()\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                                    <button type=\\\"submit\\\"  class=\\\"btn btn-info margin\\\">\\n                                        <span *ngIf=\\\"createMode\\\">Create</span>\\n                                        <span *ngIf=\\\"!createMode\\\">Update</span>\\n                                    </button>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</section>\\n<div class=\\\"modal dischargeConfirmPopUp\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"clickClosePopup()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">MRN found!!!</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Entered MRN matches with an existing patient.\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" (click)=\\\"clickClosePopup()\\\" class=\\\"btn btn-default\\\">Show Discharge Summary</button>\\n                <button type=\\\"button\\\" (click)=\\\"clickChangeStatus()\\\" class=\\\"btn btn-primary\\\">Fetch Patient Data</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_create/patient.create.component.html\n// module id = ../../../../../src/app/patient_create/patient.create.component.html\n// module chunks = 0","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { BedServices } from '../services/presence/bed.services';\nimport { DepartmentServices } from '../services/presence/department.services';\nimport { HospitalServices } from '../services/presence/hospital.services';\nimport { PatientServices } from '../services/presence/patient.services';\nimport { PatientInterface } from './patient.interface';\nimport { ModelMessage } from '../model_message/model.message';\nimport * as moment from 'moment';\nimport * as $ from 'jquery';\n\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'cm-patient-create',\n    templateUrl: 'patient.create.component.html',\n    styleUrls: ['patient.create.component.css']\n})\n\nexport class PatientCreateComponent implements OnInit, OnDestroy {\n\n    public createPatientForm: FormGroup;\n    public submitted: boolean;\n    public events: any[] = [];\n    hospitals: any;\n    icus: any;\n    allBeds: any;\n    beds: any;\n    patients: any;\n    doctors: any;\n    nurses: any;\n    createMode: boolean = true;\n    mode: string = 'Create';\n    patientId: any;\n    patientFhirId : any;\n    patientIPN : any;\n    userData: any;\n    hospitalName: string;\n    fhirHospitalId: string;\n    private sub: any;\n    selectedICU: string;\n    selectedBed: string;\n    editPatientData: any;\n    setDateOfBirth: any;\n    tempBed: any;\n    currentPatientId:any;\n    existingBedId: string;\n    dischargedPatientId: string;\n    patientFhirData: any;\n    todayDate:any;\n    disableCreateAction: boolean = false;\n    \n\n    constructor(private router: Router, private route: ActivatedRoute, private fb: FormBuilder, private bedServices: BedServices, private departmentServices: DepartmentServices, private hospitalServices: HospitalServices, private patientServices:PatientServices, private modelMessage: ModelMessage) { }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    routePatients() {\n        this.router.navigate(['/patients']);\n    }\n\n    onChangeMrn(patientMrn)\n    {\n        let dischargedPatient = this.patients.find(patient => patient.mrn == patientMrn && patient.status === \"Discharged\");\n        if (dischargedPatient) {\n            this.clickDischargeConfirm();\n            this.dischargedPatientId = dischargedPatient.id;\n        }\n    } \n\n    clickDischargeConfirm()\n    {\n        $('.dischargeConfirmPopUp').show();\n    }    \n\n    clickClosePopup() {\n        $('.dischargeConfirmPopUp').hide();\n    }\n\n    clickChangeStatus()\n    {\n        this.router.navigate(['/patient/create/', this.dischargedPatientId, 'Readmit']);\n        $('.dischargeConfirmPopUp').hide();\n    }\n\n    onChangeIcu(icuId) {\n        let icuBeds = this.allBeds.filter(bed => bed.icuId == icuId);\n        let emptyBeds = icuBeds.filter(bed => {\n                let occupiedPatient =  this.patients.find(patient => (patient.bedId == bed.id && patient.status !== \"Discharged\"));\n                if(occupiedPatient){\n                    return false;\n                }else{\n                    return true;\n                }\n        });\n        if (this.createMode) {\n            this.beds = emptyBeds;\n        } else {\n            let patientBed = icuBeds.find(bed => bed.id == this.editPatientData.bedId);\n            if(patientBed){\n                emptyBeds.push(patientBed);\n                this.selectedBed = this.editPatientData.bedId;\n            }\n            this.beds = emptyBeds;\n        }\n    }\n\n    save(model: PatientInterface, isValid: boolean) {\n        let currentDate = moment();\n        if (moment(model.dateOfBirth) > currentDate) {\n            this.modelMessage.errorMessage({ statusText: 'Date of Birth cannot be future date.' });\n        } else {\n        this.submitted = true;\n        if (model.hospitalId === '' || !model.hospitalId) {\n            model.hospitalId = this.userData.hospitalId;\n        }\n\n        if (isValid) {\n            if (this.createMode) {\n                this.disableCreateAction = true;\n                this.patientServices.createPatient(model,this.fhirHospitalId).subscribe(\n                    data => {\n                        let msg = 'Patient ' + model.name + ' was created ';\n                        this.modelMessage.successMessage(msg);\n                        this.routePatients();\n                    },\n                    \n                    error => {\n                        this.disableCreateAction=false;\n                        let errorResponse = {status: 500, statusText: \"Failed to create patient\"};\n                        this.modelMessage.errorMessage(errorResponse);\n                    }  \n               );  \n            } \n            \n            else {\n                if (this.mode === \"Readmit\") {\n                  model.episodeOfCareId = this.patientFhirData.episodeOfCareId;  \n                }else{\n                  if(model.bedId != this.existingBedId){\n                     model.currentBedId = this.existingBedId;\n                  }\n                  model.encounterId = this.patientFhirData.encounterId;\n                }\n                this.disableCreateAction = true;\n                this.patientServices.updatePatient(model,this.patientFhirId,this.fhirHospitalId).subscribe(\n                    data => {\n                        let msg = 'Patient ' + model.name + ' was updated ';\n                        this.modelMessage.successMessage(msg);\n                        this.routePatients();\n                        \n                    },\n                    \n                    error => {\n                        this.disableCreateAction = false;\n                        this.modelMessage.errorMessage(error);\n                    }\n                );\n            }\n        }\n        \n        }\n    }\n\n    createPatient() {\n        this.createPatientForm = new FormGroup({\n            name: new FormControl('',<any>Validators.required),\n            gender: new FormControl('Male'),\n            dateOfBirth: new FormControl(''),\n            phoneNumber: new FormControl(''),\n            maritialStatus: new FormControl('Single'),\n            addressline: new FormControl(''),\n            city: new FormControl(''),\n            pin: new FormControl(''),\n            hospitalId: new FormControl(this.userData.hospitalId),\n            icuId: new FormControl(''),\n            bedId: new FormControl(''),\n            mrn: new FormControl(''),\n            status: new FormControl('Admitted'),\n            ipno: new FormControl(''),\n            emailId: new FormControl(''),\n            state: new FormControl('')\n\n        });\n    }\n\n    editPatient(data) {\n        this.createPatientForm = new FormGroup({\n            name: new FormControl(data.name),\n            gender: new FormControl(data.gender),\n            dateOfBirth: new FormControl(moment(data.dateOfBirth).format('YYYY-MM-DD')),\n            phoneNumber: new FormControl(data.phoneNumber, <any>Validators.required),\n            maritialStatus: new FormControl(data.maritialStatus),\n            addressline: new FormControl(data.addressline, <any>Validators.required),\n            city: new FormControl(data.city, <any>Validators.required),\n            pin: new FormControl(data.pin, <any>Validators.required),\n            hospitalId: new FormControl(data.hospitalId),\n            icuId: new FormControl(data.icuId, <any>Validators.required),\n            bedId: new FormControl(data.bedId, <any>Validators.required),\n            mrn: new FormControl(data.mrn, <any>Validators.required),\n            status: new FormControl('Admitted'),\n            id: new FormControl(data.id),\n            lastSeen: new FormControl(data.lastSeen),\n            ipno: new FormControl(this.patientIPN),\n            emailId: new FormControl(data.emailId),\n            state: new FormControl(data.state)\n        });\n    }\n\n    readmitPatient(data) {\n        this.createPatientForm = new FormGroup({\n            name: new FormControl(data.name),\n            gender: new FormControl(data.gender),\n            dateOfBirth: new FormControl(moment(data.dateOfBirth).format('YYYY-MM-DD')),\n            phoneNumber: new FormControl(data.phoneNumber, <any>Validators.required),\n            maritialStatus: new FormControl(data.maritialStatus),\n            addressline: new FormControl(data.addressline, <any>Validators.required),\n            city: new FormControl(data.city, <any>Validators.required),\n            pin: new FormControl(data.pin, <any>Validators.required),\n            hospitalId: new FormControl(data.hospitalId),\n            icuId: new FormControl(''),\n            bedId: new FormControl(''),\n            mrn: new FormControl(data.mrn, <any>Validators.required),\n            status: new FormControl('Admitted'),\n            id: new FormControl(data.id),\n            state: new FormControl(data.state),\n            lastSeen: new FormControl(data.lastSeen),\n            ipno: new FormControl(''),\n            emailId: new FormControl(data.emailId)\n        });\n    }\n\n    ngOnInit() {\n        let currentDate = moment();\n        this.todayDate = currentDate.format('MM/DD/YYYY');\n        this.userData = JSON.parse(sessionStorage.getItem('userData'));\n        this.fhirHospitalId = sessionStorage.getItem('fhirHospitalId');\n        this.hospitals = this.route.snapshot.data['hospitalList'];\n        this.hospitalName = this.hospitals.find(hospital => hospital.id == this.userData.hospitalId).name;\n        this.icus = this.route.snapshot.data['departmentList']; \n        this.patients = this.route.snapshot.data['patientList'];\n        this.doctors = this.route.snapshot.data['doctorsList'];\n        this.allBeds = this.route.snapshot.data['bedList'];\n        this.createPatient();\n\n        this.sub = this.route.params.subscribe(params => {\n            if (params['id']) {\n                this.patientId = params['id'];\n                this.createMode = false;\n                this.mode = params['mode'];\n                this.patientServices.getPatient(this.patientId).subscribe(\n                    data => {\n                        let patientData = data;\n                        if (this.mode === \"Readmit\") {\n                            this.patientServices.getFhirPatientWithEOCById(this.patientId).subscribe(\n                                data => {\n                                    let responseData:any = data || {};\n                                    if (responseData.id) {\n                                       this.patientFhirData = responseData;\n                                       this.patientFhirId = responseData.id;\n                                       this.editPatientData = patientData;\n                                       this.selectedICU = \"\";\n                                       this.readmitPatient(this.editPatientData);\n                                    }else{\n                                       let errorResponse = { status: 500, statusText: \"Failed to get patient data\" };\n                                       this.modelMessage.errorMessage(errorResponse);\n                                    }\n                                },\n                                error => {\n                                    let errorResponse = { status: 500, statusText: \"Failed to get patient data\" };\n                                    this.modelMessage.errorMessage(errorResponse);\n                                }\n                            );\n                        }else{\n                            this.patientServices.getFhirPatientById(this.patientId).subscribe(\n                            data => {\n                                let responseData:any = data || {};\n                                if(responseData.id){\n                                    this.patientFhirData = responseData;\n                                    this.patientFhirId = responseData.id;\n                                    this.patientIPN = responseData.ipn;\n                                    this.editPatientData = patientData;\n                                    this.selectedICU = this.editPatientData.icuId;\n                                    let icuBeds = this.allBeds.filter(bed => bed.icuId == this.editPatientData.icuId);\n                                    let emptyBeds = icuBeds.filter(bed => {\n                                        let occupiedPatient =  this.patients.find(patient => patient.bedId == bed.id);\n                                        if(occupiedPatient){\n                                            return false;\n                                        }else{\n                                            return true;\n                                        }\n                                    });\n                                    let patientBed = icuBeds.find(bed => bed.id == this.editPatientData.bedId);\n                                    emptyBeds.push(patientBed);\n                                    this.beds = emptyBeds;\n                                    this.existingBedId = this.editPatientData.bedId;\n                                    this.selectedBed = this.editPatientData.bedId;\n                                    this.editPatient(this.editPatientData);\n                                }else{\n                                    let errorResponse = {status: 500, statusText: \"Failed to get patient data\"};\n                                    this.modelMessage.errorMessage(errorResponse);\n                                } \n                            },\n                            error => {\n                                let errorResponse = {status: 500, statusText: \"Failed to get patient data\"};\n                                this.modelMessage.errorMessage(errorResponse);\n                            }\n                          );\n                       }\n                    },\n                    error => {\n                        let errorResponse = {status: 500, statusText: \"Failed to get patient data\"};\n                        this.modelMessage.errorMessage(errorResponse);\n                    }\n                );\n                    \n            }\n        }); \n    }\n\n    ngOnDestroy() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_create/patient.create.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PatientCreateComponent } from './patient.create.component';\n\n@NgModule({\n    imports: [CommonModule, BrowserModule, FormsModule, ReactiveFormsModule],\n    declarations: [PatientCreateComponent],\n    exports: [PatientCreateComponent, FormsModule, ReactiveFormsModule]\n})\n\nexport class PatientCreateModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_create/patient.create.module.ts","import { Route } from '@angular/router';\nimport { PatientCreateComponent } from './index';\nimport { HospitalListResolver } from '../services/resolvers/hospital-resolver.services';\nimport { DepartmentsByHospitalResolver } from '../services/resolvers/departmentsByHospital-resolver.services';\nimport { PatientsByHospitalResolver } from '../services/resolvers/patientsByHospital-resolver.services';\nimport { NursesListResolver } from '../services/resolvers/nurses-resolver.services';\nimport { DoctorsListResolver } from '../services/resolvers/doctors-resolver.services';\nimport { BedListResolver } from '../services/resolvers/bed-resolver.services';\n\nexport const PatientCreateRoutes: Route[] = [\n    {\n        path: 'patient/create',\n        component: PatientCreateComponent,\n        resolve: {hospitalList:HospitalListResolver,\n                  departmentList:DepartmentsByHospitalResolver,\n                  patientList:PatientsByHospitalResolver,\n                  doctorsList:DoctorsListResolver,\n                  bedList:BedListResolver\n                 }\n    },\n    {\n        path: 'patient/create/:id/:mode',\n        component: PatientCreateComponent,\n        resolve: {hospitalList:HospitalListResolver,\n                  departmentList:DepartmentsByHospitalResolver,\n                  patientList:PatientsByHospitalResolver,\n                  doctorsList:DoctorsListResolver,\n                  bedList:BedListResolver\n                }\n    }\n    // , {\n    //     path: 'patient/create/:id',\n    //     component: PatientCreateComponent,\n    //     resolve: {hospitalList:HospitalListResolver,\n    //               departmentList:DepartmentsByHospitalResolver,\n    //               patientList:PatientsByHospitalResolver,\n    //               doctorsList:DoctorsListResolver,\n    //               bedList:BedListResolver\n    //             }\n    // }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_create/patient.create.routes.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.diagnosis.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_diagnosis/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".error-message {\\n    color: #f60;\\n}\\n\\n.textarea {\\n    width: 100%;\\n    min-height: 100px;\\n}\\n\\n.box-comments {\\n    background-color: #fff;\\n}\\n\\n.box-comments {\\n    height: 366px;\\n    overflow-x: auto;\\n}\\n\\n.comment-text-notes {\\n    display: block;\\n}\\n\\n.box-footer.box-comments {\\n    overflow: auto;\\n}\\n\\n.box-footer.box-comments .box-comment {\\n    text-align: left;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_diagnosis/patient.diagnosis.component.css\n// module id = ../../../../../src/app/patient_diagnosis/patient.diagnosis.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"loading-spinner\\\" *ngIf=\\\"loading\\\"></div>\\n<div *ngIf=\\\"!loading\\\">\\n  <div class=\\\"box\\\">\\n      <div class=\\\"box-header\\\">\\n          <h3 class=\\\"box-title\\\">{{patientName}}'s\\n              <small> Diagnosis</small>\\n          </h3>\\n      </div>\\n      <div class=\\\"box-body pad\\\">\\n          <div class=\\\"box-body pad\\\">\\n              <textarea class=\\\"textarea\\\" id=\\\"notes-entry\\\" placeholder=\\\"Please enter the diagnosis note's here\\\" [(ngModel)]=\\\"entryDiagnosisNote\\\"></textarea>\\n          </div>\\n          <p class=\\\"error-message\\\">{{errorMessage}}</p>\\n          <div class=\\\"box-footer text-align-right\\\" *ngIf=\\\"roleWrite\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"clickDiagnosisCancel()\\\">Cancel</button>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-info margin\\\" (click)=\\\"clickDiagnosisAdd()\\\">Add</button>\\n          </div>\\n          <div class=\\\"box box-widget \\\" *ngIf=\\\"diagnosislist.length\\\">\\n              <div class=\\\"box-header with-border \\\">\\n                  <h3 class=\\\"box-title \\\">Diagnosis Notes</h3>\\n              </div>\\n              <div class=\\\"box-footer box-comments \\\">\\n                  <div class=\\\"box-comment\\\" *ngFor=\\\"let diagnosisNote of diagnosislist\\\">\\n                      <div class=\\\"comment-text \\\">\\n                          <div class=\\\"username \\\">\\n                              <span class=\\\"text-muted pull-right \\\">{{diagnosisNote.createdDate}}</span>\\n                          </div>\\n                          <span class=\\\"comment-text-notes\\\">{{diagnosisNote.note}}</span>\\n                          <span class=\\\"text-muted pull-right \\\">{{diagnosisNote.name}}</span>\\n                      </div>\\n                  </div>\\n              <div>\\n              </div>\\n          </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_diagnosis/patient.diagnosis.component.html\n// module id = ../../../../../src/app/patient_diagnosis/patient.diagnosis.component.html\n// module chunks = 0","import { Component, OnInit, Input, Output,EventEmitter } from '@angular/core';\nimport { DiagnosisServices } from '../services/fhir/diagnosis.services';\nimport { ModelMessage } from '../model_message/model.message';\nimport { RoleServices } from '../services/presence/role.services';\n\n@Component({\n    moduleId: module.id,\n    selector: 'patient-diagnosis',\n    templateUrl: 'patient.diagnosis.component.html',\n    styleUrls: ['patient.diagnosis.component.css'],\n})\n\nexport class PatientDiagnosisComponent implements OnInit {\n\n    @Output()\n    cancelEvent: EventEmitter<string> = new EventEmitter(); \n\n    loading: boolean = true;\n    entryDiagnosisNote: any;\n    diagnosislist:any = [];\n    roleWrite: boolean = false;\n    errorMessage: string;\n\n    @Input() patientData: any;\n    @Input() practitionerData:any;\n    @Input() patientName:string;\n\n    constructor(private roleServices: RoleServices, private diagnosisServices: DiagnosisServices, private modelMessage: ModelMessage) { }\n    \n    clickDiagnosisCancel(){\n        this.diagnosislist=null;\n        this.cancelEvent.emit();\n    }\n\n    clickDiagnosisAdd(){\n        if(this.entryDiagnosisNote){\n            this.errorMessage = '';\n            let diagnosisData = {\n            \"patientId\": this.patientData.id,\n            \"practitionerId\": this.practitionerData.id,\n            \"note\": this.entryDiagnosisNote,\n            \"name\": this.practitionerData.name,\n            \"encounterId\":this.patientData.encounterId\n        };\n        this.diagnosisServices.createDiagnosis(diagnosisData).subscribe(\n            data => {\n                this.diagnosislist.unshift(data);\n                this.entryDiagnosisNote=null;\n            },\n            error => {\n                this.modelMessage.errorMessage(error);\n            });   \n        }else{\n            this.errorMessage = 'Please Enter the Diagnosis notes';\n        }\n        \n    }\n\n    getDiagnosis(patientId,encounterId) {\n        this.diagnosisServices.getDiagnosis(patientId, encounterId).subscribe(\n            data => {\n                let responseData:any = data;\n                if(responseData.length){\n                    this.diagnosislist = responseData;\n                    this.loading=false;\n                }else{\n                    if(!this.roleWrite){\n                        this.cancelEvent.emit();\n                        this.modelMessage.infoMessage(\"No Diagnosis Notes\");\n                        this.loading=false;\n                    }else{\n                        this.loading=false;\n                    }\n                }\n            },\n            error => {\n                this.loading=false;\n                this.cancelEvent.emit();\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    ngOnInit() {\n        let userRole = this.roleServices.getRole('patient-detail');\n        if (userRole.write) {\n            this.roleWrite = true;\n        }\n        this.getDiagnosis(this.patientData.id, this.patientData.encounterId);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_diagnosis/patient.diagnosis.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.discharge.summary.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_discharge_summary/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".discharge-summary-box textarea {\\n  display: block;\\n  width: 100%;\\n  height: 60px;\\n  margin-bottom: 10px;\\n}\\n\\n.discharge-summary-box a {\\n  display: block;\\n  float: right;\\n  margin-top: 10px;\\n  margin-left: 5px;\\n}\\n\\n.discharge-summary-box .btn-print {\\n  float: right;\\n  margin-top: 10px;\\n  margin-right: 5px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_discharge_summary/patient.discharge.summary.component.css\n// module id = ../../../../../src/app/patient_discharge_summary/patient.discharge.summary.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"box box-info discharge-summary-box\\\">\\n    <div class=\\\"box-header with-border\\\">\\n        <h3 class=\\\"box-title\\\">Discharge Summary</h3>\\n    </div>\\n    <div class=\\\"box-body\\\">\\n        <form class=\\\"form-horizontal\\\">\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-2 control-label\\\">Problems</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <textarea class=\\\"form-control\\\" placeholder=\\\"Enter Problems\\\"></textarea>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-2 control-label\\\">Pertinent investigations</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <textarea class=\\\"form-control\\\" placeholder=\\\"Enter Pertinent investigations\\\"></textarea>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-2 control-label\\\">Final Diagnosis/ Diagnoses</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <textarea class=\\\"form-control\\\" placeholder=\\\"Enter Final Diagnosis/ Diagnoses\\\"></textarea>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-2 control-label\\\">Procedures done</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <textarea class=\\\"form-control\\\" placeholder=\\\"Enter Procedures done\\\"></textarea>\\n                </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-2 control-label\\\">Follow-up instructions</label>\\n                <div class=\\\"col-sm-10\\\">\\n                    <textarea class=\\\"form-control\\\" placeholder=\\\"Enter Follow-up instructions\\\"></textarea>\\n                </div>\\n            </div>\\n            <div class=\\\"align-right\\\">\\n                <a class=\\\"btn btn-info\\\" (click)=\\\"clickPrint()\\\"><i class=\\\"fa fa-print\\\" aria-hidden=\\\"true\\\"></i> Print</a>\\n                <a class=\\\"btn btn-info\\\" (click)=\\\"clickPrint()\\\">save</a>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_discharge_summary/patient.discharge.summary.component.html\n// module id = ../../../../../src/app/patient_discharge_summary/patient.discharge.summary.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    moduleId: module.id,\n    selector: 'patient-discharge-summary',\n    templateUrl: 'patient.discharge.summary.component.html',\n    styleUrls: ['patient.discharge.summary.component.css'],\n})\n\nexport class DischargeSummaryComponent implements OnInit {\n\n    constructor(private router: Router) { }\n\n    ngOnInit() {\n        console.log('111111');\n    }\n\n    clickPrint() {\n        console.log('sddsfdffd');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_discharge_summary/patient.discharge.summary.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.flow.sheet.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_flow_sheet/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".flow-sheet-box .box-header .btn {\\n    float: right;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_flow_sheet/patient.flow.sheet.component.css\n// module id = ../../../../../src/app/patient_flow_sheet/patient.flow.sheet.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"box box-info flow-sheet-box\\\">\\n    <div class=\\\"box-header with-border\\\">\\n        <h3 class=\\\"box-title\\\">Flow Sheet</h3>\\n        <button *ngIf=\\\"isHospitalUser\\\" class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\" (click)=\\\"saveChangedObservations()\\\">Save</button>\\n    </div>\\n    <div class=\\\"box-body\\\">\\n        <div>\\n            <!-- <ag-grid-ng2 #agGrid style=\\\"width: 100%; height: 575px;\\\" class=\\\"ag-fresh\\\" [gridOptions]=\\\"gridOptions\\\" [getNodeChildDetails]=\\\"getNodeChildDetails\\\"\\n                enableSorting enableColResize suppressMenuFilterPanel singleClickEdit  (cellValueChanged)=\\\"onCellValueChanged($event)\\\">\\n            </ag-grid-ng2> -->\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_flow_sheet/patient.flow.sheet.component.html\n// module id = ../../../../../src/app/patient_flow_sheet/patient.flow.sheet.component.html\n// module chunks = 0","import { Component, AfterViewInit, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, NavigationStart, ActivatedRoute } from '@angular/router';\n\nconst observationWidth: number = 150;\nconst timestampWidth: number = 100;\n\n@Component({\n  moduleId: module.id,\n  selector: 'patient-flow-sheet',\n  templateUrl: 'patient.flow.sheet.component.html',\n  styleUrls: ['patient.flow.sheet.component.css'],\n})\n\nexport class FlowSheetComponent implements OnInit {\n\n  @Input()\n  patientFhirData: any;\n\n  @Input()\n  flowSheetData: any;\n\n  @Output()\n  navigateEvent: EventEmitter<string> = new EventEmitter();\n\n  // private gridOptions: GridOptions;\n  private coldefs: any;\n  private colEditable: boolean = false;\n  private userData: any;\n  private isHospitalUser: boolean = false;\n  private roleWrite: boolean = false;\n\n  constructor(private router: Router, private route: ActivatedRoute) { }\n\n  private createColumnDefs(effectiveDateTime) {\n    // let orgTimeZone = \"Asia/Calcutta\";\n    // let globalWidth = 67;\n    // let colDefs = [];\n    // let addmittedDate = moment(effectiveDateTime).tz(orgTimeZone);\n    // let observedDate = moment(effectiveDateTime).tz(orgTimeZone);\n    // let todayDate = moment().tz(orgTimeZone);\n    // let morningDate = moment(effectiveDateTime).tz(orgTimeZone);\n    // let eveningDate = moment(effectiveDateTime).tz(orgTimeZone);\n    // let nightDate = moment(effectiveDateTime).tz(orgTimeZone);\n    // let isAdmittedDay = true;\n    // let isMorningShift = false;\n    // let isEveningShift = false;\n    // let isNightShift = false;\n    // todayDate.add(1, 'day');\n    // colDefs.push({ headerName: \"Observation\", field: \"observation\", cellRenderer: \"group\", pinned: true, suppressMovable: true });\n    // while (observedDate.format('DD MMM YYYY') !== todayDate.format('DD MMM YYYY')) {\n    //   let colDef = {\n    //     headerName: observedDate.format('DD MMM YYYY'),\n    //     suppressMovable: true,\n    //     children: []\n    //   };\n    //   isMorningShift = true;\n    //   morningDate.subtract(morningDate.seconds(), 'seconds');\n    //   morningDate.subtract(morningDate.minutes(), 'minutes');\n    //   morningDate.subtract(morningDate.hours(), 'hours');\n    //   morningDate.add(8, 'hours');\n    //   if (isAdmittedDay && addmittedDate < morningDate) {\n    //     let previousDay = moment(effectiveDateTime).tz(orgTimeZone);\n    //     previousDay.subtract(1, 'day');\n    //     let colDef = {\n    //       headerName: previousDay.format('DD MMM YYYY'),\n    //       suppressMovable: true,\n    //       children: []\n    //     };\n    //     let previousNightDate = moment(effectiveDateTime).tz(orgTimeZone);\n    //     previousNightDate.subtract(previousNightDate.seconds(), 'seconds');\n    //     previousNightDate.subtract(previousNightDate.minutes(), 'minutes');\n    //     previousNightDate.subtract(previousNightDate.hours(), 'hours');\n\n    //     let previousNightRangeStartDate = moment(effectiveDateTime).tz(orgTimeZone);\n    //     let previousNightRangeEndDate = moment(effectiveDateTime).tz(orgTimeZone);\n    //     previousNightRangeStartDate.subtract(previousNightRangeStartDate.seconds(), 'seconds');\n    //     previousNightRangeStartDate.subtract(previousNightRangeStartDate.minutes(), 'minutes');\n    //     previousNightRangeStartDate.subtract(previousNightRangeStartDate.hours(), 'hours');\n    //     previousNightRangeEndDate.subtract(previousNightRangeEndDate.seconds(), 'seconds');\n    //     previousNightRangeEndDate.subtract(previousNightRangeEndDate.minutes(), 'minutes');\n    //     previousNightRangeEndDate.subtract(previousNightRangeEndDate.hours(), 'hours');\n    //     previousNightDate.add(30, 'minutes');\n    //     previousNightRangeEndDate.add(30, 'minutes');\n    //     while (previousNightDate.format('HH:mm') !== '07:30') {\n    //       if (addmittedDate >= previousNightRangeStartDate && addmittedDate <= previousNightRangeEndDate) {\n    //         break;\n    //       }\n    //       previousNightDate.add(30, 'minutes');\n    //       previousNightRangeStartDate.add(30, 'minutes');\n    //       previousNightRangeEndDate.add(30, 'minutes');\n    //     }\n\n    //     let previousNightColDef = {\n    //       headerName: \"Night\",\n    //       suppressMovable: true,\n    //       children: []\n    //     };\n    //     let previousNightColData = {\n    //       headerName: previousNightDate.format('HH:mm'),\n    //       suppressMovable: true,\n    //       field: previousNightDate.format(),\n    //       editable: this.colEditable, minWidth: globalWidth\n    //     };\n    //     previousNightColDef.children.push(previousNightColData);\n    //     while (previousNightDate.format('HH:mm') !== '07:30') {\n    //       previousNightColData = {\n    //         headerName: previousNightDate.add(30, 'minutes').format('HH:mm'),\n    //         suppressMovable: true,\n    //         field: previousNightDate.format(),\n    //         editable: this.colEditable, minWidth: globalWidth\n    //       };\n    //       previousNightColDef.children.push(previousNightColData);\n    //     }\n    //     colDef.children.push(previousNightColDef);\n    //     colDefs.push(colDef);\n    //   } else if (isAdmittedDay && addmittedDate > morningDate) {\n    //     isMorningShift = false;\n    //     let morningRangeStartDate = moment(effectiveDateTime).tz(orgTimeZone);\n    //     let morningRangeEndDate = moment(effectiveDateTime).tz(orgTimeZone);\n    //     morningRangeStartDate.subtract(morningRangeStartDate.seconds(), 'seconds');\n    //     morningRangeStartDate.subtract(morningRangeStartDate.minutes(), 'minutes');\n    //     morningRangeStartDate.subtract(morningRangeStartDate.hours(), 'hours');\n    //     morningRangeEndDate.subtract(morningRangeEndDate.seconds(), 'seconds');\n    //     morningRangeEndDate.subtract(morningRangeEndDate.minutes(), 'minutes');\n    //     morningRangeEndDate.subtract(morningRangeEndDate.hours(), 'hours');\n    //     morningRangeStartDate.add(8, 'hours');\n    //     morningRangeEndDate.add(8, 'hours');\n    //     morningRangeEndDate.add(30, 'minutes');\n    //     morningDate.add(30, 'minutes');\n    //     while (morningDate.format('HH:mm') !== '13:30') {\n    //       if (addmittedDate >= morningRangeStartDate && addmittedDate <= morningRangeEndDate) {\n    //         isMorningShift = true;\n    //         break;\n    //       }\n    //       morningDate.add(30, 'minutes');\n    //       morningRangeStartDate.add(30, 'minutes');\n    //       morningRangeEndDate.add(30, 'minutes');\n    //     }\n    //   }\n    //   if (isMorningShift) {\n    //     let morningColDef = {\n    //       headerName: \"Morning\",\n    //       suppressMovable: true,\n    //       children: []\n    //     };\n\n    //     let morningColData = {\n    //       headerName: morningDate.format('HH:mm'),\n    //       suppressMovable: true,\n    //       field: morningDate.format(),\n    //       editable: this.colEditable, minWidth: globalWidth\n    //     };\n    //     morningColDef.children.push(morningColData);\n\n    //     while (morningDate.format('HH:mm') !== '13:30') {\n    //       morningColData = {\n    //         headerName: morningDate.add(30, 'minutes').format('HH:mm'),\n    //         suppressMovable: true,\n    //         field: morningDate.format(),\n    //         editable: this.colEditable, minWidth: globalWidth\n    //       };\n    //       morningColDef.children.push(morningColData);\n    //     }\n    //     colDef.children.push(morningColDef);\n    //   }\n\n    //   isEveningShift = true;\n    //   eveningDate.subtract(eveningDate.seconds(), 'seconds');\n    //   eveningDate.subtract(eveningDate.minutes(), 'minutes');\n    //   eveningDate.subtract(eveningDate.hours(), 'hours');\n    //   eveningDate.add(14, 'hours');\n    //   if (isAdmittedDay && addmittedDate > eveningDate) {\n    //     isEveningShift = false;\n    //     let eveningRangeStartDate = moment(effectiveDateTime).tz(orgTimeZone);\n    //     let eveningRangeEndDate = moment(effectiveDateTime).tz(orgTimeZone);\n    //     eveningRangeStartDate.subtract(eveningRangeStartDate.seconds(), 'seconds');\n    //     eveningRangeStartDate.subtract(eveningRangeStartDate.minutes(), 'minutes');\n    //     eveningRangeStartDate.subtract(eveningRangeStartDate.hours(), 'hours');\n    //     eveningRangeEndDate.subtract(eveningRangeEndDate.seconds(), 'seconds');\n    //     eveningRangeEndDate.subtract(eveningRangeEndDate.minutes(), 'minutes');\n    //     eveningRangeEndDate.subtract(eveningRangeEndDate.hours(), 'hours');\n    //     eveningRangeStartDate.add(14, 'hours');\n    //     eveningRangeEndDate.add(14, 'hours');\n    //     eveningRangeEndDate.add(30, 'minutes');\n    //     eveningDate.add(30, 'minutes');\n    //     while (eveningDate.format('HH:mm') !== '19:30') {\n    //       if (addmittedDate >= eveningRangeStartDate && addmittedDate <= eveningRangeEndDate) {\n    //         isEveningShift = true;\n    //         break;\n    //       }\n    //       eveningDate.add(30, 'minutes');\n    //       eveningRangeStartDate.add(30, 'minutes');\n    //       eveningRangeEndDate.add(30, 'minutes');\n    //     }\n    //   }\n    //   if (isEveningShift) {\n    //     let eveningColDef = {\n    //       headerName: \"Evening\",\n    //       suppressMovable: true,\n    //       children: []\n    //     };\n    //     let eveningColData = {\n    //       headerName: eveningDate.format('HH:mm'),\n    //       suppressMovable: true,\n    //       field: eveningDate.format(),\n    //       editable: this.colEditable, minWidth: globalWidth\n    //     };\n    //     eveningColDef.children.push(eveningColData);\n\n    //     while (eveningDate.format('HH:mm') !== '19:30') {\n    //       eveningColData = {\n    //         headerName: eveningDate.add(30, 'minutes').format('HH:mm'),\n    //         suppressMovable: true,\n    //         field: eveningDate.format(),\n    //         editable: this.colEditable, minWidth: globalWidth\n    //       };\n    //       eveningColDef.children.push(eveningColData);\n    //     }\n    //     colDef.children.push(eveningColDef);\n    //   }\n\n    //   isNightShift = true;\n    //   nightDate.subtract(nightDate.seconds(), 'seconds');\n    //   nightDate.subtract(nightDate.minutes(), 'minutes');\n    //   nightDate.subtract(nightDate.hours(), 'hours');\n    //   nightDate.add(20, 'hours');\n    //   if (isAdmittedDay && addmittedDate > nightDate) {\n    //     isNightShift = false;\n    //     let nightRangeStartDate = moment(effectiveDateTime).tz(orgTimeZone);\n    //     let nightRangeEndDate = moment(effectiveDateTime).tz(orgTimeZone);\n    //     nightRangeStartDate.subtract(nightRangeStartDate.seconds(), 'seconds');\n    //     nightRangeStartDate.subtract(nightRangeStartDate.minutes(), 'minutes');\n    //     nightRangeStartDate.subtract(nightRangeStartDate.hours(), 'hours');\n    //     nightRangeEndDate.subtract(nightRangeEndDate.seconds(), 'seconds');\n    //     nightRangeEndDate.subtract(nightRangeEndDate.minutes(), 'minutes');\n    //     nightRangeEndDate.subtract(nightRangeEndDate.hours(), 'hours');\n    //     nightRangeStartDate.add(20, 'hours');\n    //     nightRangeEndDate.add(20, 'hours');\n    //     nightRangeEndDate.add(30, 'minutes');\n    //     nightDate.add(30, 'minutes');\n    //     while (nightDate.format('HH:mm') !== '07:30') {\n    //       if (addmittedDate >= nightRangeStartDate && addmittedDate <= nightRangeEndDate) {\n    //         isNightShift = true;\n    //         break;\n    //       }\n    //       nightDate.add(30, 'minutes');\n    //       nightRangeStartDate.add(30, 'minutes');\n    //       nightRangeEndDate.add(30, 'minutes');\n    //     }\n    //   }\n    //   if (isNightShift) {\n    //     let nightColDef = {\n    //       headerName: \"Night\",\n    //       suppressMovable: true,\n    //       children: []\n    //     };\n    //     let nightColData = {\n    //       headerName: nightDate.format('HH:mm'),\n    //       suppressMovable: true,\n    //       field: nightDate.format(),\n    //       editable: this.colEditable, minWidth: globalWidth\n    //     };\n    //     nightColDef.children.push(nightColData);\n    //     while (nightDate.format('HH:mm') !== '07:30') {\n    //       nightColData = {\n    //         headerName: nightDate.add(30, 'minutes').format('HH:mm'),\n    //         suppressMovable: true,\n    //         field: nightDate.format(),\n    //         editable: this.colEditable, minWidth: globalWidth\n    //       };\n    //       nightColDef.children.push(nightColData);\n    //     }\n    //     colDef.children.push(nightColDef);\n    //   }\n\n    //   colDefs.push(colDef);\n    //   observedDate.add(1, 'day');\n    //   morningDate.add(1, 'day');\n    //   eveningDate.add(1, 'day');\n    //   isAdmittedDay = false;\n    // }\n\n    // this.coldefs = colDefs;\n    // return this.coldefs;\n  }\n\n  private createRowData() {\n    return this.flowSheetData;\n  }\n\n  // ngAfterViewInit() {\n  //   this.gridOptions.api.sizeColumnsToFit();\n  //   this.autoSizeAll();\n  // }\n\n  private autoSizeAll() {\n    // let allColumnIds = [];\n    // this.coldefs.forEach(function (columnDef) {\n    //   allColumnIds.push(columnDef.field);\n    // });\n    // this.gridOptions.columnApi.autoSizeColumns(allColumnIds);\n  }\n\n  private saveChangedObservations() {\n    // let changedObservations = this.fhirServices.getChangedObservations();\n    // if (changedObservations.length > 0) {\n    //   this.fhirServices.updateFlowsheetData(this.patientFhirData.id, this.patientFhirData.admittedDate, changedObservations).subscribe(\n    //     data => {\n    //       changedObservations = [];\n    //       this.fhirServices.setChangedObservations(changedObservations);\n    //       this.modelMessage.successMessage(data.message);\n    //     },\n    //     error => {\n    //       this.modelMessage.errorMessage(error.json());\n    //     }\n    //   );\n    // }\n  }\n\n  // private onCellEditingStopped($event) {\n  //      //console.log(\"$event:\"+JSON.stringify($event));\n  //      console.log(Object.keys($event));\n  //      console.log(\"$event.oldValue:\"+$event.oldValue);\n  //      console.log(\"$event.newValue:\"+$event.newValue);\n  // }\n\n  // private onCellEditingStarted($event) {\n  //      //console.log(\"$event:\"+JSON.stringify($event));\n  //      console.log(Object.keys($event));\n  //      console.log(\"$event.oldValue:\"+$event.oldValue);\n  //      console.log(\"$event.newValue:\"+$event.newValue);\n  // }\n\n\n  private onCellValueChanged($event) {\n    // let changedObservations = this.fhirServices.getChangedObservations();\n    // if ((!$event.oldValue && $event.newValue !== \"\") || ($event.newValue !== \"\" && $event.oldValue !== $event.newValue && changedObservations.length == 0)) {\n    //   let observation: any = {};\n    //   observation.effectiveDataTime = $event.colDef.field;\n    //   observation.value = $event.newValue;\n    //   observation.category = $event.data.category;\n    //   if ($event.data[$event.colDef.field + \"-id\"]) {\n    //     observation.id = $event.data[$event.colDef.field + \"-id\"];\n    //   }\n    //   changedObservations.push(observation);\n\n    // } else if ($event.newValue !== \"\" && $event.oldValue !== $event.newValue) {\n    //   let observationCategoryId = $event.data.category.subCategory.id;\n    //   let observationIndex = changedObservations.findIndex(observation => observation.effectiveDataTime == $event.colDef.field && observation.category.subCategory.id == observationCategoryId);\n    //   if (observationIndex !== -1 && changedObservations[observationIndex].value !== $event.newValue) {\n    //     changedObservations[observationIndex].value = $event.newValue;\n    //   } else {\n    //     let observation: any = {};\n    //     observation.effectiveDataTime = $event.colDef.field;\n    //     observation.value = $event.newValue;\n    //     observation.category = $event.data.category;\n    //     if ($event.data[$event.colDef.field + \"-id\"]) {\n    //       observation.id = $event.data[$event.colDef.field + \"-id\"];\n    //     }\n    //     changedObservations.push(observation);\n    //   }\n    // }\n    // console.log('changedObservations:' + JSON.stringify(changedObservations));\n    // this.fhirServices.setChangedObservations(changedObservations);\n  }\n\n  public getNodeChildDetails(rowItem) {\n    // if (rowItem.maincategory) {\n    //   return {\n    //     group: true,\n    //     // open C be default\n    //     expanded: rowItem.open,\n    //     // provide ag-Grid with the children of this group\n    //     children: rowItem.subcategory,\n    //     // this is not used, however it is available to the cellRenderers,\n    //     // if you provide a custom cellRenderer, you might use it. it's more\n    //     // relavent if you are doing multi levels of groupings, not just one\n    //     // as in this example.\n    //     field: 'observation',\n    //     // the key is used by the default group cellRenderer\n    //     key: rowItem.observation\n    //   };\n    // } else {\n    //   return null;\n    // }\n  }\n\n\n  ngOnInit() {\n    // let userRole = this.roleServices.getRole('patient-detail');\n    // if (userRole.write) {\n    //   this.roleWrite = true;\n    // }\n\n    // if (this.roleWrite) {\n    //   this.colEditable = true;\n    //   this.isHospitalUser = true;\n    // }\n    // this.gridOptions = <GridOptions>{};\n    // this.gridOptions.columnDefs = this.createColumnDefs(this.patientFhirData.admittedDate);\n    // this.gridOptions.rowData = this.createRowData();\n    // this.fhirServices.getFlowSheetData(this.patientFhirData.id,admittedDate.format('YYYY-MM-DD')).subscribe(\n    //     data => {\n    //        console.log(\"flowsheet row data:\"+JSON.stringify(data));\n    //        //this.gridOptions.rowData = this.createRowData();\n    //     },\n    //     error => {\n    //       console.log(\"error\"+JSON.stringify(error.json()));\n    //       this.modelMessage.errorMessage(error.json());\n    //       this.navigateEvent.emit(\"summary\");\n    //     }\n    // );\n    // this.gridOptions = <GridOptions>{};\n    // this.gridOptions.columnDefs = this.createColumnDefs(admittedDate);\n    // this.gridOptions.rowData = this.createRowData();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_flow_sheet/patient.flow.sheet.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.fluid.chart.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_chart/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_chart/patient.fluid.chart.component.css\n// module id = ../../../../../src/app/patient_fluid_chart/patient.fluid.chart.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"box box-info labs-box\\\">\\n    <div class=\\\"box-header with-border\\\">\\n      <h3 class=\\\"box-title\\\">Fluid Chart</h3>\\n    </div>\\n    <div class=\\\"box-body\\\" id=\\\"fluid-chart-container\\\">\\n      <chart type=\\\"StockChart\\\" height=\\\"2500\\\" [options]=\\\"optionsFluidColumn\\\" (load)=\\\"saveFluidsChartInstance($event.context)\\\"></chart>\\n      <!-- <hr>\\n      <chart type=\\\"StockChart\\\" height=\\\"2500\\\" [options]=\\\"optionsFluid\\\"></chart> -->\\n      <hr>\\n      <chart type=\\\"StockChart\\\" height=\\\"2500\\\" [options]=\\\"options\\\" (load)=\\\"saveVitalsChartInstance($event.context)\\\"></chart>\\n    </div>\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_chart/patient.fluid.chart.component.html\n// module id = ../../../../../src/app/patient_fluid_chart/patient.fluid.chart.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment-timezone';\nimport { CommonServices } from \"../services/common.services\";\n\n@Component({\n  moduleId: module.id,\n  selector: 'patient-fluid-chart',\n  templateUrl: 'patient.fluid.chart.component.html',\n  styleUrls: ['patient.fluid.chart.component.css'],\n})\n\nexport class FluidChartComponent implements OnInit {\n\n  options: Object;\n  optionsFluid: object;\n  optionsFluidColumn: object;\n  orgTimeZone:any;\n  fluidsChart : any;\n  vitalsChart : any;\n\n  @Input() patientData: any;\n\n  constructor(private router: Router, private commonServices: CommonServices) { \n    this.orgTimeZone = this.commonServices.getAppTimeZone();\n  }\n\n  // randamData(min, max) {\n  //   const array = [];\n  //   for (let i = 14832288000000; i <= 15037056000000; i += 3000000) {\n  //     array.push([i, Math.floor(Math.random() * (max - min) + min), Math.floor(Math.random() * (max - min) + min)]);\n  //   }\n  //   return array;\n  // }\n\n  // randamColumnData(min, max) {\n  //   const array = [];\n  //   for (let i = 14832288000000; i <= 15037056000000; i += 3000000) {\n  //     array.push([i, Math.floor(Math.random() * (max - min) + min), Math.floor(Math.random() * (max - min) + min)]);\n  //   }\n  //   return array;\n  // }\n\n  randomFluidsData(min, max) {\n    let admittedDate = moment(this.patientData.admittedDate).tz(this.orgTimeZone);\n    admittedDate.subtract(admittedDate.seconds(), 'seconds');\n    admittedDate.add(60 - admittedDate.minutes(), 'minutes');\n    let todayDate = moment().tz(this.orgTimeZone);\n    \n    const array = [];\n    for (let i = admittedDate.valueOf(); i <= todayDate.valueOf(); i += 1800000) {\n      array.push([i, Math.floor(Math.random() * (max - min) + min)]);\n    }\n    return array;\n  }\n\n  randomVitalsData(min, max) {\n    let admittedDate = moment(this.patientData.admittedDate).tz(this.orgTimeZone);\n    admittedDate.subtract(admittedDate.seconds(), 'seconds');\n    admittedDate.add(60 - admittedDate.minutes(), 'minutes');\n    let todayDate = moment().tz(this.orgTimeZone);\n    \n    const array = [];\n    for (let i = admittedDate.valueOf(); i <= todayDate.valueOf(); i += 1800000) {\n      array.push([i, Math.floor(Math.random() * (max - min) + min)]);\n    }\n    return array;\n  }\n\n  randamVitalsColumnData(min, max) {\n    let admittedDate = moment(this.patientData.admittedDate).tz(this.orgTimeZone);\n    admittedDate.subtract(admittedDate.seconds(), 'seconds');\n    admittedDate.add(60 - admittedDate.minutes(), 'minutes');\n    let todayDate = moment().tz(this.orgTimeZone);\n    const array = [];\n    for (let i = admittedDate.valueOf(); i <= todayDate.valueOf(); i += 1800000) {\n      array.push([i, Math.floor(Math.random() * (max - min) + min), Math.floor(Math.random() * (max - min) + min)]);\n    }\n    return array;\n  }\n\n  saveFluidsChartInstance(chartInstance) {\n    this.fluidsChart = chartInstance;\n  }\n\n  saveVitalsChartInstance(chartInstance) {\n    this.vitalsChart = chartInstance;\n  }\n\n  ngOnInit() {\n\n    // setInterval(() => {\n    //   let todayDate = moment().tz(this.orgTimeZone);\n    //   this.fluidsChart.series[0].addPoint([todayDate.valueOf(), Math.floor(Math.random() * (100 - 40) + 40)]);\n    //   this.fluidsChart.series[1].addPoint([todayDate.valueOf(), Math.floor(Math.random() * (110 - (-80)) + (-80))]);\n    //   this.fluidsChart.series[2].addPoint([todayDate.valueOf(), Math.floor(Math.random() * (60 - (-80)) + (-80))]);\n    // }, 1000);\n    // setInterval(() => {\n    //   let todayDate = moment().tz(this.orgTimeZone);\n    //   this.vitalsChart.series[0].addPoint([todayDate.valueOf(), Math.floor(Math.random() * (80 - 60) + 60)]);\n    //   this.vitalsChart.series[1].addPoint([todayDate.valueOf(), Math.floor(Math.random() * (32 - 25) + 25)]);\n    //   this.vitalsChart.series[2].addPoint([todayDate.valueOf(), Math.floor(Math.random() * (99 - 70) + 70)]);\n    //   this.vitalsChart.series[3].addPoint([todayDate.valueOf(), Math.floor(Math.random() * (18 - 12) + 12)]);\n    //   this.vitalsChart.series[4].addPoint([todayDate.valueOf(), Math.floor(Math.random() * (120 - 80) + 80),Math.floor(Math.random() * (120 - 80) + 80)]);\n    //   this.vitalsChart.series[5].addPoint([todayDate.valueOf(), Math.floor(Math.random() * (105 - 95) + 95)]);\n    // }, 1000);\n    this.optionsFluidColumn = {\n      chart: {\n        width: document.getElementById('fluid-chart-container').offsetWidth - 30\n      },\n      credits: {\n        enabled: false\n      },\n      tooltip: {\n        valueSuffix: 'ml'\n      },\n      navigator: {\n        enabled: false\n      },\n      legend: {\n        enabled: true,\n        align: 'right',\n        verticalAlign: 'top',\n        layout: 'vertical',\n        x: 0,\n        y: 100\n      },\n      rangeSelector: {\n        inputEnabled: false,\n        selected: 0,\n        buttons: [{\n          type: 'day',\n          count: 1,\n          text: '1d'\n        }, {\n          type: 'week',\n          count: 1,\n          text: '1w'\n        }, {\n          type: 'month',\n          count: 1,\n          text: '1m'\n        }, {\n          type: 'year',\n          count: 1,\n          text: '1y'\n        }, {\n          type: 'all',\n          text: 'All'\n        }]\n      },\n      series: [\n        {\n          type: 'column',\n          name: 'Input',\n          data: this.randomFluidsData(40, 100)\n        },\n        {\n          type: 'column',\n          name: 'Output',\n          data: this.randomFluidsData(-80, 110)\n        },\n        {\n          type: 'column',\n          name: 'Balance',\n          data: this.randomFluidsData(-80, 60)\n        }\n      ]\n    };\n\n    this.options = {\n      chart: {\n        width: document.getElementById('fluid-chart-container').offsetWidth - 30\n      },\n      credits: {\n        enabled: false\n      },\n      // tooltip: {\n      //   valueSuffix: '°C'\n      // },\n      navigator: {\n        enabled: false\n      },\n      legend: {\n        enabled: true,\n        align: 'right',\n        verticalAlign: 'top',\n        layout: 'vertical',\n        x: 0,\n        y: 100\n      },\n      rangeSelector: {\n        inputEnabled: false,\n        selected: 0,\n        buttons: [{\n          type: 'day',\n          count: 1,\n          text: '1d'\n        }, {\n          type: 'week',\n          count: 1,\n          text: '1w'\n        }, {\n          type: 'month',\n          count: 1,\n          text: '1m'\n        }, {\n          type: 'year',\n          count: 1,\n          text: '1y'\n        }, {\n          type: 'all',\n          text: 'All'\n        }]\n      },\n      series: [\n        {\n          type: 'spline',\n          name: 'HR(bpm)',\n          data: this.randomVitalsData(60, 80)\n        },\n        {\n          type: 'spline',\n          name: 'Temperature(degC)',\n          data: this.randomVitalsData(25, 32)\n        },\n        {\n          type: 'spline',\n          name: 'SpO2 (%)',\n          data: this.randomVitalsData(70, 99)\n        },\n        {\n          type: 'spline',\n          name: 'Respiration Rate (bpm)',\n          data: this.randomVitalsData(12, 18)\n        },\n        {\n          type: 'columnrange',\n          name: 'Blood Pressure',\n          data: this.randamVitalsColumnData(80, 120)\n        },\n        {\n          type: 'spline',\n          name: 'Mean',\n          data: this.randomVitalsData(95, 105)\n        }\n      ]\n    };\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_chart/patient.fluid.chart.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.fluid.summary.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_summary/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".fluid-summary-box {\\n    height: 316px;\\n}\\n\\n.fluid-summary-box .box-body {\\n    overflow-y: auto;\\n}\\n\\n.fluid-summary-box table {\\n    margin-bottom: 0;\\n    font-size: 14px;\\n    min-width: 350px;\\n}\\n\\n.fluid-summary-box table thead {\\n    background: #eee;\\n}\\n\\n#container {\\n    height: 250px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_summary/patient.fluid.summary.component.css\n// module id = ../../../../../src/app/patient_fluid_summary/patient.fluid.summary.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"box box-info fluid-summary-box\\\">\\n    <div class=\\\"box-header with-border\\\">\\n        <h3 class=\\\"box-title\\\">Fluid Summary (mls)</h3>\\n    </div>\\n    <div class=\\\"box-body\\\">\\n        <table class=\\\"table table-bordered table-hover\\\">\\n            <thead>\\n    \\n                <tr>\\n                    <th></th>\\n                    <th>Intake</th>\\n                    <th>Output</th>\\n                    <!--<td *ngFor=\\\"let fluidSummary of fluidSummaryData\\\"> <b>{{fluidSummary.name}} </b></td>-->\\n                    <th>balance</th>\\n                </tr>\\n\\n            </thead>\\n            <tr>\\n                <td><strong>Last 24 hrs</strong></td>\\n                <td *ngIf=\\\"emptyFluid\\\"> 0 </td>\\n                <td *ngIf=\\\"emptyFluid\\\"> 0 </td>\\n                <td *ngFor=\\\"let fluidSummary of fluidSummaryData\\\"> {{fluidSummary.last24Hr}} </td>\\n                <td> {{balance_last24Hr}} </td>\\n            </tr>\\n\\n            <tr>\\n                <td><strong>Cumulative till date</strong></td>\\n                <td *ngIf=\\\"emptyFluid\\\"> 0 </td>\\n                <td *ngIf=\\\"emptyFluid\\\"> 0 </td>\\n                <td *ngFor=\\\"let fluidSummary of fluidSummaryData\\\"> {{fluidSummary.CumulativeTillDate}} </td>\\n                <td> {{balance_CumulativeTillDate}} </td>\\n            </tr>\\n    \\n            <tr>\\n                <td><b>Total</b></td>\\n                <td *ngIf=\\\"emptyFluid\\\"> 0 </td>\\n                <td *ngIf=\\\"emptyFluid\\\"> 0 </td>\\n                <td *ngFor=\\\"let fluidSummary of fluidSummaryData\\\"> {{fluidSummary.Total}} </td>\\n                <td> {{balance_total}} </td>\\n            </tr>\\n        </table>\\n    </div>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_summary/patient.fluid.summary.component.html\n// module id = ../../../../../src/app/patient_fluid_summary/patient.fluid.summary.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  moduleId: module.id,\n  selector: 'patient-fluid-summary',\n  templateUrl: 'patient.fluid.summary.component.html',\n  styleUrls: ['patient.fluid.summary.component.css'],\n})\n\nexport class PatientFluidSummaryComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluid_summary/patient.fluid.summary.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.fluids.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluids/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".labs-box .box-header .btn {\\n    float: right;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluids/patient.fluids.component.css\n// module id = ../../../../../src/app/patient_fluids/patient.fluids.component.css\n// module chunks = 0","module.exports = \"<button (click) = \\\"pageHandler('pageDown')\\\"> <<< </button> Date {{observedDate}} <button (click) = \\\"pageHandler('pageUp')\\\"> >>> </button>\\n            <br>\\n            <div *ngIf=\\\"startGrid\\\">\\n            <ag-grid-angular style=\\\"width: 100%; height: 700px;\\\"\\n                             class=\\\"ag-fresh\\\"\\n                             [rowData]=\\\"rowData\\\"\\n                             [columnDefs]=\\\"columnDefs\\\"\\n                             [gridOptions]=\\\"gridOptions\\\"\\n                             (gridReady)=\\\"onGridReady($event)\\\"\\n                             [getNodeChildDetails]=\\\"getNodeChildDetails\\\"\\n                            \\n                             enableSorting \\n                             enableColResize \\n                             suppressMenuFilterPanel \\n                             singleClickEdit \\n                             (cellValueChanged)=\\\"onCellValueChanged($event)\\\"\\n                             >\\n            </ag-grid-angular>\\n            </div>\\n\\n            <button type=\\\"submit\\\" (click)=\\\"saveChangedObservations()\\\">Save</button>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluids/patient.fluids.component.html\n// module id = ../../../../../src/app/patient_fluids/patient.fluids.component.html\n// module chunks = 0","import { Component, AfterViewInit, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment-timezone';\nimport { GridOptions } from \"ag-grid/main\";\nimport { CommonServices } from \"../services/common.services\";\nimport { FlowsheetServices } from \"../services/fhir/flowsheet.services\";\n\nconst observationWidth: number = 150;\nconst timestampWidth: number = 100;\n\n@Component({\n    moduleId: module.id,\n    selector: 'patient-fluids',\n    templateUrl: 'patient.fluids.component.html',\n    styleUrls: ['patient.fluids.component.css'],\n})\n\nexport class FluidsComponent implements OnInit {\n\n    @Input() patientData: any;\n\n    columnDefs: any[];\n    rowData: any;\n    observationDataIndex: any = 0;\n    observedDate: any;\n    private colEditable: boolean = true;\n    changedObservations: any = [];\n    sortedFlowsheetData: any\n    inputTotal: any;\n    outputTotal: any;\n    IOBalance: any;\n    initGridData: boolean = true;\n    orgTimeZone:any;\n\n    public gridOptions: GridOptions;\n    private coldefs: any;\n    private flowsheetData: any;\n\n    startGrid: boolean = false;\n\n    constructor(private router: Router, private commonServices: CommonServices, private flowsheetServices: FlowsheetServices) { \n        this.orgTimeZone = this.commonServices.getAppTimeZone();\n    }\n\n    pageHandler(pageActition) {\n        let length = this.flowsheetData.length;\n\n        if (pageActition == \"pageDown\" && this.observationDataIndex < length - 1) {\n            let processedObservedData = [];\n            this.observationDataIndex++;\n            let observedDataIntake = this.sortedFlowsheetData[this.observationDataIndex].observationData[0].subcategory.find((subcategoryData) => {\n                return subcategoryData.observation === \"Intake\"\n            });\n            let observedDataOutput = this.sortedFlowsheetData[this.observationDataIndex].observationData[0].subcategory.find((subcategoryData) => {\n                return subcategoryData.observation === \"Output (mL)\"\n            });\n            processedObservedData.push(observedDataIntake);\n            processedObservedData.push(observedDataOutput);\n\n            this.observedDate = this.sortedFlowsheetData[this.observationDataIndex].observedDate;\n            let inputTotal = this.sortedFlowsheetData[this.observationDataIndex].observationData[0].subcategory.find((subcategoryData) => {\n                return subcategoryData.observation === \"Intake Total\"\n            });\n            this.inputTotal = [inputTotal];\n\n            let outputTotal = this.sortedFlowsheetData[this.observationDataIndex].observationData[0].subcategory.find((subcategoryData) => {\n                return subcategoryData.observation === \"Output Total\"\n            });\n            this.outputTotal = [outputTotal];\n\n            let ioBalance = this.sortedFlowsheetData[this.observationDataIndex].observationData[0].subcategory.find((subcategoryData) => {\n                return subcategoryData.observation === \"Balance\"\n            });\n            this.IOBalance = [ioBalance];\n            let coloumnDefs = this.createColumnDefs(this.observedDate);\n            this.gridOptions.api.setColumnDefs(coloumnDefs)\n            this.rowData = processedObservedData;\n            this.initGridData = true;\n            this.processFluidTotal(this.sortedFlowsheetData[this.observationDataIndex].observationData);\n            this.onFloatingBottomCount();\n            this.initGridData = false;\n        } else\n            if (pageActition == \"pageUp\" && this.observationDataIndex > 0) {\n                this.observationDataIndex--;\n                let processedObservedData = [];\n                let observedDataIntake = this.sortedFlowsheetData[this.observationDataIndex].observationData[0].subcategory.find((subcategoryData) => {\n                    return subcategoryData.observation === \"Intake\"\n                });\n                let observedDataOutput = this.sortedFlowsheetData[this.observationDataIndex].observationData[0].subcategory.find((subcategoryData) => {\n                    return subcategoryData.observation === \"Output (mL)\"\n                });\n                processedObservedData.push(observedDataIntake);\n                processedObservedData.push(observedDataOutput);\n\n                this.observedDate = this.sortedFlowsheetData[this.observationDataIndex].observedDate;\n                let inputTotal = this.sortedFlowsheetData[this.observationDataIndex].observationData[0].subcategory.find((subcategoryData) => {\n                    return subcategoryData.observation === \"Intake Total\"\n                });\n                this.inputTotal = [inputTotal];\n\n                let outputTotal = this.sortedFlowsheetData[this.observationDataIndex].observationData[0].subcategory.find((subcategoryData) => {\n                    return subcategoryData.observation === \"Output Total\"\n                });\n                this.outputTotal = [outputTotal];\n\n                let ioBalance = this.sortedFlowsheetData[this.observationDataIndex].observationData[0].subcategory.find((subcategoryData) => {\n                    return subcategoryData.observation === \"Balance\"\n                });\n                this.IOBalance = [ioBalance];\n                let coloumnDefs = this.createColumnDefs(this.observedDate);\n                this.gridOptions.api.setColumnDefs(coloumnDefs)\n                this.rowData = processedObservedData;\n                this.initGridData = true;\n                this.processFluidTotal(this.sortedFlowsheetData[this.observationDataIndex].observationData);\n                this.onFloatingBottomCount();\n                this.initGridData = false;\n            }\n    }\n\n    private createColumnDefs(effectiveDateTime) {\n        let globalWidth = 67;\n        let colDefs = [];\n        let addmittedDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n        let observedDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n        let todayDate = moment().tz(this.orgTimeZone);\n        let morningDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n        let eveningDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n        let nightDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n        let isAdmittedDay = true;\n        let isMorningShift = false;\n        let isEveningShift = false;\n        let isNightShift = false;\n        todayDate.add(1, 'day');\n        colDefs.push({ headerName: \"Observation\", field: \"observation\", cellRenderer: \"group\", pinned: true, suppressMovable: true, minWidth: 200 });\n        isMorningShift = true;\n        morningDate.subtract(morningDate.seconds(), 'seconds');\n        morningDate.subtract(morningDate.minutes(), 'minutes');\n        morningDate.subtract(morningDate.hours(), 'hours');\n        morningDate.add(8, 'hours');\n        if (isAdmittedDay && addmittedDate < morningDate) {\n            let previousNightDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n            previousNightDate.subtract(previousNightDate.seconds(), 'seconds');\n            previousNightDate.subtract(previousNightDate.minutes(), 'minutes');\n            previousNightDate.subtract(previousNightDate.hours(), 'hours');\n\n            let previousNightRangeStartDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n            let previousNightRangeEndDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n            previousNightRangeStartDate.subtract(previousNightRangeStartDate.seconds(), 'seconds');\n            previousNightRangeStartDate.subtract(previousNightRangeStartDate.minutes(), 'minutes');\n            previousNightRangeStartDate.subtract(previousNightRangeStartDate.hours(), 'hours');\n            previousNightRangeEndDate.subtract(previousNightRangeEndDate.seconds(), 'seconds');\n            previousNightRangeEndDate.subtract(previousNightRangeEndDate.minutes(), 'minutes');\n            previousNightRangeEndDate.subtract(previousNightRangeEndDate.hours(), 'hours');\n            previousNightDate.add(30, 'minutes');\n            previousNightRangeEndDate.add(30, 'minutes');\n            while (previousNightDate.format('HH:mm') !== '07:30') {\n                if (addmittedDate >= previousNightRangeStartDate && addmittedDate <= previousNightRangeEndDate) {\n                    break;\n                }\n                previousNightDate.add(30, 'minutes');\n                previousNightRangeStartDate.add(30, 'minutes');\n                previousNightRangeEndDate.add(30, 'minutes');\n            }\n\n            let previousNightColDef = {\n                headerName: \"Night\",\n                suppressMovable: true,\n                children: []\n            };\n            let previousNightColData = {\n                headerName: previousNightDate.format('HH:mm'),\n                newValueHandler: this.checkNewValue,\n                suppressMovable: true,\n                field: previousNightDate.format(),\n                editable: this.colEditable, minWidth: globalWidth\n            };\n            previousNightColDef.children.push(previousNightColData);\n            while (previousNightDate.format('HH:mm') !== '07:30') {\n                previousNightColData = {\n                    headerName: previousNightDate.add(30, 'minutes').format('HH:mm'),\n                    newValueHandler: this.checkNewValue,\n                    suppressMovable: true,\n                    field: previousNightDate.format(),\n                    editable: this.colEditable, minWidth: globalWidth\n                };\n                previousNightColDef.children.push(previousNightColData);\n            }\n            colDefs.push(previousNightColDef);\n        } else if (isAdmittedDay && addmittedDate > morningDate) {\n            isMorningShift = false;\n            let morningRangeStartDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n            let morningRangeEndDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n            morningRangeStartDate.subtract(morningRangeStartDate.seconds(), 'seconds');\n            morningRangeStartDate.subtract(morningRangeStartDate.minutes(), 'minutes');\n            morningRangeStartDate.subtract(morningRangeStartDate.hours(), 'hours');\n            morningRangeEndDate.subtract(morningRangeEndDate.seconds(), 'seconds');\n            morningRangeEndDate.subtract(morningRangeEndDate.minutes(), 'minutes');\n            morningRangeEndDate.subtract(morningRangeEndDate.hours(), 'hours');\n            morningRangeStartDate.add(8, 'hours');\n            morningRangeEndDate.add(8, 'hours');\n            morningRangeEndDate.add(30, 'minutes');\n            morningDate.add(30, 'minutes');\n            while (morningDate.format('HH:mm') !== '13:30') {\n                if (addmittedDate >= morningRangeStartDate && addmittedDate <= morningRangeEndDate) {\n                    isMorningShift = true;\n                    break;\n                }\n                morningDate.add(30, 'minutes');\n                morningRangeStartDate.add(30, 'minutes');\n                morningRangeEndDate.add(30, 'minutes');\n            }\n        }\n        if (isMorningShift) {\n            let morningColDef = {\n                headerName: \"Morning\",\n                suppressMovable: true,\n                children: []\n            };\n\n            let morningColData = {\n                headerName: morningDate.format('HH:mm'),\n                newValueHandler: this.checkNewValue,\n                suppressMovable: true,\n                field: morningDate.format(),\n                editable: this.colEditable, minWidth: globalWidth\n            };\n            morningColDef.children.push(morningColData);\n\n            while (morningDate.format('HH:mm') !== '13:30') {\n                morningColData = {\n                    headerName: morningDate.add(30, 'minutes').format('HH:mm'),\n                    newValueHandler: this.checkNewValue,\n                    suppressMovable: true,\n                    field: morningDate.format(),\n                    editable: this.colEditable, minWidth: globalWidth\n                };\n                morningColDef.children.push(morningColData);\n            }\n            colDefs.push(morningColDef);\n        }\n\n        isEveningShift = true;\n        eveningDate.subtract(eveningDate.seconds(), 'seconds');\n        eveningDate.subtract(eveningDate.minutes(), 'minutes');\n        eveningDate.subtract(eveningDate.hours(), 'hours');\n        eveningDate.add(14, 'hours');\n        if (isAdmittedDay && addmittedDate > eveningDate) {\n            isEveningShift = false;\n            let eveningRangeStartDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n            let eveningRangeEndDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n            eveningRangeStartDate.subtract(eveningRangeStartDate.seconds(), 'seconds');\n            eveningRangeStartDate.subtract(eveningRangeStartDate.minutes(), 'minutes');\n            eveningRangeStartDate.subtract(eveningRangeStartDate.hours(), 'hours');\n            eveningRangeEndDate.subtract(eveningRangeEndDate.seconds(), 'seconds');\n            eveningRangeEndDate.subtract(eveningRangeEndDate.minutes(), 'minutes');\n            eveningRangeEndDate.subtract(eveningRangeEndDate.hours(), 'hours');\n            eveningRangeStartDate.add(14, 'hours');\n            eveningRangeEndDate.add(14, 'hours');\n            eveningRangeEndDate.add(30, 'minutes');\n            eveningDate.add(30, 'minutes');\n            while (eveningDate.format('HH:mm') !== '19:30') {\n                if (addmittedDate >= eveningRangeStartDate && addmittedDate <= eveningRangeEndDate) {\n                    isEveningShift = true;\n                    break;\n                }\n                eveningDate.add(30, 'minutes');\n                eveningRangeStartDate.add(30, 'minutes');\n                eveningRangeEndDate.add(30, 'minutes');\n            }\n        }\n        if (isEveningShift) {\n            let eveningColDef = {\n                headerName: \"Evening\",\n                suppressMovable: true,\n                children: []\n            };\n            let eveningColData = {\n                headerName: eveningDate.format('HH:mm'),\n                newValueHandler: this.checkNewValue,\n                suppressMovable: true,\n                field: eveningDate.format(),\n                editable: this.colEditable, minWidth: globalWidth\n            };\n            eveningColDef.children.push(eveningColData);\n\n            while (eveningDate.format('HH:mm') !== '19:30') {\n                eveningColData = {\n                    headerName: eveningDate.add(30, 'minutes').format('HH:mm'),\n                    newValueHandler: this.checkNewValue,\n                    suppressMovable: true,\n                    field: eveningDate.format(),\n                    editable: this.colEditable, minWidth: globalWidth\n                };\n                eveningColDef.children.push(eveningColData);\n            }\n            colDefs.push(eveningColDef);\n        }\n\n        isNightShift = true;\n        nightDate.subtract(nightDate.seconds(), 'seconds');\n        nightDate.subtract(nightDate.minutes(), 'minutes');\n        nightDate.subtract(nightDate.hours(), 'hours');\n        nightDate.add(20, 'hours');\n        if (isAdmittedDay && addmittedDate > nightDate) {\n            isNightShift = false;\n            let nightRangeStartDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n            let nightRangeEndDate = moment(effectiveDateTime).tz(this.orgTimeZone);\n            nightRangeStartDate.subtract(nightRangeStartDate.seconds(), 'seconds');\n            nightRangeStartDate.subtract(nightRangeStartDate.minutes(), 'minutes');\n            nightRangeStartDate.subtract(nightRangeStartDate.hours(), 'hours');\n            nightRangeEndDate.subtract(nightRangeEndDate.seconds(), 'seconds');\n            nightRangeEndDate.subtract(nightRangeEndDate.minutes(), 'minutes');\n            nightRangeEndDate.subtract(nightRangeEndDate.hours(), 'hours');\n            nightRangeStartDate.add(20, 'hours');\n            nightRangeEndDate.add(20, 'hours');\n            nightRangeEndDate.add(30, 'minutes');\n            nightDate.add(30, 'minutes');\n            while (nightDate.format('HH:mm') !== '07:30') {\n                if (addmittedDate >= nightRangeStartDate && addmittedDate <= nightRangeEndDate) {\n                    isNightShift = true;\n                    break;\n                }\n                nightDate.add(30, 'minutes');\n                nightRangeStartDate.add(30, 'minutes');\n                nightRangeEndDate.add(30, 'minutes');\n            }\n        }\n        if (isNightShift) {\n            let nightColDef = {\n                headerName: \"Night\",\n                suppressMovable: true,\n                children: []\n            };\n            let nightColData = {\n                headerName: nightDate.format('HH:mm'),\n                newValueHandler: this.checkNewValue,\n                suppressMovable: true,\n                field: nightDate.format(),\n                editable: this.colEditable, minWidth: globalWidth\n            };\n            nightColDef.children.push(nightColData);\n            while (nightDate.format('HH:mm') !== '07:30') {\n                nightColData = {\n                    headerName: nightDate.add(30, 'minutes').format('HH:mm'),\n                    newValueHandler: this.checkNewValue,\n                    suppressMovable: true,\n                    field: nightDate.format(),\n                    editable: this.colEditable, minWidth: globalWidth\n                };\n                nightColDef.children.push(nightColData);\n            }\n            colDefs.push(nightColDef);\n        }\n        isAdmittedDay = false;\n\n        colDefs.push(\n            { headerName: \"Morning Total\", pinned: \"right\", field: \"morning_total\", suppressMovable: true, minWidth: 80 },\n            { headerName: \"Evening Total\", pinned: \"right\", field: \"evening_total\", suppressMovable: true, minWidth: 80 },\n            { headerName: \"Night Total\", pinned: \"right\", field: \"night_total\", suppressMovable: true, minWidth: 80 },\n            { headerName: \"Day Total\", pinned: \"right\", field: \"day_total\", suppressMovable: true, minWidth: 80 },\n        )\n\n        this.coldefs = colDefs;\n        return this.coldefs;\n    }\n\n    checkNewValue(params) {\n        let valueAsNumber = params.newValue\n        if (isNaN(valueAsNumber) || params.newValue == \"\") {\n            console.log(\"Invalid value \" + params.newValue + \", must be a number\");\n        } else {\n            params.data[params.colDef.field] = valueAsNumber;\n        }\n    }\n\n    private onCellValueChanged($event) {\n        let changedObservations = this.getChangedObservations();\n        if (((!$event.oldValue && $event.newValue !== \"\") || ($event.newValue !== \"\" && $event.oldValue !== $event.newValue && changedObservations.length == 0)) && ($event.newValue)) {\n            let observation: any = {};\n            observation.effectiveDataTime = $event.colDef.field;\n            observation.value = $event.newValue;\n            observation.category = $event.data.category;\n            if ($event.data[$event.colDef.field + \"-id\"]) {\n                observation.id = $event.data[$event.colDef.field + \"-id\"];\n            }\n            changedObservations.push(observation);\n        } else\n            if ($event.newValue !== \"\" && $event.oldValue !== $event.newValue) {\n                let observationCategoryId = $event.data.category.subCategory.id;\n                let observationIndex = changedObservations.findIndex(observation => observation.effectiveDataTime == $event.colDef.field && observation.category.subCategory.id == observationCategoryId);\n                if (observationIndex !== -1 && changedObservations[observationIndex].value !== $event.newValue) {\n                    changedObservations[observationIndex].value = $event.newValue;\n                } else {\n                    let observation: any = {};\n                    observation.effectiveDataTime = $event.colDef.field;\n                    observation.value = $event.newValue;\n                    observation.category = $event.data.category;\n                    if ($event.data[$event.colDef.field + \"-id\"]) {\n                        observation.id = $event.data[$event.colDef.field + \"-id\"];\n                    }\n                    changedObservations.push(observation);\n                }\n            }\n        this.setChangedObservations(changedObservations);\n\n        if ($event.newValue !== $event.oldValue) {\n            this.manualDataChange($event.data, $event.colDef.field, $event)\n        }\n    }\n\n    setChangedObservations(observations) {\n        if (observations.length == 0) {\n            this.changedObservations = [];\n        } else {\n            this.changedObservations = observations;\n        }\n    }\n\n    getChangedObservations() {\n        return this.changedObservations;\n    }\n\n    manualDataChange(data, field, $event) {\n        let shifts = this.gridOptions.columnDefs;\n        let updatedMorningRow = [];\n        let updatedEveningRow = [];\n        let updatedNightRow = [];\n        let newVlaue;\n        let shiftTiming;\n        if ($event.oldValue) {\n            newVlaue = $event.newValue - $event.oldValue\n        } else {\n            newVlaue = $event.newValue\n        }\n\n        let morningShifts = shifts.filter(shift => shift.headerName === \"Morning\");\n        for (let shift in morningShifts) {\n            for (let i in morningShifts[shift][\"children\"]) {\n                let shiftField = morningShifts[shift][\"children\"][i].field;\n                if (shiftField == field) {\n                    shiftTiming = \"Morning\";\n                    data[\"morning_total\"] = parseInt(data.morning_total) + parseInt(newVlaue);\n                    data[\"day_total\"] = data.day_total + parseInt(newVlaue);\n                    updatedMorningRow.push($event.node)\n                    this.gridOptions.api.refreshRows(updatedMorningRow);\n                }\n            }\n        }\n\n        let eveningShifts = shifts.filter(shift => shift.headerName === \"Evening\");\n        for (let shift in eveningShifts) {\n            for (let i in eveningShifts[shift][\"children\"]) {\n                let shiftField = eveningShifts[shift][\"children\"][i].field;\n                if (shiftField == field) {\n                    shiftTiming = \"Evening\";\n                    data[\"evening_total\"] = data.evening_total + parseInt(newVlaue);\n                    data[\"day_total\"] = data.day_total + parseInt(newVlaue);\n                    updatedEveningRow.push($event.node)\n                    this.gridOptions.api.refreshRows(updatedEveningRow);\n                }\n            }\n        }\n\n        let nightShifts = shifts.filter(shift => shift.headerName === \"Night\");\n        for (let shift in nightShifts) {\n            for (let i in nightShifts[shift][\"children\"]) {\n                let shiftField = nightShifts[shift][\"children\"][i].field;\n                if (shiftField == field) {\n                    shiftTiming = \"Night\";\n                    data[\"night_total\"] = data.night_total + parseInt(newVlaue);\n                    data[\"day_total\"] = data.day_total + parseInt(newVlaue);\n                    updatedNightRow.push($event.node)\n                    this.gridOptions.api.refreshRows(updatedNightRow);\n                }\n            }\n        }\n\n        this.manualFloatingRow(newVlaue, $event, shiftTiming)\n    }\n\n    manualFloatingRow(newVlaue, $event, shiftTiming) {\n        let rows = this.createManualFloatingData(newVlaue, $event, shiftTiming);\n        this.gridOptions.api.setFloatingBottomRowData(rows);\n    }\n\n    createManualFloatingData(newVlaue, $event, shiftTiming) {\n        let result = [];\n        let rowKey = this.subCategoryDatahandeler($event.node.parent);\n        let field = $event.colDef.field;\n        result.push(this.inputTotal[0]);\n        result.push(this.outputTotal[0]);\n        result.push(this.IOBalance[0]);\n        if (rowKey == \"Intake\") {\n            //0 => input, 1 => output, 2 => ioBalance\n            if (!isNaN(result[0][field])) {\n                // each vertical column total for input total row\n                result[0][field] = result[0][field] + parseInt(newVlaue);\n            }\n            else {\n                result[0][field] = parseInt(newVlaue);\n            }\n\n            if (!isNaN(result[2][field])) {\n                // each vertical column total for io-balance row\n                result[2][field] = result[2][field] + parseInt(newVlaue);\n            }\n            else {\n                result[2][field] = parseInt(newVlaue);\n            }\n\n            if (shiftTiming == \"Morning\") {\n                result[0][\"morning_total\"] = result[0][\"morning_total\"] + parseInt(newVlaue);\n                result[0][\"day_total\"] = result[0][\"day_total\"] + parseInt(newVlaue);\n                result[2][\"morning_total\"] = result[2][\"morning_total\"] + parseInt(newVlaue);\n                result[2][\"day_total\"] = result[2][\"day_total\"] + parseInt(newVlaue);\n            }\n            else if (shiftTiming == \"Evening\") {\n                result[0][\"evening_total\"] = result[0][\"evening_total\"] + parseInt(newVlaue);\n                result[0][\"day_total\"] = result[0][\"day_total\"] + parseInt(newVlaue);\n                result[2][\"evening_total\"] = result[2][\"evening_total\"] + parseInt(newVlaue);\n                result[2][\"day_total\"] = result[2][\"day_total\"] + parseInt(newVlaue);\n            }\n            else if (shiftTiming == \"Night\") {\n                result[0][\"night_total\"] = result[0][\"night_total\"] + parseInt(newVlaue);\n                result[0][\"day_total\"] = result[0][\"day_total\"] + parseInt(newVlaue);\n                result[2][\"night_total\"] = result[2][\"night_total\"] + parseInt(newVlaue);\n                result[2][\"day_total\"] = result[2][\"day_total\"] + parseInt(newVlaue);\n            }\n        }\n\n\n        else {\n            //Floating output total and io-balance row\n            //0 => input, 1 => output, 2 => ioBalance\n            if (!isNaN(result[1][field])) {\n                // each vertical column total for input total row\n                result[1][field] = result[1][field] + parseInt(newVlaue);\n            }\n            else {\n                result[1][field] = parseInt(newVlaue);\n            }\n\n            if (!isNaN(result[2][field])) {\n                // each vertical column total for input total row\n                result[2][field] = result[2][field] - parseInt(newVlaue);\n            }\n            else {\n                result[2][field] = -parseInt(newVlaue);\n            }\n\n            if (shiftTiming == \"Morning\") {\n                result[1][\"morning_total\"] = result[1][\"morning_total\"] + parseInt(newVlaue);\n                result[1][\"day_total\"] = result[1][\"day_total\"] + parseInt(newVlaue);\n                result[2][\"morning_total\"] = result[2][\"morning_total\"] - parseInt(newVlaue);\n                result[2][\"day_total\"] = result[2][\"day_total\"] - parseInt(newVlaue);\n            }\n            else if (shiftTiming == \"Evening\") {\n                result[1][\"evening_total\"] = result[1][\"evening_total\"] + parseInt(newVlaue);\n                result[1][\"day_total\"] = result[1][\"day_total\"] + parseInt(newVlaue);\n                result[2][\"evening_total\"] = result[2][\"evening_total\"] - parseInt(newVlaue);\n                result[2][\"day_total\"] = result[2][\"day_total\"] - parseInt(newVlaue);\n            }\n            else if (shiftTiming == \"Night\") {\n                result[1][\"night_total\"] = result[1][\"night_total\"] + parseInt(newVlaue);\n                result[1][\"day_total\"] = result[1][\"day_total\"] + parseInt(newVlaue);\n                result[2][\"night_total\"] = result[2][\"night_total\"] - parseInt(newVlaue);\n                result[2][\"day_total\"] = result[2][\"day_total\"] - parseInt(newVlaue);\n            }\n        }\n\n        let changedObservationsIntake = this.getChangedObservations();\n        let intakeValueSet = this.inputTotal[0];\n        let intakeObservationCategoryId = intakeValueSet.category.subCategory.id;\n        let intakeObservationIndex = changedObservationsIntake.findIndex(observation => observation.effectiveDataTime == $event.colDef.field && observation.category.subCategory.id == intakeObservationCategoryId);\n        let intakeTotalValue = result[0][field];\n        if (intakeTotalValue) {\n            this.changedObservationHandler(intakeObservationIndex, intakeValueSet, changedObservationsIntake, intakeTotalValue, $event);\n        }\n\n        let changedObservationsOutput = this.getChangedObservations();\n        let outputObservationCategoryId = this.outputTotal[0].category.subCategory.id;\n        let outputValueSet = this.outputTotal[0];\n        let outputObservationIndex = changedObservationsOutput.findIndex(observation => observation.effectiveDataTime == $event.colDef.field && observation.category.subCategory.id == outputObservationCategoryId);\n        let outputTotalValue = result[1][field];\n        if (outputTotalValue) {\n            this.changedObservationHandler(outputObservationIndex, outputValueSet, changedObservationsOutput, outputTotalValue, $event)\n        }\n\n        let changedObservationsIO = this.getChangedObservations();\n        let ioBalanceCategoryId = this.IOBalance[0].category.subCategory.id;\n        let ioBalanceValueSet = this.IOBalance[0];\n        let ioBalanceObservationIndex = changedObservationsIO.findIndex(observation => observation.effectiveDataTime == $event.colDef.field && observation.category.subCategory.id == ioBalanceCategoryId);\n        let ioBalanceTotal = result[2][field];\n        if (ioBalanceTotal) {\n            this.changedObservationHandler(ioBalanceObservationIndex, ioBalanceValueSet, changedObservationsIO, ioBalanceTotal, $event);\n        }\n\n        //floating row total for right side pinned column\n        return result\n    }\n\n    changedObservationHandler(observationIndex, valueSet, changedObservations, updatedValue, $event) {\n        if (observationIndex !== -1 && changedObservations[observationIndex].value !== updatedValue) {\n            changedObservations[observationIndex].value = updatedValue;\n        } else {\n            let observation: any = {};\n            observation.effectiveDataTime = $event.colDef.field;\n            observation.value = updatedValue;\n            observation.category = valueSet.category;\n            if ($event.data[$event.colDef.field + \"-id\"]) {\n                observation.id = $event.data[$event.colDef.field + \"-id\"];\n            }\n            changedObservations.push(observation);\n        }\n        this.setChangedObservations(changedObservations);\n    }\n\n    subCategoryDatahandeler(subCategoryData) {\n        if (subCategoryData.key == \"Output (mL)\") {\n            return 'output';\n        }\n        else if (subCategoryData.key == \"Intake\") {\n            return 'Intake';\n        }\n        else {\n            return this.subCategoryDatahandeler(subCategoryData.parent);\n        }\n    }\n\n    public getNodeChildDetails(rowItem) {\n        if (rowItem && rowItem.maincategory) {\n            return {\n                group: true,\n                expanded: rowItem.open,\n                children: rowItem.subcategory,\n                field: 'observation',\n                key: rowItem.observation\n            };\n        } else {\n            return null;\n        }\n    }\n\n    processFluidTotal(data) {\n        let fluid = data[0].subcategory\n        for (let index in fluid) {\n            this.handleSubCategoryData(fluid[index].observation, fluid[index].subcategory)\n        }\n    }\n\n    handleSubCategoryData(mainCategoryName, subCategoryData) {\n        for (let index in subCategoryData) {\n            if (subCategoryData[index].maincategory == true) {\n                this.handleSubCategoryData(mainCategoryName, subCategoryData[index].subcategory)\n            }\n            else {\n                let observationData = subCategoryData[index];\n                this.processSubCategoryData(mainCategoryName, observationData)\n            }\n        }\n    }\n\n    processSubCategoryData(mainCategoryName, observationData) {\n        if (mainCategoryName == \"Intake\") {\n            this.calculateFluidData(observationData, this.inputTotal)\n        }\n        if (mainCategoryName == \"Output (mL)\") {\n            this.calculateFluidData(observationData, this.outputTotal)\n        }\n    }\n\n    calculateFluidData(fluidData, fluidTotalData) {\n        let shifts = this.gridOptions.columnDefs;\n        let morningTotalData = 0;\n        let eveningTotalData = 0;\n        let nightTotalData = 0;\n        let dayTotal = 0;\n        let keys = Object.keys(fluidData);\n\n        //vertical total\n        if (!this.initGridData) {\n            for (let i = 1; i < keys.length; i++) {\n                if (fluidTotalData[0][keys[i]]) {\n                    fluidTotalData[0][keys[i]] = parseInt(fluidTotalData[0][keys[i]]) + parseInt(fluidData[keys[i]]);\n                }\n                else {\n                    fluidTotalData[0][keys[i]] = parseInt(fluidData[keys[i]]);\n                }\n            }\n        }\n\n        let morningShift = shifts.filter(shift => shift.headerName === \"Morning\");\n        morningTotalData = this.shiftTotalCalculations(morningShift, fluidData);\n\n        let eveningShift = shifts.filter(shift => shift.headerName === \"Evening\");\n        eveningTotalData = this.shiftTotalCalculations(eveningShift, fluidData);\n\n        let nightShift = shifts.filter(shift => shift.headerName === \"Night\");\n        nightTotalData = this.shiftTotalCalculations(nightShift, fluidData);\n\n        dayTotal = morningTotalData + eveningTotalData + nightTotalData;\n        fluidData[\"morning_total\"] = morningTotalData;\n        fluidData[\"evening_total\"] = eveningTotalData;\n        fluidData[\"night_total\"] = nightTotalData;\n        fluidData[\"day_total\"] = dayTotal;\n    }\n\n    shiftTotalCalculations(shiftTiming, fluidData) {\n        let total = 0;\n        for (let shift in shiftTiming) {\n            for (let i in shiftTiming[shift][\"children\"]) {\n                let shiftField = shiftTiming[shift][\"children\"][i].field;\n                if (fluidData[shiftField] !== NaN && fluidData[shiftField]) {\n                    total = total + parseInt(fluidData[shiftField]);\n                }\n            }\n        }\n        return total;\n    }\n\n    onFloatingBottomCount() {\n        let rows = this.processFloatingRowData();\n        this.gridOptions.api.setFloatingBottomRowData(rows);\n    }\n\n\n    processFloatingRowData() {\n        let shifts = this.gridOptions.columnDefs;\n        let morningTotalData = 0;\n        let eveningTotalData = 0;\n        let nightTotalData = 0;\n\n        let morningOutputTotal = 0;\n        let eveningOutputTotal = 0;\n        let nightOutputTotal = 0;\n\n        let morningIOTotal = 0;\n        let eveningIOTotal = 0;\n        let nightTotalIO = 0;\n\n        let dayTotal = 0;\n        let fixedRowsData = [];\n\n        fixedRowsData.push(this.inputTotal[0]);\n        fixedRowsData.push(this.outputTotal[0]);\n        fixedRowsData.push(this.IOBalance[0]);\n\n        for (let index = 1; index < 4; index++) {\n            if (shifts[index].headerName === \"Morning\") {\n                for (let i in shifts[index][\"children\"]) {\n                    let shiftField = shifts[index][\"children\"][i].field;\n                    if (fixedRowsData[0][shiftField]) {\n                        //right side fixed column total\n                        morningTotalData = morningTotalData + parseInt(fixedRowsData[0][shiftField]);\n                    }\n                    if (fixedRowsData[1][shiftField]) {\n                        morningOutputTotal = morningOutputTotal + parseInt(fixedRowsData[1][shiftField]);\n                    }\n                    if (fixedRowsData[2][shiftField]) {\n                        morningIOTotal = morningIOTotal + parseInt(fixedRowsData[2][shiftField]);\n                    }\n                }\n            }\n\n            if (shifts[index].headerName === \"Evening\") {\n                for (let i in shifts[index][\"children\"]) {\n                    let shiftField = shifts[index][\"children\"][i].field;\n                    if (fixedRowsData[0][shiftField]) {\n                        eveningTotalData = eveningTotalData + parseInt(fixedRowsData[0][shiftField]);\n                    }\n                    if (fixedRowsData[1][shiftField]) {\n                        eveningOutputTotal = eveningOutputTotal + parseInt(fixedRowsData[1][shiftField]);\n                    }\n                    if (fixedRowsData[2][shiftField]) {\n                        eveningIOTotal = eveningIOTotal + parseInt(fixedRowsData[2][shiftField]);\n                    }\n                }\n            }\n\n            if (shifts[index].headerName === \"Night\") {\n                for (let i in shifts[index][\"children\"]) {\n                    let shiftField = shifts[index][\"children\"][i].field;\n                    if (fixedRowsData[0][shiftField]) {\n                        nightTotalData = nightTotalData + parseInt(fixedRowsData[0][shiftField]);\n                    }\n                    if (fixedRowsData[1][shiftField]) {\n                        nightOutputTotal = nightOutputTotal + parseInt(fixedRowsData[1][shiftField]);\n                    }\n                    if (fixedRowsData[2][shiftField]) {\n                        nightTotalIO = nightTotalIO + parseInt(fixedRowsData[2][shiftField]);\n                    }\n                }\n            }\n        }\n\n        // floating row data to plot\n\n        this.inputTotal[0][\"morning_total\"] = morningTotalData;\n        this.inputTotal[0][\"evening_total\"] = eveningTotalData;\n        this.inputTotal[0][\"night_total\"] = nightTotalData;\n\n        this.outputTotal[0][\"morning_total\"] = morningOutputTotal;\n        this.outputTotal[0][\"evening_total\"] = eveningOutputTotal;\n        this.outputTotal[0][\"night_total\"] = nightOutputTotal;\n\n        dayTotal = morningTotalData + eveningTotalData + nightTotalData;\n        this.inputTotal[0][\"day_total\"] = dayTotal;\n\n        let outputDayTotal = morningOutputTotal + eveningOutputTotal + nightOutputTotal;\n        this.outputTotal[0][\"day_total\"] = outputDayTotal;\n\n        this.IOBalance[0][\"morning_total\"] = morningIOTotal;\n        this.IOBalance[0][\"evening_total\"] = eveningIOTotal;\n        this.IOBalance[0][\"night_total\"] = nightTotalIO;\n        let ioDayTotal = morningIOTotal + eveningIOTotal + nightTotalIO;\n        this.IOBalance[0][\"day_total\"] = ioDayTotal;\n        return fixedRowsData;\n    }\n\n    onGridReady(params) {\n        this.processFluidTotal(this.sortedFlowsheetData[0].observationData);\n        this.onFloatingBottomCount();\n        this.initGridData = false;\n        params.api.sizeColumnsToFit();\n    }\n\n    private saveChangedObservations() {\n        let changedObservations = this.getChangedObservations();\n        let effectiveDate = moment(this.observedDate,'DD/MM/YYYY h:mm a').tz(this.orgTimeZone).format();\n        if (changedObservations.length > 0) {\n            this.flowsheetServices.updateFlowsheetData(this.patientData.id, this.patientData.encounterId, \"fluids\", effectiveDate, changedObservations).subscribe(\n                data => {\n                },\n                error => {\n                    console.log(error)\n                }\n            );\n        }\n    }\n\n    ngOnInit() {\n        this.flowsheetServices.getFlowSheetData(this.patientData.id, \"fluids\").subscribe(\n            data => {\n                this.flowsheetData = data;\n                let processedObservedData = [];\n                if (this.flowsheetData.length > 0) {\n                    this.sortedFlowsheetData = this.flowsheetData.sort((first, second) => {\n                        let firstDateTime: any = moment(first.observedDate)\n                        let secondDateTime: any = moment(second.observedDate)\n                        return secondDateTime - firstDateTime;\n                    })\n                } else {\n                    this.sortedFlowsheetData = this.flowsheetData;\n                }\n                let observedDataIntake = this.sortedFlowsheetData[0].observationData[0].subcategory.find((subcategoryData) => {\n                    return subcategoryData.observation === \"Intake\"\n                });\n                let observedDataOutput = this.sortedFlowsheetData[0].observationData[0].subcategory.find((subcategoryData) => {\n                    return subcategoryData.observation === \"Output (mL)\"\n                });\n\n                let inputTotal = this.sortedFlowsheetData[0].observationData[0].subcategory.find((subcategoryData) => {\n                    return subcategoryData.observation === \"Intake Total\"\n                });\n                this.inputTotal = [inputTotal];\n\n                let outputTotal = this.sortedFlowsheetData[0].observationData[0].subcategory.find((subcategoryData) => {\n                    return subcategoryData.observation === \"Output Total\"\n                });\n                this.outputTotal = [outputTotal];\n\n                let ioBalance = this.sortedFlowsheetData[0].observationData[0].subcategory.find((subcategoryData) => {\n                    return subcategoryData.observation === \"Balance\"\n                });\n                this.IOBalance = [ioBalance];\n\n\n                processedObservedData.push(observedDataIntake);\n                processedObservedData.push(observedDataOutput);\n                this.gridOptions = <GridOptions>{};\n                this.gridOptions.rowData = processedObservedData\n                this.observedDate = this.sortedFlowsheetData[0].observedDate;\n                this.gridOptions.columnDefs = this.createColumnDefs(this.observedDate);\n                this.startGrid = true;\n            },\n            error => {\n                console.log(error)\n            }\n        );\n    }\n\n    selectAllRows() {\n        this.gridOptions.api.selectAll();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_fluids/patient.fluids.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.history.component';\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_history/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".clinical-document-box .btn-info.btn-sm {\\n    margin-right: 0;\\n}\\n\\nform {\\n    padding: 0;\\n    margin: 0;\\n}\\n\\n\\n/* add space to denote child element */\\n\\n.textarea {\\n    width: 100%;\\n    min-height: 200px;\\n}\\n\\n.box-comments {\\n    background-color: #fff;\\n}\\n\\n.box-comments {\\n    height: 366px;\\n    overflow-x: auto;\\n}\\n\\n.comment-text-notes {\\n    display: block;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_history/patient.history.component.css\n// module id = ../../../../../src/app/patient_history/patient.history.component.css\n// module chunks = 0","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"createclinicalDocForm\\\" (ngSubmit)=\\\"saveHistoryForm(createclinicalDocForm.value, createclinicalDocForm.valid)\\\" novalidate>\\n                            <div class=\\\"box-body\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-2 control-label\\\">Presenting Complaint</label>\\n                                    <div class=\\\"col-sm-10\\\">\\n                                        <textarea class=\\\"form-control\\\" maxlength=\\\"1000\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Presenting Complaint/s\\\" formControlName=\\\"presentingComplaint\\\" (keyup)=\\\"keyUpCheckHistoryForm()\\\"></textarea>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalDocForm.controls.presentingComplaint.valid\\\">\\n                                                    Enter text.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-2 control-label\\\">History of Presenting Complaint</label>\\n                                    <div class=\\\"col-sm-10\\\">\\n                                        <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter History of Presenting Complaint/s\\\" formControlName=\\\"historyOfPresentingComplaint\\\" (keyup)=\\\"keyUpCheckHistoryForm()\\\"></textarea>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalDocForm.controls.historyOfPresentingComplaint.valid\\\">\\n                                                    Enter text.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-2 control-label\\\">Past Medical History</label>\\n                                    <div class=\\\"col-sm-10\\\">\\n                                        <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Past Hedical History\\\" formControlName=\\\"pastMedicalHistory\\\" (keyup)=\\\"keyUpCheckHistoryForm()\\\"></textarea>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalDocForm.controls.pastMedicalHistory.valid\\\">\\n                                                    Enter text.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-2 control-label\\\">Family History</label>\\n                                    <div class=\\\"col-sm-10\\\">\\n                                        <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Family History\\\" formControlName=\\\"familyHistory\\\" (keyup)=\\\"keyUpCheckHistoryForm()\\\"></textarea>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalDocForm.controls.familyHistory.valid\\\">\\n                                                    Enter text.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-2 control-label\\\">Smoking/Alcohol History</label>\\n                                    <div class=\\\"col-sm-10\\\">\\n                                        <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Smoking/Alcohol History\\\" formControlName=\\\"smokingAlcoholHistory\\\" (keyup)=\\\"keyUpCheckHistoryForm()\\\"></textarea>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalDocForm.controls.smokingAlcoholHistory.valid\\\">\\n                                                    Enter text.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-2 control-label\\\">Occupational History</label>\\n                                    <div class=\\\"col-sm-10\\\">\\n                                        <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Occupational History\\\" formControlName=\\\"occupationalHistory\\\" (keyup)=\\\"keyUpCheckHistoryForm()\\\"></textarea>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalDocForm.controls.occupationalHistory.valid\\\">\\n                                                    Enter text.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-2 control-label\\\">Social History</label>\\n                                    <div class=\\\"col-sm-10\\\">\\n                                        <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Social History\\\" formControlName=\\\"socialHistory\\\" (keyup)=\\\"keyUpCheckHistoryForm()\\\"></textarea>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalDocForm.controls.socialHistory.valid\\\">\\n                                                    Enter text.\\n                                        </small>\\n                                    </div>\\n\\n                                </div>\\n                                <div class=\\\"text-align-right\\\">\\n                                    <button *ngIf=\\\"createclinicalDocForm.invalid && enableSaveButtonHistory\\\" class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\" disabled>Save</button>\\n                                    <button *ngIf=\\\"createclinicalDocForm.valid && enableSaveButtonHistory\\\" class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\">Save</button>\\n                                </div>\\n                            </div>\\n                        </form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_history/patient.history.component.html\n// module id = ../../../../../src/app/patient_history/patient.history.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { HistoryServices } from '../services/fhir/history.services';\nimport { ClinicalDocumentHistoryInterface } from './patient.history.interface';\nimport { ModelMessage } from '../model_message/model.message';\nimport * as moment from 'moment/moment';\n\n@Component({\n    moduleId: module.id,\n    selector: 'patient-history',\n    templateUrl: 'patient.history.component.html',\n    styleUrls: ['patient.history.component.css'],\n})\n\nexport class PatientHistoryComponent implements OnInit {\n\n    public createclinicalDocForm: FormGroup;\n    modeForHistory: string = 'Create';\n    enableSaveButtonHistory: boolean = false;\n    public submitted: boolean;\n    patientId: any;\n    encounterId: any;\n    historyData: any;\n\n    @Input() patientData: any;\n    @Input() practitioner: any;\n\n    constructor(private historyServices: HistoryServices, private router: Router, private fb: FormBuilder, private modelMessage: ModelMessage) { }\n\n    prepareClinicalDocDataHistoryForm(historyData) {\n        this.createclinicalDocForm = new FormGroup({\n            fhirLogicalId: new FormControl(historyData.id),\n            presentingComplaint: new FormControl(historyData.presentingComplaint),\n            historyOfPresentingComplaint: new FormControl(historyData.historyOfPresentingComplaint),\n            pastMedicalHistory: new FormControl(historyData.pastMedicalHistory),\n            familyHistory: new FormControl(historyData.familyHistory),\n            smokingAlcoholHistory: new FormControl(historyData.smokingAlcoholHistory),\n            occupationalHistory: new FormControl(historyData.occupationalHistory),\n            socialHistory: new FormControl(historyData.socialHistory)\n        });\n    }\n\n    createClinicalDocumentHistoryForm() {\n        this.createclinicalDocForm = new FormGroup({\n            presentingComplaint: new FormControl(''),\n            historyOfPresentingComplaint: new FormControl(''),\n            pastMedicalHistory: new FormControl(''),\n            familyHistory: new FormControl(''),\n            smokingAlcoholHistory: new FormControl(''),\n            occupationalHistory: new FormControl(''),\n            socialHistory: new FormControl('')\n        });\n    }\n\n    keyUpCheckHistoryForm() {\n        this.enableSaveButtonHistory = true;\n    }\n\n    getClinicalDocument(patientId, encounterId) {\n        this.historyServices.getClinicalDocumentHistoryForm(patientId, encounterId).subscribe(\n            data => {\n                    this.historyData = data;\n                    if (this.historyData.id) {\n                        this.modeForHistory = 'Edit';\n                        this.prepareClinicalDocDataHistoryForm(this.historyData);\n                    }\n                \n            },\n            error => {\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    saveHistoryForm(model: ClinicalDocumentHistoryInterface, isValid: Boolean) {\n        if ((this.modeForHistory == 'Create') || (this.modeForHistory == 'Edit')) {\n            this.submitted = true;\n            if (isValid) {\n                let effectiveDate = moment().format('YYYY-MM-DDTHH:mm:ss+00:00')\n                let clinicalDataHistoryForm = {\n                    \"historyFormData\": model,\n                    \"patientData\": this.patientData,\n                    \"effectiveDate\": effectiveDate,\n                    \"practitionerData\": this.practitioner\n                }\n                if (this.modeForHistory == 'Create') {\n                    this.historyServices.createClinicaldocumentHistoryForm(clinicalDataHistoryForm).subscribe(\n                        data => {\n                            this.historyData = data;\n                            this.prepareClinicalDocDataHistoryForm(this.historyData);\n                            let msg = \"Created Clinical Documentation History\";\n                            this.modelMessage.successMessage(msg);\n                            this.modeForHistory = 'Edit';\n                        },\n                        error => {\n                            let errorMessage = error;\n                            this.modelMessage.errorMessage(errorMessage);\n                        });\n                }\n                else if (this.modeForHistory == 'Edit') {\n                    this.historyServices.updateClinicaldocumentHistoryForm(clinicalDataHistoryForm).subscribe(\n                        data => {\n                            this.historyData = data;\n                            this.prepareClinicalDocDataHistoryForm(this.historyData);\n                            let msg = \"Updated Clinical Documentation History\";\n                            this.modelMessage.successMessage(msg);\n                        },\n                        error => {\n                            let errorMessege = error;\n                            this.modelMessage.errorMessage(errorMessege);\n                        });\n                }\n            }\n        }\n    }\n\n    ngOnInit() {\n        this.patientId = this.patientData.id;\n        this.encounterId = this.patientData.encounterId;\n        this.createClinicalDocumentHistoryForm();\n        this.getClinicalDocument(this.patientId, this.encounterId);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_history/patient.history.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.lab.chart.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_lab_chart/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_lab_chart/patient.lab.chart.component.css\n// module id = ../../../../../src/app/patient_lab_chart/patient.lab.chart.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"box box-info labs-box\\\">\\n    <div class=\\\"box-header with-border\\\">\\n        <h3 class=\\\"box-title\\\">Lab Chart</h3>\\n    </div>\\n    <div class=\\\"box-body\\\">\\n        <h1>Lab Chart</h1>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_lab_chart/patient.lab.chart.component.html\n// module id = ../../../../../src/app/patient_lab_chart/patient.lab.chart.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    moduleId: module.id,\n    selector: 'patient-lab-chart',\n    templateUrl: 'patient.lab.chart.component.html',\n    styleUrls: ['patient.lab.chart.component.css'],\n})\n\nexport class LabChartComponent implements OnInit {\n\n    constructor(private router: Router) { }\n\n    ngOnInit() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_lab_chart/patient.lab.chart.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.labs.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_labs/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".labs-box .box-header .btn {\\n    float: right;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_labs/patient.labs.component.css\n// module id = ../../../../../src/app/patient_labs/patient.labs.component.css\n// module chunks = 0","module.exports = \"<input type=\\\"time\\\" [(ngModel)]=\\\"newColumnTime\\\">\\n<button class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\" (click)=\\\"onCreateNewColumn()\\\">Create</button>\\n<button class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\">Save</button>\\n\\n<div *ngIf=\\\"startGrid\\\">\\n    <ag-grid-angular style=\\\"width: 100%; height: 700px;\\\"\\n                class=\\\"ag-fresh\\\"\\n                [rowData]=\\\"rowData\\\"\\n                [columnDefs]=\\\"columnDefs\\\"\\n                [gridOptions]=\\\"gridOptions\\\"\\n                (gridReady)=\\\"onGridReady($event)\\\"\\n                [getNodeChildDetails]=\\\"getNodeChildDetails\\\"\\n            \\n                enableSorting \\n                enableColResize \\n                suppressMenuFilterPanel \\n                singleClickEdit \\n                (cellValueChanged)=\\\"onCellValueChanged($event)\\\"\\n                >\\n    </ag-grid-angular>\\n<div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_labs/patient.labs.component.html\n// module id = ../../../../../src/app/patient_labs/patient.labs.component.html\n// module chunks = 0","import { Component, AfterViewInit, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment-timezone';\nimport { GridOptions } from \"ag-grid/main\";\nimport { FlowsheetServices } from \"../services/fhir/flowsheet.services\";\n\nconst observationWidth: number = 150;\nconst timestampWidth: number = 100;\n\n@Component({\n  moduleId: module.id,\n  selector: 'patient-labs',\n  templateUrl: 'patient.labs.component.html',\n  styleUrls: ['patient.labs.component.css'],\n})\n\nexport class LabsComponent implements OnInit \n{\n  @Input() patientData: any;\n\n  columnDefs: any[];\n  rowData: any[];\n  flowsheetData: any;\n  public gridOptions: GridOptions;\n  coldefs: any = [];\n  startGrid: any;\n  newColumnTime: any;\n\n  onCreateColDefs:any = [];\n  globalWidth = 67;\n  \n  constructor(private flowsheetServices: FlowsheetServices) {\n      this.gridOptions = <GridOptions>{};\n      this.gridOptions.columnDefs = this.createColumnDefs();\n  }\n\n  public getNodeChildDetails(rowItem) {\n      if (rowItem.maincategory) {\n          return {\n              group: true,\n              expanded: rowItem.open,\n              children: rowItem.subcategory,\n              field: 'observation',\n              key: rowItem.observation\n          };\n      } else {\n          return null;\n      }\n  }\n\n  private createColumnDefs() {\n    let coldefs =  { headerName: \"Observation\", field: \"observation\", cellRenderer: \"group\", pinned: true, minWidth:230, suppressMovable: true }\n    this.coldefs.push(coldefs)\n    return this.coldefs;\n  }\n\n  private onCellValueChanged($event) { }\n\n  onCreateNewColumn()\n  {\n    let sortedLabsData;\n    let newColDef = {\n      headerName: this.newColumnTime, \n      field: this.newColumnTime, \n      editable: true, \n      minWidth: this.globalWidth,\n      suppressMovable: true\n    }\n    this.onCreateColDefs.push(newColDef);\n    // Sort columns\n    if(this.onCreateColDefs.length > 1)\n    {\n        sortedLabsData = this.onCreateColDefs.sort((first, second)=>{\n        // Date will be as per Pagination\n        let firstTime:any = moment(\"2017-08-24T\"+first.headerName)\n        let secondTime:any = moment(\"2017-08-24T\"+second.headerName)\n        return firstTime - secondTime;\n      })\n    }else{\n      sortedLabsData = this.onCreateColDefs;\n    }\n    this.gridOptions.api.setColumnDefs(sortedLabsData)\n    this.gridOptions.rowData = this.flowsheetData[0].observationData;\n  }\n\n  onGridReady(params) {\n      \n  }\n\n  ngOnInit() {\n    this.flowsheetServices.getFlowSheetData(this.patientData.id, \"labs\").subscribe(\n      data => {\n        this.flowsheetData = data;\n        this.gridOptions.rowData = data[0].observationData;\n        let observationColDefs = {\n          headerName: \"Observation\", field: \"observation\", cellRenderer: \"group\", pinned: true, minWidth:230, suppressMovable: true\n        }\n        this.onCreateColDefs.push(observationColDefs);\n        this.startGrid = true;\n      },\n      error =>\n      {\n        console.log(error)\n      })\n  }\n\n  selectAllRows() {\n      this.gridOptions.api.selectAll();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_labs/patient.labs.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.nursing.care.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_care/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".nursing-care-box .box-body {\\n    overflow-y: auto;\\n}\\n\\n.nursing-care-box .box-header div {\\n    float: right;\\n}\\n\\n.nursing-care-box table {\\n    font-size: 14px;\\n}\\n\\n.nursing-care-box table thead {\\n    background: #eee;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_care/patient.nursing.care.component.css\n// module id = ../../../../../src/app/patient_nursing_care/patient.nursing.care.component.css\n// module chunks = 0","module.exports = \"    <div class=\\\"box-body\\\">\\n        <table class=\\\"table table-bordered table-hover\\\">\\n            <thead>\\n                <tr>\\n                    <th>Care Type</th>\\n                    <th>Size</th>\\n                    <th>Site</th>\\n                    <th>Date of Insertion</th>\\n                    <th>Planned date of removal</th>\\n                    <th>Actual date of Removal</th>\\n                    <th>Days in use</th>\\n                    <th> </th>\\n                </tr>\\n            </thead>\\n            <tr *ngFor=\\\"let nursingCare of list\\\">\\n                <td><strong> {{nursingCare.catheterType}} </strong></td>\\n                <td> {{nursingCare.size}} </td>\\n                <td> {{nursingCare.bodySite}} </td>\\n                <td> {{nursingCare.dateofInsertion}} </td>\\n                <td> {{nursingCare.plannedDateOfRemoval}} </td>\\n                <td *ngIf=\\\"roleWrite\\\"> <input type=\\\"date\\\" (change)=\\\"updateActualDateOfRemoval(nursingCare, $event.target.value)\\\" value={{nursingCare.actualDateOfRemoval}}>                    </td>\\n                <td *ngIf=\\\"!roleWrite\\\"> {{nursingCare.actualDateOfRemoval}} </td>\\n                <td> {{nursingCare.dayInUse}} </td>\\n                <td> </td>\\n            </tr>\\n            <tr *ngIf=\\\"roleWrite\\\">\\n                <td>\\n                    <select (change)=\\\"onChangeDevice($event.target.value)\\\">\\n                        <option>--Select--</option>x\\n                        <option *ngFor=\\\"let device of devicelist\\\" [value]=\\\"device\\\">{{device}}</option>\\n                    </select>\\n                </td>\\n                <td><input type=\\\"text\\\" (change)=\\\"sizeCheck($event.target.value)\\\" [(ngModel)]=\\\"size\\\" name=\\\"\\\" value=size></td>\\n                <td><input type=\\\"text\\\" (change)=\\\"siteCheck($event.target.value)\\\" [(ngModel)]=\\\"site\\\" name=\\\"\\\" value=site></td>\\n                <td><input type=\\\"date\\\" (change)=\\\"dateOfInsertionCheck($event.target.value)\\\" [(ngModel)]=\\\"dateOfInsertion\\\" name=\\\"\\\"\\n                        value=dateOfInsertion></td>\\n                <td><input type=\\\"date\\\" (change)=\\\"plannedDateOfRemovalCheck($event.target.value)\\\" [(ngModel)]=\\\"plannedDateOfRemoval\\\"\\n                        name=\\\"\\\" value=plannedDateOfRemoval></td>\\n                <td><input type=\\\"date\\\" (change)=\\\"actualDateOfRemovalCheck($event.target.value)\\\" [(ngModel)]=\\\"actualDateOfRemoval\\\"\\n                        name=\\\"\\\" value=actualDateOfRemoval></td>\\n                <td></td>\\n                <td>\\n                    <button class=\\\"btn btn-info btn-sm\\\" (click)=\\\"addNursingCare()\\\" type=\\\"submit\\\">Add</button>\\n                </td>\\n            </tr>\\n        </table>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_care/patient.nursing.care.component.html\n// module id = ../../../../../src/app/patient_nursing_care/patient.nursing.care.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { nursingCareInterface } from './nursingcare.interface';\nimport { NursingCareServices } from '../services/fhir/nursingcare.services';\nimport { ModelMessage } from '../model_message/model.message';\nimport { RoleServices } from '../services/presence/role.services';\n\n@Component({\n  moduleId: module.id,\n  selector: 'patient-nursing-care',\n  templateUrl: 'patient.nursing.care.component.html',\n  styleUrls: ['patient.nursing.care.component.css'],\n})\n\nexport class PatientNursingCareComponent implements OnInit {\n\n  devicelist: any;\n  selectedDevice: any;\n  nursingCareData: any;\n  nursingCareCreateData: any;\n  size: any;\n  site: any;\n  dateOfInsertion: any;\n  plannedDateOfRemoval: any;\n  actualDateOfRemoval: any;\n  patientId: any;\n  catheterType: any;\n  list: any;\n  edit: boolean = false;\n  editedActualDateOfRemoval: any;\n  nursingCare: any;\n  roleWrite: boolean = false;\n\n  //form error\n  sizeHasError: boolean = false;\n  siteHasError: boolean = false;\n  dateOfInsertionHasError: boolean = false;\n  plannedDateOfRemovalHasError: boolean = false;\n  actualDateOfRemovalHasError: boolean = false;\n  canAdd: boolean = false;\n\n  @Input() patientData: any;\n  @Input() practitioner: any;\n\n  constructor(private router: Router, private nursingCareServices: NursingCareServices, private modelMessage: ModelMessage, private roleServices: RoleServices) { }\n\n    addNursingCare(nursingData: nursingCareInterface) {\n        let nursingCareCreateData = {\n            'patientId' : this.patientData.id,\n            'practitionerId' : this.practitioner.id,\n            'catheterType' : this.catheterType,\n            'size' : this.size,\n            'bodySite' : this.site,\n            'dateofInsertion' : this.dateOfInsertion,\n            'plannedDateOfRemoval': this.plannedDateOfRemoval,\n            'actualDateOfRemoval': this.actualDateOfRemoval,\n            'encounterId' : this.patientData.encounterId\n        }\n        this.checkError();\n            if(this.canAdd){\n                this.nursingCareServices.createNursingCare(nursingCareCreateData).subscribe(\n                    data => {\n                        this.nursingCare = data;\n                        this.getNursingData(this.patientData.id, this.patientData.encounterId);\n                        this.plannedDateOfRemoval = \"\";\n                        this.size = \"\";\n                        this.site = \"\";\n                        this.dateOfInsertion = \"\";\n                        this.actualDateOfRemoval = \"\";\n                    },\n                    error => {\n                        this.modelMessage.errorMessage(error);\n                    });\n            }else{\n                this.modelMessage.infoMessage(\"Enter all the fields\");\n            }\n        }\n\n    getNursingData(patientId,encounterId){\n        this.nursingCareServices.getNursingCare(patientId,encounterId).subscribe(\n            data => {\n                this.nursingCareData = data;\n                this.prepareNursingData();\n            },\n            error => {\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n    connectLastNursingData(i){\n        this.nursingCareData = this.nursingCareData.concat(i)\n    }\n\n    prepareNursingData() {\n        let data = [];\n        this.nursingCareData.forEach(currentData => {\n            let dateofInsertion: any = new Date(currentData.dateofInsertion); \n            let actualDateOfRemoval: any = new Date(currentData.actualDateOfRemoval);\n            let diff: any = actualDateOfRemoval - dateofInsertion;\n            let dayinUse: any = Math.floor(diff*365 / 31536000000);\n\n            let patientDetails = {\n                id : currentData.id,\n                catheterType : currentData.catheterType,\n                practitionerId: currentData.practitionerId,\n                bodySite: currentData.bodySite,\n                dateofInsertion : currentData.dateofInsertion,\n                plannedDateOfRemoval : currentData.plannedDateOfRemoval,\n                actualDateOfRemoval : currentData.actualDateOfRemoval,\n                size : currentData.size,\n                dayInUse: dayinUse\n            };\n            data.push(patientDetails);\n        });\n        this.list = data;\n    }\n\n    getDevice(){\n        this.nursingCareServices.getNursingDevices().subscribe(\n            data => {\n                this.devicelist = data;\n            },\n            error => {\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n    \n\n    onChangeDevice(deviceName){\n        this.catheterType=deviceName;\n    }\n\n    clickEdit(){\n        this.edit = true;\n    }\n\n    update(editableData){\n        let editdata = {\n            actualDateOfRemoval : this.editedActualDateOfRemoval ,\n            bodySite: editableData.bodySite ,\n            catheterType: editableData.catheterType ,\n            dateofInsertion: editableData.dateofInsertion ,\n            id: editableData.id ,\n            plannedDateOfRemoval: editableData.plannedDateOfRemoval ,\n            practitionerId: editableData.practitionerId ,\n            size: editableData.size ,\n            patientId: this.patientData.id,\n            encounterId: this.patientData.encounterId       \n        };\n\n        this.nursingCareServices.updateNursingCare(editableData.id,editdata).subscribe(\n            data => {\n                let diagnosis = data;\n                this.edit=false;\n            },\n            error => {\n                console.log(error);\n            }\n        );\n    }\n\n    updateActualDateOfRemoval(editableData ,removalDate){\n        this.editedActualDateOfRemoval = removalDate;\n        let editdata = {\n            actualDateOfRemoval : this.editedActualDateOfRemoval ,\n            bodySite: editableData.bodySite ,\n            catheterType: editableData.catheterType ,\n            dateofInsertion: editableData.dateofInsertion ,\n            id: editableData.id ,\n            plannedDateOfRemoval: editableData.plannedDateOfRemoval ,\n            practitionerId: editableData.practitionerId ,\n            size: editableData.size ,\n            patientId: this.patientData.id,\n            encounterId: this.patientData.encounterId\n        };\n\n        this.nursingCareServices.updateNursingCare(editableData.id,editdata).subscribe(\n            data => {\n                this.getNursingData(this.patientData.id, this.patientData.encounterId);\n            },\n            error => {\n                console.log(error);\n            }\n        );\n    }\n\n    sizeCheck(size){\n        if(size){\n             this.sizeHasError=true;\n        }else{\n             this.sizeHasError=false;\n        }\n    }\n\n    siteCheck(site){\n        if(site){\n             this.siteHasError=true;\n        }else{\n             this.siteHasError=false;\n        }\n    }\n\n     dateOfInsertionCheck(dateOfInsertion){\n        if(dateOfInsertion){\n             this.dateOfInsertionHasError = true;\n        }else{\n             this.dateOfInsertionHasError=false;\n        }\n    }\n\n    plannedDateOfRemovalCheck(plannedDateOfRemoval){\n        if(plannedDateOfRemoval){\n             this.plannedDateOfRemovalHasError = true;\n        }else{\n             this.plannedDateOfRemovalHasError=false;\n        }\n    }\n\n    actualDateOfRemovalCheck(actualDateOfRemoval){\n        if(actualDateOfRemoval){\n             this.actualDateOfRemovalHasError = true;\n        }else{\n             this.actualDateOfRemovalHasError=false;\n        }\n    }\n \n    checkError(){\n        if(this.sizeHasError && this.siteHasError && this.dateOfInsertionHasError && this.plannedDateOfRemovalHasError && this.actualDateOfRemovalHasError ){\n             this.canAdd = true;\n        }else{\n             this.canAdd = false;\n        }\n    }\n\n    ngOnInit() { \n        let userRole = this.roleServices.getRole('patient-detail');\n        if (userRole.write) {\n             this.roleWrite = true;\n        }\n        this.getDevice();\n        this.getNursingData(this.patientData.id, this.patientData.encounterId);  \n    }\n}\n\n\n   \n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_care/patient.nursing.care.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.nursing.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_document/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".textarea {\\n    width: 100%;\\n    min-height: 200px;\\n}\\n\\n.box-comments {\\n    background-color: #fff;\\n}\\n\\n.box-comments {\\n    height: 366px;\\n    overflow-x: auto;\\n}\\n\\n.comment-text-notes {\\n    display: block;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_document/patient.nursing.component.css\n// module id = ../../../../../src/app/patient_nursing_document/patient.nursing.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header nursing-document-box\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"nav-tabs-custom box box-info\\\">\\n                <ul class=\\\"nav nav-tabs\\\">\\n                    <li [ngClass]=\\\"{active: currentTab==='vitals'}\\\"><a (click)=\\\"changeCurrentTab('vitals')\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\">Vitals Flowsheet</a></li>\\n                    <li [ngClass]=\\\"{active: currentTab==='fluids'}\\\"><a (click)=\\\"changeCurrentTab('fluids')\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\">Fluids flowsheet</a></li>\\n                    <li [ngClass]=\\\"{active: currentTab==='labs'}\\\"><a (click)=\\\"changeCurrentTab('labs')\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\">Labs flowsheet</a></li>\\n                    <li [ngClass]=\\\"{active: currentTab==='nursing'}\\\"><a (click)=\\\"changeCurrentTab('nursing')\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\">Nursing care</a></li>\\n                    <li [ngClass]=\\\"{active: currentTab==='meds'}\\\"><a (click)=\\\"changeCurrentTab('meds')\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\">Meds</a></li>\\n                    <!-- <li [ngClass]=\\\"{active: currentTab==='checklist'}\\\"><a (click)=\\\"changeCurrentTab('checklist')\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\">Checklist</a></li> -->\\n                    <li [ngClass]=\\\"{active: currentTab==='progress'}\\\"><a (click)=\\\"changeCurrentTab('progress')\\\" data-toggle=\\\"tab\\\" aria-expanded=\\\"false\\\">Progress Notes</a></li>\\n                </ul>\\n                <div class=\\\"tab-content\\\">\\n                    <div *ngIf=\\\"currentTab === 'vitals'\\\">\\n                        <patient-vitals-flowsheet [patientData]=\\\"patientData\\\"></patient-vitals-flowsheet>\\n                    </div>\\n                    <div *ngIf=\\\"currentTab === 'fluids'\\\">\\n                        <patient-fluids [patientData]=\\\"patientData\\\"></patient-fluids>\\n                    </div>\\n                    <div *ngIf=\\\"currentTab === 'labs'\\\">\\n                        <patient-labs [patientData]=\\\"patientData\\\"></patient-labs>\\n                    </div>\\n                    <div *ngIf=\\\"currentTab === 'nursing'\\\">\\n                        <patient-nursing-care [patientData]='patientData' [practitioner]=\\\"practitionerData\\\"></patient-nursing-care>\\n                    </div>\\n                    <div *ngIf=\\\"currentTab === 'meds'\\\">\\n                        <div class=\\\"box-body pad\\\">\\n                            <textarea class=\\\"textarea\\\" id=\\\"notes-entry\\\" placeholder=\\\"Please enter meds note's here\\\"></textarea>\\n                        </div>\\n                        <p class=\\\"error-message\\\"></p>\\n                        <div class=\\\"box-footer text-align-right\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-info margin\\\">Add</button>\\n                        </div>\\n                        <div class=\\\"box box-widget \\\">\\n                            <div class=\\\"box-header with-border \\\">\\n                                <h3 class=\\\"box-title \\\">Old meds notes</h3>\\n                            </div>\\n                            <div class=\\\"box-footer box-comments \\\">\\n                                <div class=\\\"box-comment\\\">\\n                                    <img class=\\\"img-circle img-sm \\\" src=\\\"../../client/assets/images/user02.png\\\" alt=\\\"User Image \\\">\\n                                    <div class=\\\"comment-text \\\">\\n                                        <div class=\\\"username \\\">\\n                                            patientName\\n                                            <span class=\\\"text-muted pull-right \\\">8/7/2016 12:50 PM</span>\\n                                        </div>\\n                                        <span class=\\\"comment-text-notes\\\">note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details</span>\\n                                        <span class=\\\"text-muted pull-right \\\">-consultantName</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"currentTab === 'checklist'\\\">\\n                        <div class=\\\"box-body pad\\\">\\n                            <textarea class=\\\"textarea\\\" id=\\\"notes-entry\\\" placeholder=\\\"Please enter checklist note's here\\\"></textarea>\\n                        </div>\\n                        <p class=\\\"error-message\\\"></p>\\n                        <div class=\\\"box-footer text-align-right\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-info margin\\\">Add</button>\\n                        </div>\\n                        <div class=\\\"box box-widget \\\">\\n                            <div class=\\\"box-header with-border \\\">\\n                                <h3 class=\\\"box-title \\\">Old checklist notes</h3>\\n                            </div>\\n                            <div class=\\\"box-footer box-comments \\\">\\n                                <div class=\\\"box-comment\\\">\\n                                    <img class=\\\"img-circle img-sm \\\" src=\\\"../../client/assets/images/user02.png\\\" alt=\\\"User Image \\\">\\n                                    <div class=\\\"comment-text \\\">\\n                                        <div class=\\\"username \\\">\\n                                            patientName\\n                                            <span class=\\\"text-muted pull-right \\\">8/7/2016 12:50 PM</span>\\n                                        </div>\\n                                        <span class=\\\"comment-text-notes\\\">note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details note.details</span>\\n                                        <span class=\\\"text-muted pull-right \\\">-consultantName</span>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div *ngIf=\\\"currentTab === 'progress'\\\">\\n                        <patient-progress-notes [patientData]=\\\"patientData\\\" [practitionerData]=\\\"practitionerData\\\"></patient-progress-notes>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_document/patient.nursing.component.html\n// module id = ../../../../../src/app/patient_nursing_document/patient.nursing.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  moduleId: module.id,\n  selector: 'patient-nursing-document',\n  templateUrl: 'patient.nursing.component.html',\n  styleUrls: ['patient.nursing.component.css']\n})\n\nexport class NursingDocumentComponent implements OnInit {\n\n  currentTab: string = 'vitals';\n  @Input() patientData: any;\n  @Input() practitionerData: any;\n\n  constructor(private router: Router) { }\n\n\n  changeCurrentTab(tabName: string) {\n    this.currentTab = tabName;\n  }\n\n  ngOnInit() { }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_nursing_document/patient.nursing.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.orders.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_orders/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".patient-progress-notes-box textarea {\\n    width: 100%;\\n    height: 200px;\\n    font-size: 14px;\\n    line-height: 18px;\\n    border: 1px solid #dddddd;\\n    padding: 10px;\\n}\\n\\n.patient-progress-notes-box .notes-left-nav {\\n    background-color: #00a7d0;\\n}\\n\\n.patient-progress-notes-box .notes-left-nav ul {\\n    padding: 10px 0;\\n    margin: -5px -15px;\\n}\\n\\n.patient-progress-notes-box .notes-left-nav ul li {\\n    display: block;\\n    list-style: none;\\n    padding: 5px 5px 5px 10px;\\n}\\n\\n.patient-progress-notes-box .notes-left-nav ul li:hover {\\n    background-color: #4e565a;\\n}\\n\\n.patient-progress-notes-box .notes-left-nav ul li a {\\n    color: #fff;\\n    padding: 5px 5px 5px 10px;\\n    display: block;\\n}\\n\\n.patient-progress-notes-box .notes-left-nav ul li a b {\\n    color: #003fd0;\\n}\\n\\n.box-comments {\\n    overflow-x: auto;\\n    background-color: #fff;\\n    height: 366px;\\n}\\n\\n.comment-text-notes {\\n    display: block;\\n}\\n\\n.box-footer.box-comments {\\n    overflow: auto;\\n}\\n\\n.box-footer.box-comments .box-comment {\\n    text-align: left;\\n}\\n\\n.error-message {\\n    color: #f60;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_orders/patient.orders.component.css\n// module id = ../../../../../src/app/patient_orders/patient.orders.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"patient-progress-notes-box\\\">\\n    <div class=\\\"box-header with-border\\\">\\n        <h3 class=\\\"box-title\\\">{{tagName}}</h3>\\n    </div>\\n    <div class=\\\"box-body\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-2 notes-left-nav\\\">\\n                <ul>\\n                    <li><a (click)=\\\"changeCurrentTab('Medication')\\\" href=\\\"javascript:;\\\" title=\\\"Order Meds\\\">Order Meds<b>({{medicationList.length}})</b></a></li>\\n                    <li><a (click)=\\\"changeCurrentTab('Radiology')\\\"  href=\\\"javascript:;\\\" title=\\\"Order Rad\\\">Order Rad<b>({{radiologyList.length}})</b></a></li>\\n                    <li><a (click)=\\\"changeCurrentTab('Laboratory')\\\" href=\\\"javascript:;\\\" title=\\\"Order Lab\\\">Order Lab<b>({{laboratoryList.length}})</b></a></li>\\n                </ul>\\n            </div>\\n            <div class=\\\"col-md-10\\\">\\n                <div *ngIf=\\\"tagName === 'Medication'\\\">\\n                    <div class=\\\"box-body pad\\\">\\n                        <textarea class=\\\"textarea\\\" [(ngModel)]=\\\"orderNoteEntry\\\" placeholder=\\\"Please enter medication note's here\\\"></textarea>\\n                    </div>\\n                    <div class=\\\"box-footer text-align-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click) =\\\"clickCancel()\\\">Cancel</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createCarePlanAdd(tagName)\\\">Add</button>\\n                    </div>\\n                    <div class=\\\"box-footer box-comments \\\">\\n                        <div class=\\\"box-comment\\\" *ngFor=\\\"let medication of medicationList\\\">\\n                            <note-display [note]=\\\"medication\\\"></note-display> \\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"tagName === 'Radiology'\\\">\\n                    <div class=\\\"box-body pad\\\">\\n                        <textarea class=\\\"textarea\\\"  [(ngModel)]=\\\"orderNoteEntry\\\" placeholder=\\\"Please enter radiology note's here\\\"></textarea>\\n                    </div>\\n                    <div class=\\\"box-footer text-align-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click) =\\\"clickCancel()\\\">Cancel</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createCarePlanAdd(tagName)\\\">Add</button>\\n                    </div>\\n                    <div class=\\\"box-footer box-comments \\\">\\n                        <div class=\\\"box-comment\\\" *ngFor=\\\"let radiology of radiologyList\\\">\\n                            <note-display [note]=\\\"radiology\\\"> </note-display> \\n                        </div>\\n                    </div>\\n                </div>\\n                <div *ngIf=\\\"tagName === 'Laboratory'\\\">\\n                    <div class=\\\"box-body pad\\\">\\n                        <textarea class=\\\"textarea\\\" [(ngModel)]=\\\"orderNoteEntry\\\" placeholder=\\\"Please enter laboratory note's here\\\"></textarea>\\n                    </div>\\n                    <div class=\\\"box-footer text-align-right\\\">\\n                        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click) =\\\"clickCancel()\\\">Cancel</button>\\n                        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createCarePlanAdd(tagName)\\\">Add</button>\\n                    </div>\\n                    <div class=\\\"box-footer box-comments \\\">\\n                        <div class=\\\"box-comment\\\" *ngFor=\\\"let laboratory of laboratoryList\\\">\\n                            <note-display [note]=\\\"laboratory\\\"> </note-display> \\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<!-- <section class=\\\"content-header nursing-document-box\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"nav-tabs-custom box box-info\\\">\\n                <div class=\\\"tab-content\\\" *ngIf=\\\"allOrderNotes\\\">\\n                    <div class=\\\"patient-progress-notes-box\\\">\\n                         <div class=\\\"box-header with-border\\\">\\n                            <h3 class=\\\"box-title\\\">{{notesName}}</h3>\\n                        </div>\\n                        <div class=\\\"box-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-2 notes-left-nav\\\">\\n                                    <ul *ngFor=\\\"let orderNote of allOrderNotes\\\">\\n                                        <li><a (click)=\\\"changeCurrentTab(orderNote.tagCode)\\\" href=\\\"javascript:;\\\" title={{orderNote.tagName}}>{{orderNote.tagName}}<b>({{orderNote.order_notes.length}})</b></a></li>\\n                                    </ul>\\n                                </div>\\n                                <div class=\\\"col-md-10\\\">\\n                                    <div>\\n                                        <div class=\\\"box-body pad\\\">\\n                                            <textarea class=\\\"textarea\\\" id=\\\"notes-entry\\\" [(ngModel)]=\\\"orderNoteEntry\\\" placeholder=\\\"Please enter {{notesName}} as applicable note's here\\\"></textarea>\\n                                        </div>\\n                                        <p class=\\\"error-message\\\" align=\\\"center\\\">{{errorMessage}}</p>\\n                                        <div class=\\\"box-footer text-align-right\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancelOrderNote()\\\">Cancel</button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createOrderNote()(tagCode)\\\">Add</button>\\n                                        </div>\\n                                        <div class=\\\"box-footer box-comments\\\">\\n                                            <div class=\\\"box-comment\\\"  *ngFor=\\\"let note of orderList\\\">\\n                                            <note-display [note]=\\\"note\\\"></note-display>\\n                                             </div>\\n                                        </div>\\n                                   </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</section> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_orders/patient.orders.component.html\n// module id = ../../../../../src/app/patient_orders/patient.orders.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ModelMessage } from '../model_message/model.message'\nimport * as moment from 'moment/moment';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { RoleServices } from '../services/presence/role.services';\nimport { OrdersServices } from '../services/fhir/orders.services';\nimport { MedicationIdServices } from '../services/fhir/medicationId.services'\n\n@Component({\n  moduleId: module.id,\n  selector: 'patient-orders',\n  templateUrl: 'patient.orders.component.html',\n  styleUrls: ['patient.orders.component.css'],\n})\n\nexport class OrdersComponent implements OnInit {\n\n  tagName: string = 'Medication';\n  orderNoteEntry:any;\n  medicationList: any = [];\n  radiologyList: any = [];\n  laboratoryList: any = [];\n  roleWrite: boolean = false;\n  errorMessage:string;\n  medicationId:any;\n  encounterId:any;\n\n  @Input() patientData: any;\n  @Input() practitioner: any;\n\n  constructor(private router: Router, private ordersServices: OrdersServices, private roleServices: RoleServices, private medicationIdServices: MedicationIdServices, private modelMessage: ModelMessage) { }\n\n  changeCurrentTab(tag: string) {\n    this.tagName = tag;\n    this.getOrders(this.patientData.id,this.patientData.encounterId,this.tagName);\n  }\n  createCarePlanAdd(tag){\n    if(this.orderNoteEntry){\n      let orderData = {\n        \"patientId\" : this.patientData.id,\n        \"encounterId\" : this.patientData.encounterId,\n        \"note\" : this.orderNoteEntry,\n        \"practitionerId\" : this.practitioner.id,\n        \"practitionerName\" : this.practitioner.name,\n        \"medicationId\" : this.medicationId,\n        \"tag\" : tag\n      }\n      this.ordersServices.createOrders(orderData).subscribe(\n        data=>{\n          if(tag==='Medication'){\n         this.medicationList.unshift(data);\n         this.orderNoteEntry = null;\n        }else if(tag==='Radiology'){\n          this.radiologyList.unshift(data);\n          this.orderNoteEntry = null;\n        }else if(tag==='Laboratory'){\n          this.laboratoryList.unshift(data);\n          this.orderNoteEntry = null;\n        }\n        },\n        error => {\n          this.modelMessage.errorMessage(error);\n        }\n      )\n    }\n  }\n\n  getOrders(patientId,encounterId,tag){\n    this.ordersServices.getOrders(patientId,encounterId,tag).subscribe(\n      data=>{\n        if(tag==='Medication'){\n         this.medicationList = data;\n        }else if(tag==='Radiology'){\n          this.radiologyList = data.filter(o => Object.keys(o).length);\n        }else if(tag==='Laboratory'){\n          this.laboratoryList = data.filter(o => Object.keys(o).length);\n        }\n      },\n      error=> {\n        this.modelMessage.errorMessage(error);\n      }\n    );\n  }\n\n  getMedicationId(orgId){\n    this.medicationIdServices.getMedicationId(orgId).subscribe(\n      data =>{\n      this.medicationId = data.medicationId;\n      },\n      error=>{\n        this.modelMessage.errorMessage(error);\n      }\n    )\n  }\n\n  clickCancel(){\n    this.orderNoteEntry = null;\n    this.errorMessage = null;\n  }\n\n  ngOnInit() {\n    let userRole = this.roleServices.getRole('patient-detail');\n        if (userRole.write){\n            this.roleWrite = true;\n        }\n    this.getMedicationId(this.patientData.orgId);\n    this.getOrders(this.patientData.id,this.patientData.encounterId,this.tagName);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_orders/patient.orders.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.physical.exam.component';\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_physical_exam/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_physical_exam/patient.physical.exam.component.css\n// module id = ../../../../../src/app/patient_physical_exam/patient.physical.exam.component.css\n// module chunks = 0","module.exports = \"<form class=\\\"form-horizontal\\\" [formGroup]=\\\"createclinicalPhysicalExamForm\\\" (ngSubmit)=\\\"savePhysicalExamForm(createclinicalPhysicalExamForm.value, createclinicalPhysicalExamForm.valid)\\\" novalidate>\\n                            <div class=\\\"box-body\\\">\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-md-12\\\">\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"col-sm-2 control-label\\\">General Examination</label>\\n                                            <div class=\\\"col-sm-10\\\">\\n                                                <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter General Examination\\\" formControlName=\\\"generalExamination\\\" (keyup)=\\\"keyUpCheckPhysicalExam()\\\"></textarea>\\n                                                <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalPhysicalExamForm.controls.generalExamination.valid\\\">\\n                                                    Enter text.\\n                                                </small>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"col-sm-2 control-label\\\">Head Eye ENT</label>\\n                                            <div class=\\\"col-sm-10\\\">\\n                                                <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Head Eye ENT findings\\\" formControlName=\\\"headEyeEnt\\\" (keyup)=\\\"keyUpCheckPhysicalExam()\\\"></textarea>\\n                                                <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalPhysicalExamForm.controls.headEyeEnt.valid\\\">\\n                                                    Enter text.\\n                                                </small>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"col-sm-2 control-label\\\">Pulse</label>\\n                                            <div class=\\\"col-sm-10\\\">\\n                                                <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Pulse\\\" formControlName=\\\"pulse\\\" (keyup)=\\\"keyUpCheckPhysicalExam()\\\"></textarea>\\n                                                <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalPhysicalExamForm.controls.pulse.valid\\\">\\n                                                    Enter text.\\n                                                </small>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"col-sm-2 control-label\\\">Blood Pressure</label>\\n                                            <div class=\\\"col-sm-10\\\">\\n                                                <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Blood Pressure\\\" formControlName=\\\"bloodPressure\\\" (keyup)=\\\"keyUpCheckPhysicalExam()\\\"></textarea>\\n                                                <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalPhysicalExamForm.controls.bloodPressure.valid\\\">\\n                                                    Enter text.\\n                                                </small>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"col-sm-2 control-label\\\">Temperature</label>\\n                                            <div class=\\\"col-sm-10\\\">\\n                                                <textarea type=\\\"text\\\" maxlength=\\\"100\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Temperature\\\" formControlName=\\\"temperature\\\" (keyup)=\\\"keyUpCheckPhysicalExam()\\\"></textarea>\\n                                                <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalPhysicalExamForm.controls.temperature.valid\\\">\\n                                                    Enter text.\\n                                                </small>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"col-sm-2 control-label\\\">Height(cm)</label>\\n                                            <div class=\\\"col-sm-10\\\">\\n                                                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Height\\\" formControlName=\\\"height\\\" maxlength=\\\"6\\\" pattern=\\\"^(?!0)[0-9]{1,3}(\\\\.[0-9]{1,2})?$\\\" (keyup)=\\\"keyUpCheckPhysicalExam()\\\">\\n                                                <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalPhysicalExamForm.controls.height.valid\\\">\\n                                                    Height is required. Format is (999.99).\\n                                                </small>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"col-sm-2 control-label\\\">Weight(kg)</label>\\n                                            <div class=\\\"col-sm-10\\\">\\n                                                <input type=\\\"text\\\" maxlength=\\\"100\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Weight\\\" formControlName=\\\"weight\\\" maxlength=\\\"6\\\" pattern=\\\"^(?!0)[0-9]{1,3}(\\\\.[0-9]{1,2})?$\\\" (keyup)=\\\"keyUpCheckPhysicalExam()\\\">\\n                                                <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalPhysicalExamForm.controls.weight.valid\\\">\\n                                                    Weight is required. Format is (999.99).\\n                                                </small>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"col-sm-2 control-label\\\">Jugular Venous Pressure</label>\\n                                            <div class=\\\"col-sm-10\\\">\\n                                                <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Jugular Venous Pressure\\\" formControlName=\\\"jugularVenousPressure\\\" (keyup)=\\\"keyUpCheckPhysicalExam()\\\"></textarea>\\n                                                <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalPhysicalExamForm.controls.jugularVenousPressure.valid\\\">\\n                                                    Enter text.\\n                                                </small>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"col-sm-2 control-label\\\">Cardio Vascular</label>\\n                                            <div class=\\\"col-sm-10\\\">\\n                                                <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Cardio Vascular System findings\\\" formControlName=\\\"cardioVascular\\\" (keyup)=\\\"keyUpCheckPhysicalExam()\\\"></textarea>\\n                                                <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalPhysicalExamForm.controls.cardioVascular.valid\\\">\\n                                                    Enter text.\\n                                                </small>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"col-sm-2 control-label\\\">Respiratory System</label>\\n                                            <div class=\\\"col-sm-10\\\">\\n                                                <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Respiratory System findings\\\" formControlName=\\\"respiratorySystem\\\" (keyup)=\\\"keyUpCheckPhysicalExam()\\\"></textarea>\\n                                                <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalPhysicalExamForm.controls.respiratorySystem.valid\\\">\\n                                                    Enter text.\\n                                                </small>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"col-sm-2 control-label\\\">Central Nervous System</label>\\n                                            <div class=\\\"col-sm-10\\\">\\n                                                <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Central Nervous System findings\\\" formControlName=\\\"centralNervousSystem\\\" (keyup)=\\\"keyUpCheckPhysicalExam()\\\"></textarea>\\n                                                <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalPhysicalExamForm.controls.centralNervousSystem.valid\\\">\\n                                                    Enter text.\\n                                                </small>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"form-group\\\">\\n                                            <label class=\\\"col-sm-2 control-label\\\">Other System</label>\\n                                            <div class=\\\"col-sm-10\\\">\\n                                                <textarea type=\\\"text\\\" maxlength=\\\"1000\\\" class=\\\"form-control\\\" pattern=\\\".*[^\\\\r\\\\t\\\\v \\\\n]+([a-zA-Z0-9_!@#$%^&*()-=+{}\\\\;\\\\:\\\\'\\\\,\\\\[\\\\]\\\\<\\\\>?/\\\\\\\\\\\\s]+)*$\\\" placeholder=\\\"Enter Other System findings\\\" formControlName=\\\"otherSystem\\\" (keyup)=\\\"keyUpCheckPhysicalExam()\\\"></textarea>\\n                                                <small class=\\\"form-error\\\" [hidden]=\\\"createclinicalPhysicalExamForm.controls.otherSystem.valid\\\">\\n                                                    Enter text.\\n                                                </small>\\n                                            </div>\\n                                        </div>\\n                                        <div class=\\\"text-align-right\\\">\\n                                            <button *ngIf=\\\"createclinicalPhysicalExamForm.invalid && enableSaveButtonPhysicalExam\\\" class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\" disabled>Save</button>\\n                                            <button *ngIf=\\\"createclinicalPhysicalExamForm.valid && enableSaveButtonPhysicalExam\\\" class=\\\"btn btn-info btn-sm\\\" type=\\\"submit\\\">Save</button>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_physical_exam/patient.physical.exam.component.html\n// module id = ../../../../../src/app/patient_physical_exam/patient.physical.exam.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { PhysicalExamServices } from '../services/fhir/physical.exam.services';\nimport { ClinicalDocumentPhysicalExamInterface  } from './patient.physical.exam.interface';\nimport { ModelMessage } from '../model_message/model.message';\nimport * as moment from 'moment/moment';\n\n@Component({\n    moduleId: module.id,\n    selector: 'patient-physical-exam',\n    templateUrl: 'patient.physical.exam.component.html',\n    styleUrls: ['patient.physical.exam.component.css'],\n})\n\nexport class PatientPhysicalExamComponent implements OnInit {\n\n  public createclinicalPhysicalExamForm: FormGroup;\n  modeForPhysicalExam: string = 'Create';\n  enableSaveButtonPhysicalExam: boolean = false;\n  public submitted: boolean;\n  patientId: any;\n  encounterId: any;\n  physicalExamData: any;\n\n  @Input() patientData: any;\n  @Input() practitioner: any;\n\n  constructor(private router: Router, private physicalExamServices: PhysicalExamServices, private fb: FormBuilder, private modelMessage: ModelMessage) { }\n\n\n   createClinicalPhysicalExamDocument() {\n    this.createclinicalPhysicalExamForm = new FormGroup({\n      generalExamination: new FormControl(''),\n      headEyeEnt: new FormControl(''),\n      pulse: new FormControl(''),\n      bloodPressure: new FormControl(''),\n      temperature: new FormControl(''),\n      height: new FormControl(''),\n      weight: new FormControl(''),\n      jugularVenousPressure: new FormControl(''),\n      cardioVascular: new FormControl(''),\n      respiratorySystem: new FormControl(''),\n      centralNervousSystem: new FormControl(''),\n      otherSystem: new FormControl('')\n    });\n  }\n\n  keyUpCheckPhysicalExam() {\n    this.enableSaveButtonPhysicalExam = true;\n  }\n\n  prepareClinicalDocDataPhysicalForm(physicalExamData) {\n    this.createclinicalPhysicalExamForm = new FormGroup({\n      fhirLogicalId: new FormControl(physicalExamData.id),\n      generalExamination: new FormControl(physicalExamData.generalExamination),\n      headEyeEnt: new FormControl(physicalExamData.headEyeEnt),\n      pulse: new FormControl(physicalExamData.pulse),\n      bloodPressure: new FormControl(physicalExamData.bloodPressure),\n      temperature: new FormControl(physicalExamData.temperature),\n      height: new FormControl(physicalExamData.height),\n      weight: new FormControl(physicalExamData.weight),\n      jugularVenousPressure: new FormControl(physicalExamData.jugularVenousPressure),\n      cardioVascular: new FormControl(physicalExamData.cardioVascular),\n      respiratorySystem: new FormControl(physicalExamData.respiratorySystem),\n      centralNervousSystem: new FormControl(physicalExamData.centralNervousSystem),\n      otherSystem: new FormControl(physicalExamData.otherSystem)\n    });\n  }\n\n\n  getClinicalDocument(patientId, encounterId) {\n    this.physicalExamServices.getClinicalDocumentPhysicalForm(patientId, encounterId).subscribe(\n        data => {\n                this.physicalExamData = data;\n                if (this.physicalExamData.id) {\n                    this.modeForPhysicalExam = 'Edit';\n                    this.prepareClinicalDocDataPhysicalForm(this.physicalExamData);\n                }\n        },\n        error => {\n            this.modelMessage.errorMessage(error);\n        }\n    );\n  }\n\n  savePhysicalExamForm(model: ClinicalDocumentPhysicalExamInterface, isValid: Boolean) {\n    if ((this.modeForPhysicalExam == 'Create') || (this.modeForPhysicalExam == 'Edit')) {\n        this.submitted = true;\n        if (isValid) {\n            let effectiveDate = moment().format('YYYY-MM-DDTHH:mm:ss+00:00')\n            let clinicalData = [];\n            clinicalData.push(model);\n            clinicalData.push(this.patientData);\n            clinicalData.push(effectiveDate);\n            let clinicalDataPhysicalExam = {\n                \"physicalExamData\": model,\n                \"patientData\": this.patientData,\n                \"effectiveDate\": effectiveDate,\n                \"practitionerData\": this.practitioner\n            }\n            if (this.modeForPhysicalExam == 'Create') {\n                this.physicalExamServices.createClinicalDocumentPhysicalForm(clinicalDataPhysicalExam).subscribe(\n                    data => {\n                        this.physicalExamData = data;\n                        this.prepareClinicalDocDataPhysicalForm(this.physicalExamData);\n                        this.modeForPhysicalExam = 'Edit';\n                        let msg = \"Created Clinical Documentation Physical Exam\";\n                        this.modelMessage.successMessage(msg);\n                    },\n                    error => {\n                        let errorMessege = error;\n                        this.modelMessage.errorMessage(errorMessege);\n                    });\n            }\n            else if (this.modeForPhysicalExam == 'Edit') {\n                this.physicalExamServices.updateClinicalDocumentPhysicalForm(clinicalDataPhysicalExam).subscribe(\n                    data => {\n                        this.physicalExamData = data;\n                        this.prepareClinicalDocDataPhysicalForm(this.physicalExamData);\n                        let msg = \"Updated Clinical Documentation Physical Exam\";\n                        this.modelMessage.successMessage(msg);\n                    },\n                    error => {\n                        let errorMessege = error;\n                        this.modelMessage.errorMessage(errorMessege);\n                    });\n            }\n        }\n    }\n  }\n\n  ngOnInit() {\n    this.patientId = this.patientData.id;\n    this.encounterId = this.patientData.encounterId;\n    this.createClinicalPhysicalExamDocument()\n    this.getClinicalDocument(this.patientId, this.encounterId);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_physical_exam/patient.physical.exam.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.plan.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_plan/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".error-message {\\n    color: #f60;\\n}\\n\\n.textarea {\\n    width: 100%;\\n    min-height: 100px;\\n}\\n\\n.box-comments {\\n    background-color: #fff;\\n}\\n\\n.box-comments {\\n    height: 366px;\\n    overflow-x: auto;\\n}\\n\\n.comment-text-notes {\\n    display: block;\\n}\\n\\n.box-footer.box-comments {\\n    overflow: auto;\\n}\\n\\n.box-footer.box-comments .box-comment {\\n    text-align: left;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_plan/patient.plan.component.css\n// module id = ../../../../../src/app/patient_plan/patient.plan.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"box-body\\\">\\n    <div class=\\\"box-body pad\\\">\\n        <div class=\\\"box-body pad\\\">\\n            <textarea class=\\\"textarea\\\" id=\\\"notes-entry\\\" placeholder=\\\"Please enter the care plan note's here\\\" [(ngModel)]=\\\"entryCarePlanNote\\\"></textarea>\\n        </div>\\n        <p class=\\\"error-message\\\">{{errorMessage}}</p>\\n        <div class=\\\"box-footer text-align-right\\\">\\n            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"clickCancel()\\\">Cancel</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-info margin\\\" (click)=\\\"clickCarePlanAdd()\\\">Add</button>\\n        </div>\\n        <div class=\\\"box box-widget \\\">\\n            <div class=\\\"box-footer box-comments \\\">\\n                <div class=\\\"box-comment\\\" *ngFor=\\\"let carePlan of carePlanList\\\">\\n                    <note-display [note]=\\\"carePlan\\\"> </note-display> \\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_plan/patient.plan.component.html\n// module id = ../../../../../src/app/patient_plan/patient.plan.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { CarePlanServices } from '../services/fhir/care.plan.services';\nimport { ModelMessage } from '../model_message/model.message';\nimport { RoleServices } from '../services/presence/role.services';\n\n@Component({\n  moduleId: module.id,\n  selector: 'patient-plan',\n  templateUrl: 'patient.plan.component.html',\n  styleUrls: ['patient.plan.component.css'],\n})\n\nexport class PatientPlanComponent implements OnInit {\n  \n  entryCarePlanNote:any;\n  carePlanList:any = [];\n  errorMessage:any;\n  roleWrite: boolean = false;\n\n  @Input() patientData: any;\n  @Input() practitioner: any;\n  @Input() patientName:any;\n  \n  constructor(private roleServices: RoleServices, private carePlanServices: CarePlanServices, private modelMessage: ModelMessage ) { }\n\n  clickCarePlanAdd(){\n    if(this.entryCarePlanNote){\n      this.errorMessage = '';\n      let carePlanData = {\n        \"patientId\" : this.patientData.id,\n        \"encounterId\" : this.patientData.encounterId,\n        \"note\" : this.entryCarePlanNote,\n        \"practitionerId\" : this.practitioner.id,\n        \"practitionerName\" : this.practitioner.name,\n        \"patientName\" : this.patientName.name\n      }\n    \n      this.carePlanServices.createCarePlan(carePlanData).subscribe(\n        data => {\n          this.carePlanList.unshift(data);\n          this.entryCarePlanNote = null;\n        },\n        error => {\n          this.modelMessage.errorMessage(error);\n        });\n      }else{\n        this.errorMessage = 'Please enter care plan notes'\n      }\n  }\n\n  clickCancel(){\n    this.entryCarePlanNote = null;\n    this.errorMessage = null;\n  }\n\n  getCarePlan(patientId,encounterId){\n    this.carePlanServices.getCarePlan(patientId,encounterId).subscribe(\n      data=> {\n          this.carePlanList = data;\n      },\n      error=> {\n        this.modelMessage.errorMessage(error);\n      }\n    );\n  }\n\n  ngOnInit() {\n    let userRole = this.roleServices.getRole('patient-detail');\n        if (userRole.write) {\n            this.roleWrite = true;\n        }\n    \n    this.getCarePlan(this.patientData.id,this.patientData.encounterId);  \n  }      \n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_plan/patient.plan.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.procedure.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_procedure/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".error-message {\\n    color: #f60;\\n}\\n\\n.textarea {\\n    width: 100%;\\n    min-height: 100px;\\n}\\n\\n.box-comments {\\n    background-color: #fff;\\n}\\n\\n.box-comments {\\n    height: 366px;\\n    overflow-x: auto;\\n}\\n\\n.comment-text-notes {\\n    display: block;\\n}\\n\\n.box-footer.box-comments {\\n    overflow: auto;\\n}\\n\\n.box-footer.box-comments .box-comment {\\n    text-align: left;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_procedure/patient.procedure.component.css\n// module id = ../../../../../src/app/patient_procedure/patient.procedure.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"loading-spinner\\\" *ngIf=\\\"loading\\\"></div>\\n<div *ngIf=\\\"!loading\\\">\\n  <div class=\\\"box\\\">\\n      <div class=\\\"box-header\\\">\\n          <h3 class=\\\"box-title\\\">{{patientName}}'s\\n              <small> Procedure</small>\\n          </h3>\\n      </div>\\n      <div class=\\\"box-body pad\\\">\\n          <div class=\\\"box-body pad\\\">\\n              <textarea class=\\\"textarea\\\" id=\\\"notes-entry\\\" placeholder=\\\"Please enter the procedure note's here\\\" [(ngModel)]=\\\"entryProcedureNote\\\"></textarea>\\n          </div>\\n          <p class=\\\"error-message\\\">{{errorMessage}}</p>\\n          <div class=\\\"box-footer text-align-right\\\" *ngIf=\\\"roleWrite\\\">\\n              <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"clickProcedureCancel()\\\">Cancel</button>\\n              <button type=\\\"submit\\\" class=\\\"btn btn-info margin\\\" (click)=\\\"clickProcedureAdd()\\\">Add</button>\\n          </div>\\n          <div class=\\\"box box-widget \\\" *ngIf=\\\"procedureNotesList.length\\\">\\n              <div class=\\\"box-header with-border \\\">\\n                  <h3 class=\\\"box-title \\\">Procedure Notes</h3>\\n              </div>\\n              <div class=\\\"box-footer box-comments \\\">\\n                  <div class=\\\"box-comment\\\" *ngFor=\\\"let procedureNote of procedureNotesList\\\">\\n                      <div class=\\\"comment-text \\\">\\n                          <div class=\\\"username \\\">\\n                              <span class=\\\"text-muted pull-right \\\">{{procedureNote.createdDate}}</span>\\n                          </div>\\n                          <span class=\\\"comment-text-notes\\\">{{procedureNote.note}}</span>\\n                          <span class=\\\"text-muted pull-right \\\">{{procedureNote.name}}</span>\\n                      </div>\\n                  </div>\\n              <div>\\n              </div>\\n          </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_procedure/patient.procedure.component.html\n// module id = ../../../../../src/app/patient_procedure/patient.procedure.component.html\n// module chunks = 0","import { Component, OnInit, Input,  Output, EventEmitter  } from '@angular/core';\nimport { ModelMessage } from '../model_message/model.message';\nimport { RoleServices } from '../services/presence/role.services';\nimport { ProcedureServices } from '../services/fhir/procedure.services';\n\n@Component({\n    moduleId: module.id,\n    selector: 'patient-procedure',\n    templateUrl: 'patient.procedure.component.html',\n    styleUrls: ['patient.procedure.component.css'],\n})\n\nexport class PatientProcedureComponent implements OnInit {\n    \n    @Output()\n    cancelEvent: EventEmitter<string> = new EventEmitter(); \n\n    loading: boolean = true;\n    roleWrite: boolean = false;\n    errorMessage: string;\n    procedureNotesList:any;\n    entryProcedureNote:string;\n    \n\n    @Input() patientData: any;\n    @Input() practitionerData: any;\n    @Input() patientName:string;\n\n    constructor(private roleServices: RoleServices, private procedureServices: ProcedureServices, private modelMessage: ModelMessage) { }\n\n    clickProcedureCancel(){\n        this.procedureNotesList=null;\n        this.cancelEvent.emit(\"cancel\");\n    }\n\n    clickProcedureAdd() {\n        if(this.entryProcedureNote){\n            let procedureData =\n                {\n                    \"patientId\": this.patientData.id,\n                    \"practitionerId\": this.practitionerData.id,\n                    \"note\": this.entryProcedureNote,\n                    \"name\": this.practitionerData.name,\n                    \"encounterId\": this.patientData.encounterId\n                };\n            this.procedureServices.createProcedure(procedureData).subscribe(\n                data => {\n                    this.procedureNotesList.splice(0,0,data);\n                    this.entryProcedureNote=null;\n                },\n                error => {\n                    this.modelMessage.errorMessage(error);\n                });\n        }else{\n            this.errorMessage = 'Please Enter the Procedure notes';\n        }  \n    }\n\n    getProcedure(patientId,encounterId) {\n        this.procedureServices.getProcedure(patientId,encounterId).subscribe(\n            data => {\n                let responseData:any = data;\n                if(responseData.length){\n                  this.procedureNotesList = responseData;\n                  this.loading=false; \n                }else{\n                    if(!this.roleWrite){\n                        this.cancelEvent.emit();\n                        this.modelMessage.infoMessage(\"No Procedure Notes\");\n                        this.loading=false;\n                    }else{\n                        this.loading=false;\n                    }\n                }\n            },\n            error => {\n                this.loading=false;\n                this.cancelEvent.emit();\n                this.modelMessage.errorMessage(error);\n            });\n    }\n\n    ngOnInit() {\n        let userRole = this.roleServices.getRole('patient-detail');\n        if (userRole.write) {\n            this.roleWrite = true;\n        }\n        this.getProcedure(this.patientData.id, this.patientData.encounterId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_procedure/patient.procedure.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.progress.notes.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_progress_notes/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".patient-progress-notes-box textarea {\\n    width: 100%;\\n    height: 200px;\\n    font-size: 14px;\\n    line-height: 18px;\\n    border: 1px solid #dddddd;\\n    padding: 10px;\\n}\\n\\n.patient-progress-notes-box .notes-left-nav {\\n    background-color: #00a7d0;\\n}\\n\\n.patient-progress-notes-box .notes-left-nav ul {\\n    padding: 10px 0;\\n    margin: -5px -15px;\\n}\\n\\n.patient-progress-notes-box .notes-left-nav ul li {\\n    display: block;\\n    list-style: none;\\n    padding: 5px 5px 5px 10px;\\n}\\n\\n.patient-progress-notes-box .notes-left-nav ul li:hover {\\n    background-color: #4e565a;\\n}\\n\\n.patient-progress-notes-box .notes-left-nav ul li a {\\n    color: #fff;\\n    padding: 5px 5px 5px 10px;\\n    display: block;\\n}\\n\\n.patient-progress-notes-box .notes-left-nav ul li a b {\\n    color: #003fd0;\\n}\\n\\n.box-comments {\\n    overflow-x: auto;\\n    background-color: #fff;\\n    height: 366px;\\n}\\n\\n.comment-text-notes {\\n    display: block;\\n}\\n\\n.box-footer.box-comments {\\n    overflow: auto;\\n}\\n\\n.box-footer.box-comments .box-comment {\\n    text-align: left;\\n}\\n\\n.error-message {\\n    color: #f60;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_progress_notes/patient.progress.notes.component.css\n// module id = ../../../../../src/app/patient_progress_notes/patient.progress.notes.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header nursing-document-box\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n            <div class=\\\"nav-tabs-custom box box-info\\\">\\n                <div class=\\\"tab-content\\\" *ngIf=\\\"allProgressNotes\\\">\\n                    <div class=\\\"patient-progress-notes-box\\\">\\n                         <div class=\\\"box-header with-border\\\">\\n                            <h3 class=\\\"box-title\\\">{{notesName}}</h3>\\n                        </div>\\n                        <div class=\\\"box-body\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-2 notes-left-nav\\\">\\n                                    <ul *ngFor=\\\"let progressNote of allProgressNotes\\\">\\n                                        <li><a (click)=\\\"changeCurrentTab(progressNote.tagCode)\\\" href=\\\"javascript:;\\\" title={{progressNote.tagName}}>{{progressNote.tagName}}<b>({{progressNote.progress_notes.length}})</b></a></li>\\n                                    </ul>\\n                                </div>\\n                                <div class=\\\"col-md-10\\\">\\n                                    <div>\\n                                        <div class=\\\"box-body pad\\\">\\n                                            <textarea class=\\\"textarea\\\" id=\\\"notes-entry\\\" [(ngModel)]=\\\"progressNoteEntry\\\" placeholder=\\\"Please enter {{notesName}} as applicable note's here\\\"></textarea>\\n                                        </div>\\n                                        <p class=\\\"error-message\\\" align=\\\"center\\\">{{errorMessage}}</p>\\n                                        <div class=\\\"box-footer text-align-right\\\">\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"cancelProgressNote()\\\">Cancel</button>\\n                                            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"createProgressNote(tagCode)\\\">Add</button>\\n                                        </div>\\n                                        <div class=\\\"box-footer box-comments\\\">\\n                                            <div class=\\\"box-comment\\\"  *ngFor=\\\"let note of progressList\\\">\\n                                            <note-display [note]=\\\"note\\\"></note-display>\\n                                             </div>\\n                                        </div>\\n                                   </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_progress_notes/patient.progress.notes.component.html\n// module id = ../../../../../src/app/patient_progress_notes/patient.progress.notes.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ProgressNotesServices } from '../services/fhir/progress.notes.services';\nimport { ModelMessage } from '../model_message/model.message'\nimport * as moment from 'moment/moment';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { RoleServices } from '../services/presence/role.services';\n\n@Component({\n  moduleId: module.id,\n  selector: 'patient-progress-notes',\n  templateUrl: 'patient.progress.notes.component.html',\n  styleUrls: ['patient.progress.notes.component.css']\n})\n\nexport class PatientProgressNotesComponent implements OnInit {\n    notesName: string = 'Scores as applicable';\n    progressNoteEntry:any;\n    progressList: any = [];\n    roleWrite: boolean = false;\n    errorMessage:string;\n    encounterId:any;\n    tagCode:any = 'cm_patient_scores';\n    allProgressNotes: Array<any> = [];\n\n    @Input() patientData: any;\n    @Input() practitionerData: any;\n    \n    constructor(private router: Router, private roleServices: RoleServices, private progressNotesServices: ProgressNotesServices, private fb: FormBuilder, private modelMessage: ModelMessage) { }\n\n    changeCurrentTab(code:string){\n        this.tagCode = code;\n        this.progressNoteEntry=null;\n        this.setProgressListByCode()\n    }\n\n    cancelProgressNote(){\n      this.progressNoteEntry=null;\n    }\n\n    createProgressNote(code) {\n      if(this.progressNoteEntry){\n        this.errorMessage = null;\n        let progressNoteData = {\n          \"patientId\": this.patientData.id,\n          \"practitionerId\": this.practitionerData.id,\n          \"note\": this.progressNoteEntry,\n          \"name\": this.practitionerData.name,\n          \"encounterId\":this.patientData.encounterId,\n          \"code\": code\n        };  \n        this.progressNotesServices.createProgressNotes(progressNoteData).subscribe(\n            data => {\n                this.progressNoteEntry=null;\n                this.progressList.unshift(data);\n            },\n            error => {\n                this.modelMessage.errorMessage(error);\n            }\n        );\n      }else{\n        this.errorMessage = 'notes is Mandatory'\n      }\n    }\n\n    setProgressListByCode(){\n      let list:any = [];\n      list = this.allProgressNotes.filter((note)=>{\n        if(note.tagCode === this.tagCode){\n           this.notesName = note.tagName;\n           return note.progress_notes;\n        }\n      });\n      this.progressList = list[0].progress_notes;\n    }\n\n    getProgressNotes(patientId,encounterId){\n        this.progressNotesServices.getProgressNotes(patientId,encounterId).subscribe(\n            data=>{\n                let responseData:any = data;\n                this.allProgressNotes = responseData;\n                this.setProgressListByCode();\n            },\n            error=>{\n              this.modelMessage.errorMessage(error);\n            }\n        )\n    }\n\n    ngOnInit() {\n        let userRole = this.roleServices.getRole('patient-detail');\n        if (userRole.write){\n            this.roleWrite = true;\n        }\n        this.getProgressNotes(this.patientData.id,this.patientData.encounterId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_progress_notes/patient.progress.notes.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.summary.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_summary/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/*.same-height.row .box {\\n    display: table;\\n}\\n\\n.same-height.row [class*=\\\"col-\\\"] .box {\\n    float: none;\\n    display: table-cell;\\n    vertical-align: top;\\n}*/\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_summary/patient.summary.component.css\n// module id = ../../../../../src/app/patient_summary/patient.summary.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"row\\\">\\n    <div class=\\\"col-sm-12\\\">\\n        <patient-fluid-chart [patientData]=\\\"patientData\\\"></patient-fluid-chart>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_summary/patient.summary.component.html\n// module id = ../../../../../src/app/patient_summary/patient.summary.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  moduleId: module.id,\n  selector: 'patient-summary',\n  templateUrl: 'patient.summary.component.html',\n  styleUrls: ['patient.summary.component.css'],\n})\n\nexport class PatientSummaryComponent implements OnInit {\n\n  pdClass: string = 'active';\n  ppClass: string = '';\n  siClass: string = '';\n\n  @Input() patientData: any;\n  @Input() practitioner: any;\n  @Input() nurse: any;\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n    //console.log( this.patientData )\n  }\n\n  pClick(i) {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_summary/patient.summary.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.vitals.flowsheet.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_flowsheet/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".labs-box .box-header .btn {\\n    float: right;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_flowsheet/patient.vitals.flowsheet.component.css\n// module id = ../../../../../src/app/patient_vitals_flowsheet/patient.vitals.flowsheet.component.css\n// module chunks = 0","module.exports = \"<div>\\n    <strong>Date:</strong>&nbsp;<button (click) = \\\"pageHandler('pageDown')\\\" [disabled]=\\\"disablePageDownButton\\\"> prev </button><strong>{{observedDate}}</strong> <button (click) = \\\"pageHandler('pageUp')\\\" [disabled]=\\\"disablePageUpButton\\\"> next </button>\\n\\n    <button type=\\\"submit\\\" (click)=\\\"saveChangedObservations()\\\" style=\\\"float: right;\\\">Save</button>\\n</div>\\n<br>\\n<div class=\\\"loading-spinner\\\" *ngIf=\\\"loading\\\"></div>\\n<div *ngIf=\\\"startGrid && !loading\\\" >\\n<ag-grid-angular style=\\\"width: 100%; height: 500px;\\\"\\n                 class=\\\"ag-fresh\\\"\\n                 [rowData]=\\\"rowData\\\"\\n                 [columnDefs]=\\\"columnDefs\\\"\\n                 [gridOptions]=\\\"gridOptions\\\"\\n                 [getNodeChildDetails]=\\\"getNodeChildDetails\\\"\\n                 (gridReady)=\\\"onGridReady($event)\\\"\\n                \\n                 enableSorting \\n                 enableColResize \\n                 suppressMenuFilterPanel \\n                 singleClickEdit \\n                 (cellValueChanged)=\\\"onCellValueChanged($event)\\\"\\n                 >\\n</ag-grid-angular>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_flowsheet/patient.vitals.flowsheet.component.html\n// module id = ../../../../../src/app/patient_vitals_flowsheet/patient.vitals.flowsheet.component.html\n// module chunks = 0","import { Component, AfterViewInit, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as moment from 'moment-timezone';\nimport { GridOptions } from \"ag-grid/main\";\nimport { CommonServices } from \"../services/common.services\";\nimport { FlowsheetServices } from \"../services/fhir/flowsheet.services\";\nimport { ModelMessage } from '../model_message/model.message';\nimport { Socket } from 'ng-socket-io';\n\nconst observationWidth: number = 150;\nconst timestampWidth: number = 100;\n\n@Component({\n    moduleId: module.id,\n    selector: 'patient-vitals-flowsheet',\n    templateUrl: 'patient.vitals.flowsheet.component.html',\n    styleUrls: ['patient.vitals.flowsheet.component.css'],\n})\n\nexport class PatientVitalsFlowsheetComponent implements OnInit {\n\n    @Input() patientData:any;\n\n    columnDefs: any[];\n    rowData: any;\n    vitalsDataIndex: any = 0;\n    observedDate: any;\n    private colEditable: boolean = true;\n    orgTimeZone:any; \n    disablePageDownButton:boolean=true;\n    disablePageUpButton:boolean=true;\n    currrentRowData:Array<any> = [];\n    public gridOptions: GridOptions;\n    private coldefs: any;\n    private flowsheetData: any;\n    loading:boolean = true;\n\n    startGrid:boolean = false;\n\n    constructor(private router: Router, private commonServices: CommonServices, private flowsheetServices: FlowsheetServices, private modelMessage:ModelMessage, private socket:Socket) { \n        this.orgTimeZone = this.commonServices.getAppTimeZone();\n    }\n\n    getSocket(){\n      this.socket.on('flowsheet',data=>{\n          let responseData: any = data;\n\n          /*Ag-Grid -> setRowData*/\n          // this.currrentRowData = responseData.filter(data => moment(data.observedDate).tz(this.orgTimeZone).format('YYYY-MM-DD') === moment(this.observedDate,'DD/MM/YYYY h:mm a').tz(this.orgTimeZone).format('YYYY-MM-DD')) || [];\n          // if(this.currrentRowData.length){\n          //     let vitalRowData:any = this.currrentRowData.find(data=>data.observationData[0].observation === \"Vital Signs\")\n          //     if(vitalRowData){\n          //         this.setUpdatedRowData(vitalRowData.observationData[0].subcategory);\n          //     }\n          // }\n\n\n          /*Ag-Grid -> Refresh Cell*/\n          if( moment(responseData.observedDateTime).tz(this.orgTimeZone).format('YYYY-MM-DD') === moment(this.observedDate,'DD/MM/YYYY h:mm a').tz(this.orgTimeZone).format('YYYY-MM-DD') ){\n              this.setUpdatedRowData(responseData.patientObservationsData);\n          }\n      });\n    }\n\n    setUpdatedRowData(observationRowData) {\n\n        /*Ag-Grid -> Refresh Cell*/\n        this.gridOptions.api.forEachNode( function(node) {\n            if(node.data.id === observationRowData.id){\n                node.data = observationRowData\n            }\n        });\n        var params:any = {\n            force: false\n        };\n        this.gridOptions.api.refreshCells(params);\n\n        /*Ag-Grid -> setRowData*/\n        // this.rowData = observationRowData;\n        // this.gridOptions.api.setRowData(this.rowData)\n    }\n\n    setDisableButton(){\n        if(this.vitalsDataIndex === 0 && this.flowsheetData.length >1){\n            this.disablePageDownButton = false;\n            this.disablePageUpButton = true;\n        }else if( this.vitalsDataIndex >= this.flowsheetData.length - 1){\n            this.disablePageDownButton = true;\n            this.disablePageUpButton = false;\n        }else{\n            this.disablePageDownButton = false;\n            this.disablePageUpButton = false;\n        }\n    }\n\n    pageHandler(pageActition) {\n        if (pageActition == \"pageDown\" && this.vitalsDataIndex < this.flowsheetData.length - 1 ) {\n            this.loading = true;\n            this.vitalsDataIndex++;\n            this.observedDate = moment(this.flowsheetData[this.vitalsDataIndex].observedDate).tz(this.orgTimeZone).format('DD/MM/YYYY h:mm a');\n            let coloumnDefs = this.createColumnDefs(this.flowsheetData[this.vitalsDataIndex].observedDate);\n            this.gridOptions.api.setColumnDefs(coloumnDefs)\n            this.rowData = this.flowsheetData[this.vitalsDataIndex].observationData[0].subcategory\n            this.gridOptions.api.sizeColumnsToFit();\n            this.setDisableButton();\n            /*reset the observations in cache for previous day*/\n            this.flowsheetServices.setChangedObservations([]);\n            this.loading=false;\n        } else if (pageActition == \"pageUp\" && this.vitalsDataIndex > 0) {\n            this.loading = true;\n            this.vitalsDataIndex--;\n            this.observedDate = moment(this.flowsheetData[this.vitalsDataIndex].observedDate).tz(this.orgTimeZone).format('DD/MM/YYYY h:mm a');\n            let coloumnDefs = this.createColumnDefs(this.flowsheetData[this.vitalsDataIndex].observedDate);\n            this.gridOptions.api.setColumnDefs(coloumnDefs)\n            this.rowData = this.flowsheetData[this.vitalsDataIndex].observationData[0].subcategory\n            this.gridOptions.api.sizeColumnsToFit();\n            this.setDisableButton();\n            /*reset the observations in cache for previous day*/\n            this.flowsheetServices.setChangedObservations([]);\n            this.loading=false;\n        }\n    }\n\n\n    private createColumnDefs(observedDateTime) {\n        let globalWidth = 67;\n        let colDefs = [];\n        let patientadmittedDate = moment(this.patientData.admittedDate).tz(this.orgTimeZone);\n        let observedDate = moment(observedDateTime).tz(this.orgTimeZone);\n        let morningDate:any = moment(observedDateTime).tz(this.orgTimeZone).startOf('day');\n        let eveningDate:any = moment(observedDateTime).tz(this.orgTimeZone).startOf('day');\n        let nightDate:any = moment(observedDateTime).tz(this.orgTimeZone).startOf('day');\n        let isMorningShift:boolean = false;\n        let isEveningShift:boolean = false;\n        let isNightShift:boolean = false;\n        this.coldefs = null;\n        colDefs.push({ headerName: \"Observation\", field: \"observation\", cellRenderer: \"group\", pinned: true, suppressMovable: true, minWidth: 200, width:320 });\n\n        if( patientadmittedDate.format('YYYY-MM-DD') === observedDate.format('YYYY-MM-DD') ){\n\n            let time = moment(patientadmittedDate).tz(this.orgTimeZone);\n\n            //check whether the admitted time lies in Morning Shift\n            if(time.format('HH:mm') > \"08:00\" && time.format('HH:mm') < \"13:30\"){\n                morningDate = moment(patientadmittedDate).tz(this.orgTimeZone).startOf('hour');\n                if(time.format('mm') > '30'){\n                    morningDate = morningDate.add(1, 'hours');\n                }\n                eveningDate = eveningDate.set({hour:14});\n                nightDate = nightDate.set({hour:20});\n                isMorningShift = true;\n                isEveningShift = true;\n                isNightShift = true;\n            } \n            //check whether the admitted time lies in Evening Shift\n            else if(time.format('HH:mm') > \"14:00\" && time.format('HH:mm') < \"19:30\"){\n                eveningDate = moment(patientadmittedDate).tz(this.orgTimeZone).startOf('hour');\n                if(time.format('mm') > '30'){\n                    eveningDate.add(1, 'hours');\n                }\n                nightDate = nightDate.set({hour:20});\n                isEveningShift = true;\n                isNightShift = true;\n            } \n            //check whether the admitted time lies in Night Shift\n            else if(time.format('HH:mm') > \"20:00\" && time.format('HH:mm') < \"7:30\"){\n                nightDate = moment(patientadmittedDate).tz(this.orgTimeZone).startOf('hour');\n                if(time.format('mm') > '30'){\n                    nightDate.add(1, 'hours');\n                }\n                isNightShift = true;\n            }\n\n        }else{\n\n            morningDate = morningDate.set({hour:8});\n            eveningDate = eveningDate.set({hour:14});\n            nightDate = nightDate.set({hour:20});\n            isMorningShift = true;\n            isEveningShift = true;\n            isNightShift = true;\n\n        }\n\n        if (isMorningShift) {\n            let morningColDef = {\n                headerName: \"Morning\",\n                suppressMovable: true,\n                children: []\n            };\n\n            let morningColData = {\n                headerName: morningDate.format('HH:mm'),\n                newValueHandler: this.checkNewValue,\n                suppressMovable: true,\n                field: morningDate.format(),\n                editable: this.colEditable, minWidth: globalWidth,\n                cellRenderer: 'animateSlide'\n            };\n            morningColDef.children.push(morningColData);\n\n            while (morningDate.format('HH:mm') !== '13:30') {\n                morningColData = {\n                    headerName: morningDate.add(30, 'minutes').format('HH:mm'),\n                    newValueHandler: this.checkNewValue,\n                    suppressMovable: true,\n                    field: morningDate.format(),\n                    editable: this.colEditable, minWidth: globalWidth,\n                    cellRenderer: 'animateSlide'\n                };\n                morningColDef.children.push(morningColData);\n            }\n            colDefs.push(morningColDef);\n        }\n\n        if (isEveningShift) {\n            let eveningColDef = {\n                headerName: \"Evening\",\n                suppressMovable: true,\n                children: []\n            };\n            let eveningColData = {\n                headerName: eveningDate.format('HH:mm'),\n                newValueHandler: this.checkNewValue,\n                suppressMovable: true,\n                field: eveningDate.format(),\n                editable: this.colEditable, minWidth: globalWidth,\n                cellRenderer: 'animateSlide'\n            };\n            eveningColDef.children.push(eveningColData);\n\n            while (eveningDate.format('HH:mm') !== '19:30') {\n                eveningColData = {\n                    headerName: eveningDate.add(30, 'minutes').format('HH:mm'),\n                    newValueHandler: this.checkNewValue,\n                    suppressMovable: true,\n                    field: eveningDate.format(),\n                    editable: this.colEditable, minWidth: globalWidth,\n                    cellRenderer: 'animateSlide'\n                };\n                eveningColDef.children.push(eveningColData);\n            }\n            colDefs.push(eveningColDef);\n        }\n\n        if (isNightShift) {\n            let nightColDef = {\n                headerName: \"Night\",\n                suppressMovable: true,\n                children: []\n            };\n            let nightColData = {\n                headerName: nightDate.format('HH:mm'),\n                newValueHandler: this.checkNewValue,\n                suppressMovable: true,\n                field: nightDate.format(),\n                editable: this.colEditable, minWidth: globalWidth,\n                cellRenderer: 'animateSlide'\n            };\n            nightColDef.children.push(nightColData);\n            while (nightDate.format('HH:mm') !== '07:30') {\n                nightColData = {\n                    headerName: nightDate.add(30, 'minutes').format('HH:mm'),\n                    newValueHandler: this.checkNewValue,\n                    suppressMovable: true,\n                    field: nightDate.format(),\n                    editable: this.colEditable, minWidth: globalWidth,\n                    cellRenderer: 'animateSlide'\n                };\n                nightColDef.children.push(nightColData);\n            }\n            colDefs.push(nightColDef);\n        }\n\n        this.coldefs = colDefs;\n        return this.coldefs;\n    }\n\n    checkNewValue(params) {\n        let valueAsNumber = params.newValue\n        if (isNaN(valueAsNumber) || params.newValue == \"\") {\n            console.log(\"Invalid value \" + params.newValue + \", must be a number\");\n        } else {\n            params.data[params.colDef.field] = valueAsNumber;\n        }\n    }\n\n    public getNodeChildDetails(rowItem) {\n        if (rowItem && rowItem.maincategory) {\n            return {\n                group: true,\n                expanded: rowItem.open,\n                children: rowItem.subcategory,\n                field: 'observation',\n                key: rowItem.observation\n            };\n        } else {\n            return null;\n        }\n    }\n    \n\n    private saveChangedObservations(){\n        let changedObservations = this.flowsheetServices.getChangedObservations();\n        let effectiveDate = moment(this.observedDate,'DD/MM/YYYY h:mm a').tz(this.orgTimeZone).format();\n        if(changedObservations.length > 0){\n            this.flowsheetServices.updateFlowsheetData(this.patientData.id,this.patientData.encounterId,'vitalsigns',effectiveDate,changedObservations).subscribe(\n                data => {\n                    let responseData:any = data || {};\n                    changedObservations = [];\n                    this.flowsheetServices.setChangedObservations(changedObservations);\n                    this.modelMessage.successMessage(responseData.message);\n                },\n                error => {\n                this.modelMessage.errorMessage(error);\n                }\n            );\n        }\n    }\n\n    private onCellValueChanged($event) {\n        let changedObservations = this.flowsheetServices.getChangedObservations();\n        if((!$event.oldValue && $event.newValue !== \"\") || ($event.newValue !== \"\" && $event.oldValue !== $event.newValue && changedObservations.length == 0)){\n            let observation:any = {};\n            observation.effectiveDataTime = $event.colDef.field;\n            observation.value = $event.newValue;\n            observation.category = $event.data.category;\n            if($event.data[$event.colDef.field+\"-id\"]){\n                observation.id = $event.data[$event.colDef.field+\"-id\"];\n            }\n            changedObservations.push(observation);\n\n        }else if($event.newValue !== \"\" && $event.oldValue !== $event.newValue){\n            let observationCategoryId = $event.data.category.subCategory.id;\n            let observationIndex = changedObservations.findIndex(observation => observation.effectiveDataTime == $event.colDef.field && observation.category.subCategory.id == observationCategoryId);\n            if(observationIndex !== -1 && changedObservations[observationIndex].value !== $event.newValue){\n                changedObservations[observationIndex].value = $event.newValue;\n            }else{\n                let observation:any = {};\n                observation.effectiveDataTime = $event.colDef.field;\n                observation.value = $event.newValue;\n                observation.category = $event.data.category;\n                if($event.data[$event.colDef.field+\"-id\"]){\n                    observation.id = $event.data[$event.colDef.field+\"-id\"];\n                }\n                changedObservations.push(observation);\n            } \n        }\n        console.log('changedObservations:'+JSON.stringify(changedObservations));\n        this.flowsheetServices.setChangedObservations(changedObservations);\n    }\n\n    onGridReady(params) {\n        this.gridOptions.api.sizeColumnsToFit();\n        this.getSocket();\n    }\n\n    ngOnInit() {\n        this.flowsheetServices.getFlowSheetData(this.patientData.id,\"vitalsigns\").subscribe(\n            data => {\n                this.flowsheetData = data;\n                this.flowsheetData.sort((first, second) => {\n                    let firstDateTime: any = moment(first.observedDate)\n                    let secondDateTime: any = moment(second.observedDate)\n                    return secondDateTime - firstDateTime;\n                })\n                this.gridOptions = <GridOptions>{};\n                this.gridOptions.defaultColDef = {};\n                this.gridOptions.defaultColDef.enableCellChangeFlash = true;\n                this.gridOptions.rowData = this.flowsheetData[0].observationData[0].subcategory;\n                this.observedDate = moment(this.flowsheetData[0].observedDate).format('DD/MM/YYYY h:mm a');\n                this.gridOptions.columnDefs = this.createColumnDefs(this.flowsheetData[0].observedDate);\n                this.startGrid = true;\n                this.loading = false;\n                this.setDisableButton();\n            },\n            error => {\n                console.log(error)\n            }  \n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_flowsheet/patient.vitals.flowsheet.component.ts","/**\n * This barrel file provides the export for the shared NavbarComponent.\n */\nexport * from './patient.vitals_graphs.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_graphs/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_graphs/patient.vitals_graphs.component.css\n// module id = ../../../../../src/app/patient_vitals_graphs/patient.vitals_graphs.component.css\n// module chunks = 0","module.exports = \"<div class=\\\"box box-info labs-box\\\">\\n    <div class=\\\"box-header with-border\\\">\\n        <h3 class=\\\"box-title\\\">Vitals Graphs</h3>\\n    </div>\\n    <div class=\\\"box-body\\\">\\n        <h1>PatientVitalsGraphsComponent</h1>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_graphs/patient.vitals_graphs.component.html\n// module id = ../../../../../src/app/patient_vitals_graphs/patient.vitals_graphs.component.html\n// module chunks = 0","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n    moduleId: module.id,\n    selector: 'patient-vitals-graphs',\n    templateUrl: 'patient.vitals_graphs.component.html',\n    styleUrls: ['patient.vitals_graphs.component.css'],\n})\n\nexport class PatientVitalsGraphsComponent implements OnInit {\n\n    constructor(private router: Router) { }\n\n    ngOnInit() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patient_vitals_graphs/patient.vitals_graphs.component.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './patients.details.component';\nexport * from './patients.details.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_details/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".dummy-patient-bp-img {\\n    overflow-x: auto;\\n}\\n\\n.patient-details .dr-group-name {\\n    text-align: right;\\n    margin-right: 5px;\\n    color: #555;\\n}\\n\\n.sub-page-header span {\\n    font-size: 15px;\\n    font-weight: normal;\\n    color: #999;\\n}\\n\\n.patient-details .widget-user .widget-user-header {\\n    padding: 20px;\\n}\\n\\n.patient-details .widget-user .widget-user-username,\\n.patient-details .widget-user .widget-user-desc {\\n    margin-left: 0;\\n}\\n\\n.patient-details .widget-user .widget-user-username .widget-user-desc {\\n    margin-left: 20px;\\n    font-size: 20px;\\n    color: #eee;\\n}\\n\\n.patient-details .widget-sub-head {\\n    font-weight: 300;\\n}\\n\\n@media (max-width: 943px) {\\n    .patient-details .widget-user .widget-user-username .widget-user-desc {\\n        display: block;\\n        margin-left: 0;\\n        margin-top: 10px;\\n    }\\n}\\n\\n.patient-details .widget-user .action-buttons {\\n    margin-top: 15px;\\n}\\n\\n.patient-details .widget-user .action-buttons .toggle-btn {\\n    text-align: right;\\n    display: inline-block;\\n}\\n\\n.patient-details .widget-user .widget-user-header {\\n    height: auto;\\n}\\n\\n.patient-details .widget-user .widget-user-image {\\n    top: 10px;\\n    left: 100%;\\n    margin-left: -135px;\\n}\\n\\n.patient-details .widget-user .widget-user-image>img {\\n    width: 125px;\\n}\\n\\n.patient-details .widget-user .box-footer {\\n    padding-top: 10px;\\n}\\n\\n.patient-details .action-buttons a {\\n    display: inline-block;\\n    margin-right: 20px;\\n    color: #fff;\\n}\\n\\n.patient-details .widget-user-header a {\\n    color: #fff;\\n}\\n\\n.patient-details .widget-user-header a.active,\\n.patient-details .widget-user-header a.active {\\n    color: #000;\\n}\\n\\n.patient-details .action-buttons a:hover {\\n    color: #ccc;\\n}\\n\\n.patient-details .action-buttons a i {\\n    font-size: 16px;\\n}\\n\\n.patient-details .card-list-key {\\n    display: inline-block;\\n    width: 90px;\\n    color: #666;\\n}\\n\\n.patient-details .card-list-value,\\n.patient-details .breadcrumb,\\n.patient-details .top-action-buttons {\\n    display: inline-block;\\n}\\n\\n.patient-details .box-widget {\\n    border: solid 1px #7fdff7;\\n}\\n\\n.patient-details textarea {\\n    resize: vertical;\\n    height: 75px;\\n}\\n\\n.patient-details .align-right {\\n    text-align: right;\\n}\\n\\n.patient-details .toggle-btn {\\n    display: inline-block;\\n    margin-right: 10px;\\n}\\n\\n.patient-details .box-footer {\\n    padding-right: 0;\\n}\\n\\n.patient-details .box-comment {\\n    padding-right: 10px;\\n}\\n\\n.patient-details .box-footer form {\\n    margin-bottom: -5px;\\n}\\n\\n.patient-details .box-footer .btn {\\n    margin-left: 10px;\\n}\\n\\n.patient-details .error {\\n    color: #f60;\\n}\\n\\n.patient-details .success {\\n    color: #479702;\\n}\\n\\n.dischargeConfirmPopUp strong {\\n    font-size: 18px;\\n}\\n\\n.patient-details .patient-vitals .btn-group {\\n    margin-right: 20px;\\n}\\n\\n.patient-details .patient-vitals .current-time {\\n    font-size: 18px;\\n}\\n\\n.patient-details .patient-vitals .vitals-table {\\n    position: relative;\\n}\\n\\n.patient-details .vitals-head {\\n    display: inline-block;\\n    width: 170px;\\n    position: absolute;\\n}\\n\\n.patient-details .vitals-head table tr {\\n    height: 45px;\\n}\\n\\n.patient-details .vitals-body {\\n    display: inline-block;\\n    overflow-x: auto;\\n    width: calc(100% - 170px);\\n    margin-left: 170px;\\n    height: 295px;\\n}\\n\\n.patient-details .vitals-body ul {\\n    width: 100%x;\\n    display: block;\\n    white-space: nowrap;\\n    font-size: 0;\\n    padding: 0;\\n}\\n\\n.patient-details .vitals-body ul>li {\\n    display: inline-block;\\n    vertical-align: top;\\n}\\n\\n.patient-details .vitals-body ul>li ol {\\n    padding: 0;\\n}\\n\\n.patient-details .vitals-body ul>li ol li {\\n    display: block;\\n    vertical-align: top;\\n    font-size: 16px;\\n    height: 45px;\\n    border: 1px solid #f4f4f4;\\n    width: 90px;\\n}\\n\\n.patient-details .vitals-body ul>li ol li input {\\n    width: 80px;\\n}\\n\\n.patient-details .vitals-body ul li ol li span {\\n    display: inline-block;\\n    padding: 7px 10px;\\n}\\n\\n.patient-details .user-action-device {\\n    background-color: #00a7d0 !important;\\n    padding: 10px;\\n    position: absolute;\\n    top: 0px;\\n    right: 0px;\\n    width: 250px;\\n    float: right;\\n    z-index: 99995;\\n}\\n\\n.patient-details .user-action-device a {\\n    display: block;\\n    padding: 5px;\\n    color: #fff;\\n}\\n\\n.patient-details .user-action-device a i {\\n    margin-right: 10px;\\n}\\n\\n.patient-action-buttons a {\\n    margin-left: 10px;\\n}\\n\\n.patient-action-buttons a i {\\n    font-size: 25px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_details/patients.details.component.css\n// module id = ../../../../../src/app/patients_details/patients.details.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header patient-details\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6\\\">\\n            <h1 class=\\\"sub-page-header\\\">\\n                Patient Summary <span>({{currentTabName}})</span>\\n            </h1>\\n        </div>\\n        <div class=\\\"col-sm-6 text-align-right\\\">\\n            <ol class=\\\"breadcrumb text-align-right\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li><a (click)=\\\"routePatients()\\\"><i class=\\\"fa fa-users\\\"></i> Patients</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-info\\\"></i> Patient Details</li>\\n            </ol>\\n            <div class=\\\"top-action-buttons text-align-right\\\">\\n                <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"routePatients()\\\" class=\\\"btn bg-default\\\" title=\\\"Back\\\"><i class=\\\"fa fa-arrow-left\\\"></i></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n<section class=\\\"patient-details\\\">\\n    <div class=\\\"loading-spinner\\\" *ngIf=\\\"loading\\\"></div>\\n    <div *ngIf=\\\"!loading\\\">\\n        <div class=\\\"row row-eq-height\\\">\\n            <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12\\\">\\n                <div class=\\\"box box-widget widget-user\\\" *ngFor=\\\"let patient of patients\\\">\\n                    <div class=\\\"widget-user-header bg-aqua-active\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-sm-6\\\">\\n                                <h3 class=\\\"widget-user-username\\\">\\n                                    {{patient.name}}\\n                                    <span class=\\\"widget-user-desc\\\">\\n                                        <i aria-hidden=\\\"true\\\" *ngIf=\\\"patient.gender == 'Male'\\\"></i>\\n                                        <i aria-hidden=\\\"true\\\" *ngIf=\\\"patient.gender == 'Female'\\\"></i>\\n                                        <i aria-hidden=\\\"true\\\" *ngIf=\\\"patient.gender != 'Male' && patient.gender != 'Female'\\\"></i>\\n                                        {{patient.gender}} / {{patient.age}} / {{patient.phoneNumber}}\\n                                    </span>\\n                                </h3>\\n                            </div>\\n                            <div class=\\\"col-sm-6 align-right patient-action-buttons\\\">\\n                                <a [ngClass]=\\\"{active: currentTab==='summary'}\\\" (click)=\\\"changeCurrentTab('summary')\\\" title=\\\"Clinical Summary\\\">\\n                                    <i class=\\\"fa fa-book\\\" aria-hidden=\\\"true \\\"></i>\\n                                </a>\\n                                <a [ngClass]=\\\"{active: currentTab==='clinical'}\\\" (click)=\\\"changeCurrentTab('clinical')\\\" title=\\\"Clinical Documentation\\\">\\n                                    <i class=\\\"fa fa-user-md\\\" aria-hidden=\\\"true \\\"></i>\\n                                </a>\\n                                <a [ngClass]=\\\"{active: currentTab==='nursing'}\\\" (click)=\\\"changeCurrentTab('nursing')\\\" title=\\\"Nursing Care\\\">\\n                                    <i class=\\\"fa fa-align-justify\\\" aria-hidden=\\\"true \\\"></i>\\n                                </a>\\n                                <a title=\\\"Camera\\\">\\n                                    <i class=\\\"fa fa-video-camera\\\" aria-hidden=\\\"true\\\"></i>\\n                                </a>\\n                                <div class=\\\"toggle-btn\\\">\\n                                    <a (click)=\\\"toggleMoreData(true)\\\" *ngIf=\\\"toggleMore\\\">\\n                                        <i class=\\\"fa fa-chevron-down\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </a>\\n                                    <a (click)=\\\"toggleMoreData(false)\\\" *ngIf=\\\"!toggleMore\\\">\\n                                        <i class=\\\"fa fa-chevron-up\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </a>\\n                                </div>\\n                                <a href=\\\"javascript:;\\\" class=\\\"visible-xs visible-sm visible-md hide\\\" (click)=\\\"clickActionDevice()\\\"><i class=\\\"fa fa-bars\\\" aria-hidden=\\\"true\\\"></i></a>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"action-buttons widget-user-desc visible-lg hide\\\">\\n                            <div class=\\\"row\\\">\\n                                <div class=\\\"col-md-11\\\">\\n                                    <!--<a (click)=\\\"clickFavPatient(patient.id)\\\" *ngIf=\\\"roleFavPatientAccess\\\">\\n                                        <i class=\\\"fa fa-star-o\\\" aria-hidden=\\\"true\\\" title=\\\"Favorite Patient\\\"></i> VIP\\n                                    </a>-->\\n                                    <a (click)=\\\"clickCamera(patient.cameraName)\\\" *ngIf=\\\"roleCameraAccess\\\">\\n                                        <i class=\\\"fa fa-video-camera \\\" aria-hidden=\\\"true \\\" title=\\\"Zoom call \\\"></i> Call\\n                                    </a>\\n                                    <a [ngClass]=\\\"{active: currentTab==='clinical'}\\\" (click)=\\\"changeCurrentTab('clinical')\\\" title=\\\"Clinical Documentation\\\">\\n                                        <i class=\\\"fa fa-book\\\" aria-hidden=\\\"true \\\"></i> Clinical Documentation\\n                                    </a>\\n                                    <!--<a [ngClass]=\\\"{active: currentTab==='clinical'}\\\" (click)=\\\"changeCurrentTab('clinical')\\\" title=\\\"Clinical Documentation\\\">\\n                                        <i class=\\\"fa fa-book\\\" aria-hidden=\\\"true \\\"></i> Clinical Documentation\\n                                    </a>-->\\n                                    <a (click)=\\\"clickEdit(patient.id)\\\" *ngIf=\\\"rolePatientWrite\\\" title=\\\"Edit \\\">\\n                                        <i class=\\\"fa fa-pencil \\\" aria-hidden=\\\"true \\\"></i> Edit\\n                                    </a>\\n                                    <a [ngClass]=\\\"{active: currentTab==='summary'}\\\" (click)=\\\"changeCurrentTab('summary')\\\" title=\\\"Summary\\\">\\n                                        <i class=\\\"fa fa-align-justify\\\" aria-hidden=\\\"true \\\"></i> Clinical Summary\\n                                    </a>\\n                                    <a [ngClass]=\\\"{active: currentTab==='blood'}\\\" (click)=\\\"changeCurrentTab('blood')\\\" title=\\\"blood\\\">\\n                                        <i class=\\\"fa fa-tint\\\" aria-hidden=\\\"true \\\"></i> Blood Transfusion\\n                                    </a>\\n                                    <a [ngClass]=\\\"{active: currentTab==='flowsheet'}\\\" (click)=\\\"changeCurrentTab('flowsheet')\\\" title=\\\"Vitals\\\">\\n                                        <i class=\\\"fa fa-table\\\" aria-hidden=\\\"true \\\"></i> Vitals\\n                                    </a>\\n                                    <a [ngClass]=\\\"{active: currentTab==='fluidio'}\\\" (click)=\\\"changeCurrentTab('fluidio')\\\" title=\\\"Fluid I/O\\\">\\n                                        <i class=\\\"fa fa-table\\\" aria-hidden=\\\"true \\\"></i> Fluid I/O\\n                                    </a>\\n                                    <!--<a [ngClass]=\\\"{active: currentTab==='labs'}\\\" (click)=\\\"changeCurrentTab('labs')\\\" title=\\\"Labs\\\">\\n                                        <i class=\\\"fa fa-flask\\\" aria-hidden=\\\"true \\\"></i> Labs\\n                                    </a>-->\\n                                    <a [ngClass]=\\\"{active: currentTab==='labs'}\\\" title=\\\"Labs\\\">\\n                                        <i class=\\\"fa fa-flask\\\" aria-hidden=\\\"true \\\"></i> Labs\\n                                    </a>\\n                                    <!--<a [ngClass]=\\\"{active: currentTab==='checklist'}\\\" (click)=\\\"changeCurrentTab('checklist')\\\" title=\\\"Checklist\\\">\\n                                        <i class=\\\"fa fa-list-ul\\\" aria-hidden=\\\"true \\\"></i> Checklist\\n                                    </a>-->\\n                                    <a [ngClass]=\\\"{active: currentTab==='checklist'}\\\" title=\\\"Checklist\\\">\\n                                        <i class=\\\"fa fa-list-ul\\\" aria-hidden=\\\"true \\\"></i> Checklist\\n                                    </a>\\n                                    <!--<a [ngClass]=\\\"{active: currentTab==='team'}\\\" (click)=\\\"currentTab='team'\\\" title=\\\"team\\\">\\n                                        <i class=\\\"fa fa-users\\\" aria-hidden=\\\"true \\\"></i> Consulting Team\\n                                    </a>-->\\n                                    <!--<a [ngClass]=\\\"{active: currentTab==='discharge'}\\\" (click)=\\\"changeCurrentTab('discharge')\\\" title=\\\"Discharge Summary\\\">\\n                                        <i class=\\\"fa fa-flag\\\" aria-hidden=\\\"true \\\"></i> Discharge Summary\\n                                    </a>-->\\n                                    <a [ngClass]=\\\"{active: currentTab==='discharge'}\\\" (click)=\\\"changeCurrentTab('discharge')\\\" title=\\\"Discharge Summary\\\">\\n                                        <i class=\\\"fa fa-flag\\\" aria-hidden=\\\"true \\\"></i> Discharge Summary\\n                                    </a>\\n                                    <a (click)=\\\"clickDischargeConfirm()\\\" *ngIf=\\\"rolePatientWrite\\\" title=\\\"Delete \\\">\\n                                        <i class=\\\"fa fa-sign-{{patientStatusIcon}} \\\" aria-hidden=\\\"true \\\"></i> {{patientStatusAction}}\\n                                    </a>\\n                                </div>\\n                                <div class=\\\"col-md-1\\\">\\n                                    <div class=\\\"toggle-btn\\\">\\n                                        <a (click)=\\\"toggleMoreData(true)\\\" *ngIf=\\\"toggleMore\\\">\\n                                            <i class=\\\"fa fa-chevron-down\\\" aria-hidden=\\\"true\\\"></i>\\n                                        </a>\\n                                        <a (click)=\\\"toggleMoreData(false)\\\" *ngIf=\\\"!toggleMore\\\">\\n                                            <i class=\\\"fa fa-chevron-up\\\" aria-hidden=\\\"true\\\"></i>\\n                                        </a>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"user-action-device\\\" *ngIf=\\\"userActionDevice\\\">\\n                            <a (click)=\\\"clickCamera(patient.cameraName)\\\" *ngIf=\\\"roleCameraAccess\\\">\\n                                <i class=\\\"fa fa-video-camera \\\" aria-hidden=\\\"true \\\" title=\\\"Zoom call \\\"></i> Call\\n                            </a>\\n                            <a [ngClass]=\\\"{active: currentTab==='clinical'}\\\" (click)=\\\"changeCurrentTab('clinical')\\\" title=\\\"Clinical Documentation\\\">\\n                                <i class=\\\"fa fa-book\\\" aria-hidden=\\\"true \\\"></i> Clinical Documentation\\n                            </a>\\n                            <a (click)=\\\"clickEdit(patient.id)\\\" *ngIf=\\\"rolePatientWrite\\\" title=\\\"Edit \\\">\\n                                <i class=\\\"fa fa-pencil \\\" aria-hidden=\\\"true \\\"></i> Edit\\n                            </a>\\n                            <a [ngClass]=\\\"{active: currentTab==='summary'}\\\" (click)=\\\"changeCurrentTab('summary')\\\" title=\\\"Summary\\\">\\n                                <i class=\\\"fa fa-align-justify\\\" aria-hidden=\\\"true \\\"></i> Clinical Summary\\n                            </a>\\n                            <a [ngClass]=\\\"{active: currentTab==='blood'}\\\" (click)=\\\"changeCurrentTab('blood')\\\" title=\\\"blood\\\">\\n                                <i class=\\\"fa fa-tint\\\" aria-hidden=\\\"true \\\"></i> Blood Transfusion\\n                            </a>\\n                            <a [ngClass]=\\\"{active: currentTab==='flowsheet'}\\\" (click)=\\\"changeCurrentTab('flowsheet')\\\" title=\\\"Vitals\\\">\\n                                <i class=\\\"fa fa-table\\\" aria-hidden=\\\"true \\\"></i> Vitals\\n                            </a>\\n                            <a [ngClass]=\\\"{active: currentTab==='fluidio'}\\\" (click)=\\\"changeCurrentTab('fluidio')\\\" title=\\\"Fluid I/O\\\">\\n                                <i class=\\\"fa fa-table\\\" aria-hidden=\\\"true \\\"></i> Fluid I/O\\n                            </a>\\n                            <a [ngClass]=\\\"{active: currentTab==='labs'}\\\" title=\\\"Labs\\\">\\n                                <i class=\\\"fa fa-flask\\\" aria-hidden=\\\"true \\\"></i> Labs\\n                            </a>\\n                            <a [ngClass]=\\\"{active: currentTab==='checklist'}\\\" title=\\\"Checklist\\\">\\n                                <i class=\\\"fa fa-list-ul\\\" aria-hidden=\\\"true \\\"></i> Checklist\\n                            </a>\\n                            <a [ngClass]=\\\"{active: currentTab==='discharge'}\\\" (click)=\\\"changeCurrentTab('discharge')\\\" title=\\\"Discharge Summary\\\">\\n                                <i class=\\\"fa fa-flag\\\" aria-hidden=\\\"true \\\"></i> Discharge Summary\\n                            </a>\\n                            <a (click)=\\\"clickDischargeConfirm()\\\" *ngIf=\\\"rolePatientWrite\\\" title=\\\"Delete \\\">\\n                                <i class=\\\"fa fa-sign-{{patientStatusIcon}} \\\" aria-hidden=\\\"true \\\"></i> {{patientStatusAction}}\\n                            </a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"box-footer\\\" *ngIf=\\\"!toggleMore\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-4\\\">\\n                                <ul class=\\\"nav nav-stacked \\\">\\n                                    <li><a><span class=\\\"card-list-key \\\">Hospital</span><span class=\\\"card-list-value \\\">: {{patient.hospitalName}}</span></a></li>\\n                                    <li><a><span class=\\\"card-list-key \\\">Department </span><span class=\\\"card-list-value \\\">: {{patient.department}}</span></a></li>\\n                                    <li><a><span class=\\\"card-list-key \\\">MRN </span><span class=\\\"card-list-value \\\">: {{patient.mrn}}</span></a></li>\\n                                    <li><a><span class=\\\"card-list-key \\\">Bed</span><span class=\\\"card-list-value \\\">: {{patient.bedName}}</span></a></li>\\n                                    <li><a><span class=\\\"card-list-key \\\">IPN</span><span class=\\\"card-list-value \\\">: {{patient.ipno}}</span></a></li>\\n                                </ul>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <ul class=\\\"nav nav-stacked \\\">\\n                                    <!--<li><a><span class=\\\"card-list-key \\\">Last Seen</span><span class=\\\"card-list-value \\\">: {{patient.lastSeen | date:'medium'}}</span></a></li>-->\\n                                    <li><a><span class=\\\"card-list-key \\\">DoB</span><span class=\\\"card-list-value \\\">: {{patient.dateOfBirth | date}}</span></a></li>\\n                                    <li><a><span class=\\\"card-list-key \\\">Phone #</span><span class=\\\"card-list-value \\\">: {{patient.phoneNumber}}</span></a></li>\\n                                    <li><a><span class=\\\"card-list-key \\\">Email Id</span><span class=\\\"card-list-value \\\">: {{patient.emailId}}</span></a></li>\\n                                    <li><a><span class=\\\"card-list-key \\\">Address</span><span class=\\\"card-list-value \\\">: {{patient.addressline}}</span></a></li>\\n                                </ul>\\n                            </div>\\n                            <div class=\\\"col-md-4\\\">\\n                                <ul class=\\\"nav nav-stacked \\\">\\n                                    <li><a><span class=\\\"card-list-key \\\">City  </span><span class=\\\"card-list-value \\\">: {{patient.city  }}</span></a></li>\\n                                    <li><a><span class=\\\"card-list-key \\\">State</span><span class=\\\"card-list-value \\\">: {{patient.state}}</span></a></li>\\n                                    <li><a><span class=\\\"card-list-key \\\">Pin</span><span class=\\\"card-list-value \\\">: {{patient.pin}}</span></a></li>\\n                                    <li><a><span class=\\\"card-list-key \\\">Status</span><span class=\\\"card-list-value \\\">: {{patient.status}}</span></a></li>\\n                                </ul>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row row-eq-height\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div *ngIf=\\\"currentTab === 'summary'\\\">\\n                    <patient-summary [patientData]=\\\"patientFhirData\\\" [practitioner]=\\\"practitionerData\\\"></patient-summary>\\n                </div>\\n                <div *ngIf=\\\"currentTab === 'clinical'\\\">\\n                    <patient-clinical-document [patientName]='patientData' [patientData]='patientFhirData' [practitionerData]=\\\"practitionerData\\\"></patient-clinical-document>\\n                </div>\\n                <div *ngIf=\\\"currentTab === 'nursing'\\\">\\n                    <patient-nursing-document [patientData]=\\\"patientFhirData\\\" [practitionerData]=\\\"practitionerData\\\"></patient-nursing-document>\\n                </div>\\n                <!-- <div *ngIf=\\\"currentTab === 'blood'\\\">\\n                    <patient-blood-transfusion [patientData]='patientFhirData' (navigateEvent)=\\\"handleNavigateEvent($event)\\\"></patient-blood-transfusion>\\n                </div>\\n                <div *ngIf=\\\"currentTab === 'flowsheet'\\\">\\n                    <patient-flow-sheet [patientFhirData]='patientFhirData' [flowSheetData]='flowSheetData' (navigateEvent)=\\\"handleNavigateEvent($event)\\\"></patient-flow-sheet>\\n                </div>\\n                <div *ngIf=\\\"currentTab === 'fluidio'\\\">\\n                    fluidio\\n                </div> -->\\n                <!--<div *ngIf=\\\"currentTab === 'labs'\\\">\\n                    <patient-labs></patient-labs>\\n                </div>-->\\n                <!--<div *ngIf=\\\"currentTab === 'checklist'\\\">\\n                    <patient-checklist></patient-checklist>\\n                </div>-->\\n                <!--<div *ngIf=\\\"currentTab === 'team'\\\">\\n                    <patient-consulting-team></patient-consulting-team>\\n                </div>-->\\n                <!-- <div *ngIf=\\\"currentTab === 'discharge'\\\">\\n                    <patient-discharge-summary></patient-discharge-summary>\\n                </div> -->\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n<!-- Delete Modal -->\\n<div class=\\\"modal dischargeConfirmPopUp\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"clickClosePopup('dischargeConfirmPopUp')\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Patient Discharge Confirmation</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you sure you want to discharge Patient <strong>{{dischargePatientname}}</strong>?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" (click)=\\\"clickClosePopup('dischargeConfirmPopUp')\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                <button type=\\\"button\\\" (click)=\\\"clickChangeStatus()\\\" class=\\\"btn btn-primary\\\">Discharge</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n<!-- Flowsheet data save  Modal -->\\n<div class=\\\"modal flowsheetDataSavePopUp\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"clickClosePopup('flowsheetDataSavePopUp')\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                <h4 class=\\\"modal-title\\\">Flowsheet Data Save</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Save the updated flowsheet data\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" (click)=\\\"saveFlowsheetData()\\\" class=\\\"btn btn-primary\\\">Save</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_details/patients.details.component.html\n// module id = ../../../../../src/app/patients_details/patients.details.component.html\n// module chunks = 0","import { Component, OnInit, OnDestroy, Input, Output, EventEmitter } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationStart } from '@angular/router';\nimport { Observable } from 'rxjs/Rx';\nimport { FormGroup, FormControl, FormBuilder, Validators, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BedServices } from '../services/presence/bed.services';\nimport { DepartmentServices } from '../services/presence/department.services';\nimport { HospitalServices } from '../services/presence/hospital.services';\nimport { PatientServices } from '../services/presence/patient.services';\nimport { CameraServices } from '../services/presence/camera.services';\nimport { MeetingServices } from '../services/presence/meeting.services';\nimport { UserServices } from '../services/presence/user.services';\nimport { RoleServices } from '../services/presence/role.services';\nimport { FhirServices } from '../services/fhir/fhir.services';\nimport { PractitionerServices } from '../services/fhir/practitioner.services';\nimport { FlowsheetServices } from '../services/fhir/flowsheet.services';\nimport { NurseServices } from '../services/fhir/nurse.services';\nimport { NotesServices } from '../services/presence/notes.services';\nimport { ModelMessage } from '../model_message/model.message';\nimport * as moment from 'moment';\n\n@Component({\n    moduleId: module.id,\n    selector: 'patients-details',\n    templateUrl: 'patients.details.component.html',\n    styleUrls: ['patients.details.component.css']\n})\n\nexport class PatientsDetailsComponent implements OnInit, OnDestroy {\n\n    id: any;\n    private patientDetailsRouting: any;\n    patientData: any;\n    allHospitals: any;\n    allBeds: any;\n    allDepartments: any;\n    allCameras: any;\n    patients: any[] = [];\n    notesData: any;\n    consultantsData: any;\n    notes: any[] = [];\n    enteryPatientNotes: string;\n    notePatientID: string;\n    patientFhirData : any;\n    flowSheetData : any;\n    noteStartTime: any = new Date();\n    noteHospitalId: string;\n    consultantID: string;\n    fhirHospitalId: string;\n    adminView: boolean = false;\n    errorMessage: string = '';\n    successMessage: string = '';\n    rolePatientWrite: boolean = false;\n    roleFavPatientAccess: boolean = true;\n    roleCameraAccess: boolean = false;\n    roleNoteWrite: boolean = false;\n    roleNoteRead: boolean = false;\n    loading: boolean = true;\n    patientStatus: string;\n    patientStatusAction: string;\n    patientStatusIcon: string = 'out';\n    dischargePatientname: string;\n    currentTime: any;\n    litalsList: any[] = [];\n    navigateUrl: string;\n    routerSubscription: any;\n    isRouterChange: boolean = false;\n    isTabchange: boolean = false;\n    changedTabName: string;\n    practitioners: any;\n    nurse: any;\n    practitionerData: any;\n    userActionDevice: boolean = false;\n    currentTabName: string = 'Clinical Summary';\n    editTime: any;\n    toggleMore: boolean = true;\n    currentTab: string = 'summary';\n\n    constructor(private router: Router, private route: ActivatedRoute, private roleServices: RoleServices, private bedServices: BedServices, \n                       private departmentServices: DepartmentServices, private hospitalServices: HospitalServices, private patientServices:PatientServices, \n                       private cameraServices: CameraServices,private meetingServices: MeetingServices,private notesServices: NotesServices, \n                       private userServices: UserServices,  private fhirServices: FhirServices,  private practitionerServices: PractitionerServices,\n                       private flowsheetServices: FlowsheetServices,private nurseServices: NurseServices, \n                       private modelMessage: ModelMessage, private fb: FormBuilder) { }\n\n    \n    handleNavigateEvent(eventData){\n        this.currentTab = eventData;\n    }\n\n    preparePatientData() {\n        if (this.patientData.status === 'Admitted') {\n            this.patientStatusAction = 'Discharge';\n            this.patientStatusIcon = 'out';\n        } else {\n            this.patientStatusAction = 'Re-admitte';\n            this.patientStatusIcon = 'in';\n        }\n        let birthdate = moment(this.patientData.dateOfBirth).format('MM/DD/YYYY');\n        let age  = this.getAge(birthdate);\n        let data = {\n            id: this.patientData.id,\n            name: this.patientData.name,\n            dateOfBirth: this.patientData.dateOfBirth,\n            maritialStatus: this.patientData.maritialStatus,\n            ipno: this.patientFhirData.ipn,\n            gender: this.patientData.gender,\n            mrn: this.patientData.mrn,\n            lastSeen: this.patientData.lastSeen,\n            age: age,\n            phoneNumber: this.patientData.phoneNumber,\n            emailId: this.patientData.emailId,\n            addressline: this.patientData.addressline,\n            city: this.patientData.city,\n            state: this.patientData.state,\n            pin: this.patientData.pin,\n            status: this.patientData.status,\n            hospitalName: '',\n            bedName: '',\n            cameraName: '',\n            department: this.allDepartments.name\n\n        };\n        console.log(data);\n        this.allHospitals.forEach(currentHospital => {\n            if (currentHospital.id === this.patientData.hospitalId) {\n                data.hospitalName = currentHospital.name;\n            }\n        });\n        this.allBeds.forEach(currentBed => {\n            if (currentBed.id === this.patientData.bedId) {\n                data.bedName = currentBed.name;\n                this.allCameras.forEach(currentCamera => {\n                    if (currentCamera.id === currentBed.cameraId) {\n                        data.cameraName = currentCamera.name;\n                    }\n                });\n            }\n        });\n        this.patients.push(data);\n        // this.getPatientFlowSheetData();\n        this.loading = false;\n    }\n\n    getPatientFlowSheetData(){\n        var admittedDate = moment(this.patientFhirData.admittedDate.split('T')[0]);\n        this.flowsheetServices.getFlowSheetData(this.patientFhirData.id,admittedDate.format('YYYY-MM-DD')).subscribe(\n            data => {\n               this.flowSheetData = data;\n               this.loading = false;\n            },\n            error => {\n              this.modelMessage.errorMessage(error.json());\n              this.router.navigate(['/patients']);\n            }\n        );\n        \n    }\n\n    getAge(dateString) {\n        let now : any = new Date();\n        let today : any = new Date(now.getYear(),now.getMonth(),now.getDate());\n\n        let yearNow = now.getYear();\n        let monthNow = now.getMonth();\n        let dateNow = now.getDate();\n\n        let dob : any = new Date(dateString.substring(6,10),\n                            dateString.substring(0,2)-1,                   \n                            dateString.substring(3,5)                  \n                            );\n\n        let yearDob = dob.getYear();\n        let monthDob = dob.getMonth();\n        let dateDob = dob.getDate();\n        let age : any;\n        let ageString = \"\";\n        let yearString = \"\";\n        let monthString = \"\";\n        let dayString = \"\";\n        let monthAge : any;\n        let dateAge : any;\n\n\n        let yearAge = yearNow - yearDob;\n\n        if (monthNow >= monthDob)\n\n            monthAge = monthNow - monthDob;\n        else {\n            yearAge--;\n            monthAge = 12 + monthNow -monthDob;\n        }\n\n        if (dateNow >= dateDob)\n            dateAge = dateNow - dateDob;\n        else {\n            monthAge--;\n            dateAge = 31 + dateNow - dateDob;\n\n            if (monthAge < 0) {\n            monthAge = 11;\n            yearAge--;\n            }\n        }\n\n        age = {\n            years: yearAge,\n            months: monthAge,\n            days: dateAge\n            };\n\n        if ( age.years > 1 ) yearString = \" years\";\n        else yearString = \" year\";\n        if ( age.months> 1 ) monthString = \" months\";\n        else monthString = \" month\";\n        if ( age.days > 1 ) dayString = \" days\";\n        else dayString = \" day\";\n\n\n        if ( (age.years > 0) && (age.months > 0) && (age.days > 0) )\n            ageString = age.years + yearString;\n        else if ( (age.years == 0) && (age.months == 0) && (age.days > 0) )\n            ageString = age.days + dayString;\n        else if ( (age.years > 0) && (age.months == 0) && (age.days == 0) )\n            ageString = age.years + yearString;\n        else if ( (age.years > 0) && (age.months > 0) && (age.days == 0) )\n            ageString = age.years + yearString;\n        else if ( (age.years == 0) && (age.months > 0) && (age.days > 0) )\n            ageString = age.months + monthString + \" and \" + age.days + dayString;\n        else if ( (age.years > 0) && (age.months == 0) && (age.days > 0) )\n            ageString = age.years + yearString;\n        else if ( (age.years == 0) && (age.months > 0) && (age.days == 0) )\n            ageString = age.months + monthString;\n        else ageString = \"-\";\n\n        return ageString;\n    }\n\n\n\n    getCamaras() {\n        this.cameraServices.getAllCameras().subscribe(\n            data => {\n                this.allCameras = data;\n                this.preparePatientData();\n            },\n            error => {\n                console.log(error);\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    getDepartments() {\n        this.departmentServices.getDepartment(this.patientData.icuId).subscribe(\n            data => {\n                this.allDepartments = data;\n                this.getCamaras();\n            },\n            error => {\n                console.log(error);\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    getBeds() {\n        this.bedServices.getAllBeds().subscribe(\n            data => {\n                this.allBeds = data;\n                this.getDepartments();\n            },\n            error => {\n                console.log(error);\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    getHospitals() {\n        this.hospitalServices.getAllHospitals().subscribe(\n            data => {\n                this.allHospitals = data;\n                this.getBeds();\n            },\n            error => {\n                console.log(error);\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    prepareNotes() {\n        this.notesData.forEach(currentNote => {\n            let consultant;\n            this.consultantsData.forEach(currentConsultant => {\n                if (currentConsultant.id === currentNote.consultantid) {\n                    consultant = currentConsultant.firstName + ' ' + currentConsultant.lastName;\n                    let notesObject = {\n                        consultantName: consultant,\n                        noteTime: currentNote.endtime,\n                        note: currentNote.details[0]\n                    };\n                    this.notes.push(notesObject);\n                }\n            });\n        });\n    }\n\n    getPatient(id) {\n        this.patientServices.getPatient(id).subscribe(\n            data => {\n                let responseData:any = data ||  {};\n                this.patientData = responseData;\n                this.noteHospitalId = responseData.hospitalId;\n                this.getHospitals();\n            },\n            error => {\n                console.log(error);\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    getAllConsultants() {\n        this.userServices.getAllUsers().subscribe(\n            data => {\n                this.consultantsData = data;\n                this.prepareNotes();\n            },\n            error => {\n                console.log(error);\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    getNotes(id) {\n        this.notesServices.getNotes(id).subscribe(\n            data => {\n                this.notesData = [];\n                this.notes = [];\n                this.notesData = data;\n                this.getAllConsultants();\n            },\n            error => {\n                console.log(error);\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    toggleMoreData(i) {\n        if (i) {\n            this.toggleMore = false;\n        } else {\n            this.toggleMore = true;\n        }\n    }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    routePatients() {\n        this.router.navigate(['/patients']);\n    }\n\n    clickEdit(id) {\n        this.router.navigate(['/patient/create/', id,'Edit']);\n    }\n\n    clickChangeStatus() {\n        if (this.patientData.status === 'Admitted') {\n            let putData = this.patientData;\n            putData.dateOfBirth = moment(putData.dateOfBirth).format('MM/DD/YYYY');\n            putData.status = 'Discharged';\n            //putData.bedId = '';\n            putData.ipno = this.patientFhirData.ipn;\n            this.patientServices.updatePatient(putData,this.patientFhirData.id,this.fhirHospitalId).subscribe(\n                data => {\n                    let msg = 'Patient ' + putData.name + ' was discharged ';\n                    this.modelMessage.successMessage(msg);\n                    this.router.navigate(['/patients']);\n                },\n                error => {\n                    let errorResponse = {status: 500, statusText: \"Failed to discharge patient\"};\n                    this.modelMessage.errorMessage(errorResponse);\n                }\n            );\n        } else {\n            this.router.navigate(['/patient/create/', this.patientData.id]);\n        }\n    }\n\n    clickDischargeConfirm() {\n        this.dischargePatientname = this.patientData.name;\n        $('.dischargeConfirmPopUp').show();\n    }\n\n    showFlowSheetDataSaveModal() {\n        $('.flowsheetDataSavePopUp').show();\n    }\n\n\n    saveFlowsheetData(){\n        this.clickClosePopup('flowsheetDataSavePopUp');\n        //show spinner\n        let changedObservations = this.fhirServices.getChangedObservations();\n        // this.flowsheetServices.updateFlowsheetData(this.patientFhirData.id,this.patientFhirData.admittedDate,changedObservations).subscribe(\n        //     data => {\n        //        //stop spinner \n        //        changedObservations = [];\n        //        let responseData:any = data || {};\n        //        this.fhirServices.setChangedObservations(changedObservations);\n        //        this.modelMessage.successMessage(responseData.message);\n        //        if(this.isRouterChange){\n        //           this.routerSubscription.unsubscribe(); \n        //           this.router.navigate([this.navigateUrl]);\n        //        }else{\n        //           this.currentTab = this.changedTabName;\n        //        }\n        //     },\n        //     error => {\n        //       //stop spinner\n        //       this.modelMessage.errorMessage(error.json());\n        //     }\n        // );\n    }\n\n    changeCurrentTab(tabName: string){\n        this.userActionDevice = false;\n        let changedObservations =  this.fhirServices.getChangedObservations();\n        if(changedObservations.length == 0){\n          this.currentTab = tabName;\n        }else{\n          this.changedTabName = tabName;  \n          this.isRouterChange = false;\n          this.isTabchange = true;  \n          this.showFlowSheetDataSaveModal();\n        }\n        if(tabName === 'summary') {\n            this.currentTabName = 'Clinical Summary';\n        } else if(tabName === 'clinical') {\n            this.currentTabName = 'Clinical Documentation';\n        } else {\n            this.currentTabName = 'Nursing Care';\n        }\n    }\n\n    clickClosePopup(popupModalName) {\n        $('.'+popupModalName).hide();\n    }\n\n    clickNotesAdd() {\n        let patientNotes = $(\"<div/>\").text(this.enteryPatientNotes).html();\n        if (patientNotes !== '') {\n            let noteObject = {\n                consultantid: this.consultantID,\n                details: [patientNotes],\n                endtime: new Date(),\n                hospitalId: this.noteHospitalId,\n                patientid: this.notePatientID,\n                starttime: this.noteStartTime,\n                status: 'ACTIVE'\n            };\n\n            this.notesServices.createNote(noteObject).subscribe(\n                data => {\n                    this.getNotes(this.notePatientID);\n                    this.successMessage = 'Note added successfully!';\n                },\n                error => {\n                    console.log(error);\n                    this.modelMessage.errorMessage(error);\n                }\n            );\n            this.enteryPatientNotes = '';\n        } else {\n            this.errorMessage = 'Please enter notes';\n        }\n    }\n\n    clickNotesReset() {\n        this.enteryPatientNotes = '';\n    }\n\n    callZoomMeeting(data) {\n        let zoomURL = JSON.parse(data._body);\n        window.open(zoomURL.startUrl, '_blank');\n    }\n\n    clickCamera(id) {\n        this.userActionDevice = false;\n        let meeting = {\n            \"hostId\": JSON.parse(sessionStorage.getItem('userData')).zoomUserId,\n            \"invitees\": [id]\n        };\n\n        this.meetingServices.createMeeting(meeting).subscribe(\n            data => {\n                this.callZoomMeeting(data);\n            },\n            error => {\n                console.log(error);\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    getPractitioner()\n    {\n         this.practitionerServices.getPractitioner(this.fhirHospitalId).subscribe(\n            data => \n            {\n                this.practitioners = data;\n            },\n            error => {\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    getNurse()\n    {\n        this.nurseServices.getNurse(this.fhirHospitalId).subscribe(\n            data => \n            {\n                this.nurse = data;\n            },\n            error => {\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    getPatientData(){\n       this.patientDetailsRouting = this.route.params.subscribe(params => {\n            if (params['id']) {\n                this.notePatientID = params['id'];\n                this.patientServices.getFhirPatientById(this.notePatientID).subscribe(\n                    data => {\n                        let responseData:any = data || {};\n                        if(responseData.id){\n                            this.patientFhirData = responseData;\n                            this.getPractitioner();\n                            // this.getNurse();\n                            this.getPatient(this.notePatientID);\n                            this.getNotes(this.notePatientID);\n                        }else{\n                            let errorResponse = {status: 500, statusText: \"Failed to get patient data\"};\n                            this.modelMessage.errorMessage(errorResponse);\n                            this.router.navigate(['/patients']);\n                        }\n                    },\n                    error => {\n                        this.modelMessage.errorMessage(error.json());\n                        this.router.navigate(['/patients']);\n                    }  \n                );    \n            }\n        });\n    }\n\n    clickActionDevice() {\n        this.userActionDevice = !this.userActionDevice;\n    }\n\n    ngOnInit() {\n        this.currentTime = Observable.interval(1000).map(x => new Date()).share();\n        let userData = JSON.parse(sessionStorage.getItem('userData'));\n        this.fhirHospitalId = sessionStorage.getItem('fhirHospitalId');\n        this.consultantID = userData.id;\n        if(userData.userType === \"HOSPITAL_DOCTOR\" || userData.userType === \"HOSPITAL_NURSE\"){\n           this.practitionerServices.getPractitionerByIdentifier(userData.id).subscribe(\n               data => {\n                    this.practitionerData = data;\n                    this.getPatientData();\n               },\n               error => {\n                    this.modelMessage.errorMessage(error.json());\n                    this.router.navigate(['/patients']);\n               }\n           );\n        }else{\n           this.getPatientData();\n        }\n\n        let userPatientRole = this.roleServices.getRole('patient');\n        if (userPatientRole.write) {\n            this.rolePatientWrite = true;\n        }\n        let meetingRole = this.roleServices.getRole('meeting');\n        if (meetingRole.write) {\n            this.roleCameraAccess = true;\n        }\n        let userNotesRole = this.roleServices.getRole('notes');\n        if (userNotesRole.write) {\n            this.roleNoteWrite = true;\n        }\n        if (userNotesRole.read) {\n            this.roleNoteRead = true;\n        }\n\n        this.routerSubscription = this.router.events\n        .filter(event => event instanceof NavigationStart)\n        .subscribe((event) => {\n            let responseEvent:any = event;\n            this.navigateUrl = responseEvent.url;\n            let changedObservations =  this.fhirServices.getChangedObservations();\n            if(changedObservations.length != 0){\n              this.router.navigate([this.router.url]);\n              this.isRouterChange = true;\n              this.isTabchange = false;\n              this.showFlowSheetDataSaveModal();\n            }else{\n              this.routerSubscription.unsubscribe();\n            }\n        });\n    }\n\n    ngOnDestroy() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_details/patients.details.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { AgGridModule } from \"ag-grid-angular/main\";\nimport { PatientsDetailsComponent } from './patients.details.component';\nimport { PatientClinicalProgressNoteComponent } from '../patient_clinical_progress_note/index';\nimport { PatientSummaryComponent } from '../patient_summary/index';\nimport { PatientFluidSummaryComponent } from '../patient_fluid_summary/index';\nimport { PatientNursingCareComponent } from '../patient_nursing_care/index';\nimport { FlowSheetComponent } from '../patient_flow_sheet/index';\nimport { LabsComponent } from '../patient_labs/index';\nimport { ChecklistComponent } from '../patient_checklist/index';\nimport { DischargeSummaryComponent } from '../patient_discharge_summary/index';\nimport { ClinicalDocumentComponent } from '../patient_clinical_document/index';\nimport { PatientVitalsGraphsComponent } from '../patient_vitals_graphs/index';\nimport { PatientVitalsFlowsheetComponent } from '../patient_vitals_flowsheet/index';\nimport { PatientPlanComponent } from '../patient_plan/index';\nimport { FluidsComponent } from '../patient_fluids/index';\n\nimport { NursingDocumentComponent } from '../patient_nursing_document/index';\nimport { LabChartComponent } from '../patient_lab_chart/index';\nimport { OrdersComponent } from '../patient_orders/index';\nimport { FluidChartComponent } from '../patient_fluid_chart/index';\nimport { PatientProgressNotesComponent } from '../patient_progress_notes/index';\nimport { PatientHistoryComponent } from '../patient_history/index';\nimport { PatientPhysicalExamComponent } from '../patient_physical_exam/index';\n\nimport { NoteDisplayComponent } from \"../note/index\";\n\n// Highcharts\nimport * as highcharts from 'highcharts';\nimport { HighchartsStatic } from 'angular2-highcharts/dist/HighchartsService';\nimport {ChartModule} from \"angular2-highcharts\";\n\n//socket.io\nimport { SocketIoModule, SocketIoConfig } from 'ng-socket-io';\nconst config: SocketIoConfig = { url: 'http://localhost:3001', options: {} };\n\ndeclare var require: any;\n\nexport function highchartsFactory() {\n    const sc = require('highcharts/highstock');\n    const dd = require('highcharts/modules/drilldown');\n    const hcm = require('highcharts/highcharts-more');\n    const exp = require('highcharts/modules/exporting');\n\n    dd(sc);\n    hcm(sc);\n    exp(sc);\n\n    return sc;\n}\n\n@NgModule({\n\n    imports: [CommonModule, FormsModule, ReactiveFormsModule,ChartModule, \n                  AgGridModule.withComponents([FluidsComponent]),\n                  SocketIoModule.forRoot(config),\n                 ],\n    providers: [{\n        provide: HighchartsStatic,\n        useFactory: highchartsFactory\n      }],\n    declarations: [NoteDisplayComponent,PatientsDetailsComponent, PatientClinicalProgressNoteComponent, \n                         PatientSummaryComponent, PatientFluidSummaryComponent, PatientNursingCareComponent, \n                         FlowSheetComponent, LabsComponent, ChecklistComponent, DischargeSummaryComponent, ClinicalDocumentComponent, \n                         PatientVitalsGraphsComponent, PatientPlanComponent, NursingDocumentComponent, LabChartComponent, OrdersComponent,\n                         FluidChartComponent, PatientProgressNotesComponent, PatientHistoryComponent, PatientPhysicalExamComponent,\n                         FluidsComponent,PatientVitalsFlowsheetComponent],\n    exports: [PatientsDetailsComponent, FormsModule, ReactiveFormsModule,  PatientClinicalProgressNoteComponent, PatientSummaryComponent, \n                  PatientFluidSummaryComponent, PatientNursingCareComponent, FlowSheetComponent, LabsComponent, ChecklistComponent, \n                  DischargeSummaryComponent, ClinicalDocumentComponent, PatientVitalsGraphsComponent, PatientPlanComponent, \n                  NursingDocumentComponent, LabChartComponent, OrdersComponent, FluidChartComponent, PatientProgressNotesComponent, \n                  FluidsComponent, PatientVitalsFlowsheetComponent,PatientHistoryComponent, PatientPhysicalExamComponent]\n\n})\n\nexport class PatientsDetailsModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_details/patients.details.module.ts","import { Route } from '@angular/router';\nimport { PatientsDetailsComponent } from './index';\n\nexport const PatientsDetailsRoutes: Route[] = [\n    {\n        path: 'patient/details/:id',\n        component: PatientsDetailsComponent\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_details/patients.details.routes.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './patients.summary.component';\nexport * from './patients.summary.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".patients .btn-circle {\\n    width: 30px;\\n    height: 30px;\\n    text-align: center;\\n    padding: 6px 0;\\n    font-size: 12px;\\n    line-height: 1.428571429;\\n    border-radius: 15px;\\n}\\n\\n.patients .btn-success {\\n    margin-right: 35px;\\n}\\n\\n.patients .widget-user-2 .widget-user-header {\\n    padding: 1px;\\n    height: 85px;\\n}\\n\\n.patients .widget-user-2 .widget-user-image>img {\\n    width: 100px;\\n}\\n\\n.patients .widget-user-2 .widget-user-username,\\n.patients .widget-user-2 .widget-user-username-no-pointer,\\n.patients .widget-user-2 .widget-user-desc {\\n    margin-left: 3px;\\n}\\n\\n.patients .widget-user-2 .widget-user-username:hover,\\n.patients .widget-user-2 h5.widget-user-desc:hover {\\n    cursor: pointer;\\n    color: #ccc;\\n}\\n\\n.patients .widget-user-2 .widget-user-username-no-pointer:hover {\\n    cursor: default;\\n}\\n\\n.patients .widget-user-2 .box-footer ul li a:hover {\\n    cursor: pointer;\\n}\\n\\n.patients .card-list-key {\\n    display: inline-block;\\n    width: 65px;\\n    color: #666;\\n}\\n\\n.patients .card-list-value {\\n    /*display: inline-block;*/\\n}\\n\\n.patients .box-widget {\\n    border: solid 1px #7fdff7;\\n}\\n\\n.patients .box-widget:hover .widget-user-header,\\n.patients .box-widget:hover .widget-user-header i {\\n    background-color: #00c0ef;\\n    color: #fff;\\n}\\n\\n.patients .btn-bitbucket,\\n.patients .btn-flickr {\\n    background-color: #0099bf;\\n}\\n\\n.patients .btn-social {\\n    padding-left: 30px;\\n    padding-bottom: 2px;\\n    padding-top: 2px;\\n}\\n\\n.patients .btn-social> :first-child {\\n    width: 28px;\\n    line-height: 25px;\\n    font-size: 20px;\\n}\\n\\n.patients .action-buttons a {\\n    display: inline-block;\\n    margin-right: 10px;\\n}\\n\\n.patients .action-buttons a i {\\n    font-size: 20px;\\n}\\n\\n.patients .box-widget .widget-user-header i:hover {\\n    color: #ccc;\\n}\\n\\n.patients table.table {\\n    border: 1px solid #d2d6de;\\n    display: table;\\n}\\n\\n#editor-lightbox .patient-note,\\n#editor-lightbox .patient-diagnosis,\\n#editor-lightbox .patient-procedure,\\n#editor-lightbox .patient-special-instructions,\\n#editor-lightbox .fluid-summary {\\n    display: none;\\n    position: fixed;\\n    z-index: 100015;\\n    width: 100%;\\n    height: 100%;\\n    text-align: center;\\n    top: 0;\\n    left: 0;\\n    background: rgba(0, 0, 0, 0.8);\\n}\\n\\n#editor-lightbox .patient-note .editor-lightbox-body,\\n#editor-lightbox .patient-diagnosis .editor-lightbox-body,\\n#editor-lightbox .patient-procedure .editor-lightbox-body,\\n#editor-lightbox .patient-special-instructions .editor-lightbox-body,\\n#editor-lightbox .fluid-summary .editor-lightbox-body {\\n    position: absolute;\\n    top: 10%;\\n    left: 10%;\\n    bottom: 10%;\\n    width: 80%;\\n}\\n\\n#editor-lightbox .patient-note:target,\\n#editor-lightbox .patient-diagnosis:target,\\n#editor-lightbox .patient-procedure:target,\\n#editor-lightbox .patient-special-instructions:target,\\n#editor-lightbox .fluid-summary:target {\\n    outline: none;\\n    display: block;\\n}\\n\\n#editor-lightbox .patient-note .editor-lightbox-body textarea {\\n    width: 100%;\\n    height: 200px;\\n    font-size: 14px;\\n    line-height: 18px;\\n    border: 1px solid #dddddd;\\n    padding: 10px;\\n}\\n\\n#editor-lightbox .patient-note .box-header {\\n    text-align: left;\\n}\\n\\n#editor-lightbox-body p.error-message {\\n    color: #f60;\\n}\\n\\n.deleteConfirmPopUp strong {\\n    font-size: 18px;\\n}\\n\\n.patient-chart .chart-img {\\n    display: none;\\n    position: absolute;\\n    z-index: 999;\\n    left: 0;\\n}\\n\\n.patient-chart:hover .chart-img,\\n.patients .breadcrumb,\\n.patients .top-action-buttons {\\n    display: inline-block;\\n}\\n\\n.dischargeConfirmPopUp strong {\\n    font-size: 18px;\\n}\\n\\n/* for popups */\\n\\n.textarea {\\n    width: 100%;\\n    min-height: 100px;\\n}\\n\\n.box-comments {\\n    background-color: #fff;\\n}\\n\\n.box-comments {\\n    height: 366px;\\n    overflow-x: auto;\\n}\\n\\n.comment-text-notes {\\n    display: block;\\n}\\n\\n.box-footer.box-comments {\\n    overflow: auto;\\n}\\n\\n.box-footer.box-comments .box-comment {\\n    text-align: left;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/patients.summary.component.css\n// module id = ../../../../../src/app/patients_summary/patients.summary.component.css\n// module chunks = 0","module.exports = \"\\n<section class=\\\"content-header patients\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h1 class=\\\"sub-page-header\\\">\\n                Patients\\n                <small>(All)</small>\\n            </h1>\\n        </div>\\n        <div class=\\\"col-md-6 text-align-right\\\">\\n            <ol class=\\\"breadcrumb text-align-right\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-users\\\"></i> Patients</li>\\n            </ol>\\n            <div class=\\\"top-action-buttons text-align-right\\\">\\n                <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"clickPatientGridView()\\\" [ngClass]=\\\"activeBtnGrid\\\" class=\\\"btn bg-default\\\" title=\\\"Grid View\\\"><i class=\\\"fa fa-th\\\"></i></a>\\n                    <a (click)=\\\"clickPatientListView()\\\" [ngClass]=\\\"activeBtnList\\\" class=\\\"btn bg-default btn-mid-border\\\" title=\\\"List View\\\"><i class=\\\"fa fa-align-justify\\\"></i></a>\\n                    <a (click)=\\\"routeCreatePatient()\\\" *ngIf=\\\"roleWrite\\\" class=\\\"btn bg-default\\\" title=\\\"Create Patient\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row hide\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-users\\\"></i> Patients</li>\\n            </ol>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"input-group\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"patientSearchbox\\\" placeholder=\\\"Search Patients...\\\" #listFilter (keyup)=\\\"0\\\">\\n                <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n<section class=\\\"patients\\\">\\n    <div class=\\\"loading-spinner\\\" *ngIf=\\\"loading\\\"></div>\\n    <div *ngIf=\\\"!loading\\\">\\n        <div class=\\\"row\\\" *ngIf=\\\"patientGridView\\\">\\n            <div class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-4 col-xl-3 col-xxl-5\\\" *ngFor=\\\"let patient of patientsList | PatientSearch:listFilter.value;\\\">\\n                <div class=\\\"box box-widget widget-user-2\\\">\\n                    <div class=\\\"widget-user-header bg-info\\\">\\n                        <h3 class=\\\"widget-user-username text-ellipsis\\\" *ngIf=\\\"rolePatientClinicalInformationAccess\\\" (click)=\\\"routPatientDetails(patient.id)\\\" title=\\\"{{patient.name}}\\\">{{patient.name}}</h3>\\n                        <h3 class=\\\"widget-user-username-no-pointer text-ellipsis\\\" *ngIf=\\\"!rolePatientClinicalInformationAccess\\\" title=\\\"{{patient.name}}\\\">{{patient.name}}</h3>\\n                        <h5 class=\\\"widget-user-desc\\\">\\n                            <i aria-hidden=\\\"true\\\" *ngIf=\\\"patient.gender == 'Male'\\\"></i>\\n                            <i aria-hidden=\\\"true\\\" *ngIf=\\\"patient.gender == 'Female'\\\"></i>\\n                            <i aria-hidden=\\\"true\\\" *ngIf=\\\"patient.gender != 'Male' && patient.gender != 'Female'\\\"></i>     \\n                                {{patient.gender}} / {{patient.age}}\\n                        </h5>\\n                        <div class=\\\"action-buttons widget-user-desc\\\">\\n                            <!--<a (click)=\\\"clickFavPatient(patient.id)\\\" *ngIf=\\\"roleFavPatientAccess\\\">\\n                                <i class=\\\"fa fa-star-o\\\" aria-hidden=\\\"true\\\" title=\\\"Favorite Patient\\\"></i>\\n                            </a>-->\\n                            <a (click)=\\\"clickCamera(patient.cameraName)\\\" *ngIf=\\\"roleCameraAccess\\\">\\n                                <i class=\\\"fa fa-video-camera\\\" aria-hidden=\\\"true\\\" title=\\\"Zoom call\\\"></i>\\n                            </a>\\n                            <a (click)=\\\"clickNote(patient.id, patient.name, patient.hospitalId)\\\" *ngIf=\\\"roleNoteWrite\\\" title=\\\"Notes\\\">\\n                                <i class=\\\"fa fa-sticky-note-o\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                            <a (click)=\\\"clickDiagnosis(patient)\\\" *ngIf=\\\"roleDiagnosisAccess\\\" title=\\\"Patient Diagnosis\\\">\\n                                <i class=\\\"fa fa-th\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                            <a (click)=\\\"clickProcedure(patient)\\\" *ngIf=\\\"roleWrite\\\" title=\\\"Patient Procedure\\\">\\n                                <i class=\\\"fa fa-align-justify\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                            <a (click)=\\\"clickSpecialInstructions(patient)\\\" *ngIf=\\\"roleWrite\\\" title=\\\"Patient Special Instructions\\\">\\n                                <i class=\\\"fa fa-tasks\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                            <a (click)=\\\"clickEdit(patient.id)\\\" *ngIf=\\\"roleWrite\\\" title=\\\"Edit\\\">\\n                                <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                            </a>\\n                            <a (click)=\\\"clickDischargeConfirm(patient)\\\" *ngIf=\\\"roleWrite\\\" title=\\\"Discharge \\\">\\n                                <i class=\\\"fa fa-sign-out\\\" aria-hidden=\\\"true \\\"></i>\\n                            </a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"box-footer no-padding\\\" *ngIf=\\\"rolePatientClinicalInformationAccess\\\" (click)=\\\"routPatientDetails(patient.id)\\\">\\n                        <ul class=\\\"nav nav-stacked\\\">\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Hospital</span><span class=\\\"card-list-value\\\" title=\\\"{{patient.hospitalName}}\\\">: {{patient.hospitalName}}</span></a></li>\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key \\\">Depart. </span><span class=\\\"card-list-value\\\" title=\\\"{{patient.department}}\\\">: {{patient.department}}</span></a></li>\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">MRN </span><span class=\\\"card-list-value\\\" title=\\\"{{patient.mrn}}\\\">: {{patient.mrn}}</span></a></li>\\n                            <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Bed</span><span class=\\\"card-list-value\\\" title=\\\"{{patient.bedName}}\\\">: {{patient.bedName}}</span></a></li>\\n                            <!--<li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Last Seen</span><span class=\\\"card-list-value\\\" title=\\\"{{patient.lastSeen | date:'medium'}}\\\">: {{patient.lastSeen | date:'medium'}}</span></a></li>-->\\n                        </ul>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\" *ngIf=\\\"patientListView\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <table class=\\\"table table-bordered\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>\\n                                Name\\n                            </th>\\n                            <th>\\n                                Sex / Age\\n                            </th>\\n                            <th>\\n                                Hospital\\n                            </th>\\n                            <th>\\n                                MRN\\n                            </th>\\n                            <th>\\n                                Bed\\n                            </th>\\n                            <!--<th>\\n                                Last Seen\\n                            </th>-->\\n                            <th>\\n                                Action\\n                            </th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let patient of patientsList | PatientSearch:listFilter.value;\\\">\\n                            <td>\\n                                <a *ngIf=\\\"rolePatientClinicalInformationAccess\\\" (click)=\\\"routPatientDetails(patient.id)\\\">{{patient.name}}</a>\\n                                <span *ngIf=\\\"!rolePatientClinicalInformationAccess\\\">{{patient.name}}</span>\\n                            </td>\\n                            <td>\\n                                {{patient.gender}} / {{patient.age}}\\n                            </td>\\n                            <td>\\n                                {{patient.hospitalName}}\\n                            </td>\\n                            <td>\\n                                {{patient.mrn}}\\n                            </td>\\n                            <td>\\n                                {{patient.bedName}}\\n                            </td>\\n                            <!--<td>\\n                                {{patient.lastSeen | date}}\\n                            </td>-->\\n                            <td>\\n                                <div class=\\\"action-buttons\\\">\\n                                    <!--<a (click)=\\\"clickFavPatient(patient.id)\\\" *ngIf=\\\"roleFavPatientAccess\\\">\\n                                        <i class=\\\"fa fa-star-o\\\" aria-hidden=\\\"true\\\" title=\\\"Favorite Patient\\\"></i>\\n                                    </a>-->\\n                                    <a (click)=\\\"clickCamera(patient.cameraName)\\\" *ngIf=\\\"roleCameraAccess\\\">\\n                                        <i class=\\\"fa fa-video-camera\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </a>\\n                                    <a (click)=\\\"clickNote(patient.id, patient.name)\\\" *ngIf=\\\"roleNoteWrite\\\">\\n                                        <i class=\\\"fa fa-sticky-note-o\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </a>\\n                                    <a (click)=\\\"clickEdit(patient.id)\\\" *ngIf=\\\"roleWrite\\\">\\n                                        <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                                    </a>\\n                                    <!--<a title=\\\"Chart\\\" class=\\\"patient-chart\\\">\\n                                        <i class=\\\"fa fa-line-chart\\\" aria-hidden=\\\"true\\\"></i>\\n                                        <div class=\\\"chart-img\\\">\\n                                            <img class=\\\"img-responsive \\\" src=\\\"./client/assets/images/hr_bpm.PNG\\\" alt=\\\"Live moniter \\\">\\n                                        </div>\\n                                    </a>-->\\n                                </div>\\n                            </td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</section>\\n<!-- Discharge Modal -->\\n<div class=\\\"modal dischargeConfirmPopUp\\\" role=\\\"dialog\\\">\\n    <div class=\\\"modal-dialog\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header\\\">\\n                <!-- <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"clickCancelDischarge()\\\" data-dismiss=\\\"modal\\\">&times;</button> -->\\n                <h4 class=\\\"modal-title\\\">Patient Discharge Confirmation</h4>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                Are you sure you want to discharge Patient <strong>{{patientName}}</strong>?\\n            </div>\\n            <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" (click)=\\\"clickCancelDischarge()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                <button type=\\\"button\\\" (click)=\\\"clickDischargePatient()\\\" class=\\\"btn btn-primary\\\">Discharge</button>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"patients\\\" id=\\\"editor-lightbox\\\">\\n<!-- Note -->\\n    <div class=\\\"patient-note\\\">\\n        <div class=\\\"editor-lightbox-body\\\">\\n            <div class=\\\"box\\\">\\n                <div class=\\\"box-header\\\">\\n                    <h3 class=\\\"box-title\\\">{{patientName}}'s\\n                        <small> notes</small>\\n                    </h3>\\n                </div>\\n                <div class=\\\"box-body pad\\\">\\n                    <textarea class=\\\"textarea\\\" id=\\\"notes-entry\\\" placeholder=\\\"Please enter patient note's here\\\" [(ngModel)]=\\\"enteryPatientNotes\\\"></textarea>\\n                </div>\\n                <p class=\\\"error-message\\\">{{errorMessage}}</p>\\n                <div class=\\\"box-footer text-align-right\\\">\\n                    <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"clickNotesCancel()\\\">Cancel</button>\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-info margin\\\" (click)=\\\"clickNotesAdd()\\\">Add</button>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n<!-- Patient Diagnosis -->\\n    <div class=\\\"patient-diagnosis\\\">\\n        <div class=\\\"editor-lightbox-body\\\">\\n            <patient-diagnosis [patientData]=\\\"currentPatientData.fhirData\\\" [practitionerData]=\\\"practitionerData\\\"  [patientName]=\\\"currentPatientData.name\\\" *ngIf=\\\"enableDiagnosis\\\" (cancelEvent)=\\\"clickDiagnosisCancel()\\\"></patient-diagnosis>\\n        </div>\\n    </div>\\n<!-- Patient Procedure -->\\n    <div class=\\\"patient-procedure\\\">\\n        <div class=\\\"editor-lightbox-body\\\">\\n            <patient-procedure [patientData]=\\\"currentPatientData.fhirData\\\" [practitionerData]=\\\"practitionerData\\\" [patientName]=\\\"currentPatientData.name\\\" *ngIf=\\\"enableProcedure\\\" (cancelEvent)=\\\"clickProcedureCancel()\\\"></patient-procedure>\\n        </div>\\n    </div>\\n<!-- Patient Special Instructions -->\\n    <div class=\\\"patient-special-instructions\\\">\\n        <div class=\\\"editor-lightbox-body\\\">\\n            <patient-special-instructions [patientData]=\\\"currentPatientData.fhirData\\\" [practitionerData]=\\\"practitionerData\\\" [patientName]=\\\"currentPatientData.name\\\" *ngIf=\\\"enableSpecialInstructions\\\" (cancelEvent)=\\\"clickSpecialInstructionsCancel()\\\"></patient-special-instructions>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/patients.summary.component.html\n// module id = ../../../../../src/app/patients_summary/patients.summary.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationStart } from '@angular/router';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { RoleServices } from '../services/presence/role.services';\nimport { BedServices } from '../services/presence/bed.services';\nimport { DepartmentServices } from '../services/presence/department.services';\nimport { HospitalServices } from '../services/presence/hospital.services';\nimport { PatientServices } from '../services/presence/patient.services';\nimport { PatientFhirServices } from '../services/fhir/patient.services';\nimport { PractitionerServices } from '../services/fhir/practitioner.services';\nimport { CameraServices } from '../services/presence/camera.services';\nimport { MeetingServices } from '../services/presence/meeting.services';\nimport { NotesServices } from '../services/presence/notes.services';\nimport { ModelMessage } from '../model_message/model.message';\nimport {PatientSearch} from '../patients_summary/search';\nimport * as moment from 'moment';\nimport * as $ from 'jquery';\n\n@Component({\n    moduleId: module.id,\n    selector: 'patients',\n    templateUrl: './patients.summary.component.html',\n    styleUrls: ['patients.summary.component.css']\n})\n\nexport class PatientsSummaryComponent implements OnInit {\n    errorMessage: string = '';\n    patientName: string;\n    enteryPatientNotes: string;\n    patientsList: any = [];\n    activeBtnGrid: string = \"bg-info\";\n    activeBtnList: string = \"\";\n    consultantID: string;\n    patientGridView: boolean = true;\n    patientListView: boolean = false;\n    notePatientID: string;\n    noteStartTime: any;\n    noteHospitalId: string;\n    deletePatientID: string;\n    deletePatientName: string;\n    roleWrite: boolean = false;\n    roleNoteRead: boolean = false;\n    roleNoteWrite: boolean = false;\n    roleCameraAccess: boolean = false;\n    roleDiagnosisAccess: boolean = false;\n    roleprocedureAccess: boolean = false;\n    roleFavPatientAccess: boolean = true;\n    rolePatientClinicalInformationAccess: boolean = false;\n    loading: boolean = true;\n    userScope: any[];\n    hospitalID: string = '';\n    allPatients: any;\n    hospitalAllPatients: any;\n    allHospitals: any;\n    allBeds: any;\n    allDepartments: any;\n    userData: any;\n    patientSearchbox: any;\n    patientsRouting:any;\n    fhirPatients:any;\n    practitionerData:any;\n    currentPatientData: any;\n    enableDiagnosis:boolean = false;\n    enableProcedure:boolean = false;\n    enableSpecialInstructions:boolean = false;\n    fhirHospitalId: string;\n\n    constructor(private router: Router, private route: ActivatedRoute, private roleServices: RoleServices, private bedServices: BedServices, private departmentServices: DepartmentServices, private hospitalServices: HospitalServices, private patientServices:PatientServices, private patientFhirServices:PatientFhirServices, private cameraServices: CameraServices,private meetingServices: MeetingServices, private notesServices: NotesServices, private modelMessage: ModelMessage, private practitionerServices:PractitionerServices) { }\n\n    preparePatientData(resolve, reject) {\n        this.allPatients.forEach(currentPatient => {\n            this.allBeds.forEach(currentBed => {\n                if (currentBed.id === currentPatient.bedId) {\n                    this.allDepartments.forEach(currentDepartment => {\n                        if (currentDepartment.id === currentBed.icuId) {\n                            let birthdate = moment(currentPatient.dateOfBirth).format('MM/DD/YYYY');\n                            let age  = this.getAge(birthdate);\n                            currentPatient['hospitalName']=this.allHospitals.name;\n                            currentPatient['department']=currentDepartment.name;\n                            currentPatient['bedName'] = currentBed.name;\n                            currentPatient['age']=age;\n                        }\n                    });\n                }\n            });\n        });\n        if(this.allPatients.length){\n          resolve(this.allPatients);\n        }else{\n          reject(\"Unable to fetch Patient Details\")\n        }\n    }\n        \n    getAge(dateString) {\n        let now : any = new Date();\n        let today : any = new Date(now.getYear(),now.getMonth(),now.getDate());\n\n        let yearNow = now.getYear();\n        let monthNow = now.getMonth();\n        let dateNow = now.getDate();\n\n        let dob : any = new Date(dateString.substring(6,10),\n                            dateString.substring(0,2)-1,                   \n                            dateString.substring(3,5)                  \n                            );\n\n        let yearDob = dob.getYear();\n        let monthDob = dob.getMonth();\n        let dateDob = dob.getDate();\n        let age : any;\n        let ageString = \"\";\n        let yearString = \"\";\n        let monthString = \"\";\n        let dayString = \"\";\n        let monthAge : any;\n        let dateAge : any;\n\n\n        let yearAge = yearNow - yearDob;\n\n        if (monthNow >= monthDob)\n\n            monthAge = monthNow - monthDob;\n        else {\n            yearAge--;\n            monthAge = 12 + monthNow -monthDob;\n        }\n\n        if (dateNow >= dateDob)\n            dateAge = dateNow - dateDob;\n        else {\n            monthAge--;\n            dateAge = 31 + dateNow - dateDob;\n\n            if (monthAge < 0) {\n            monthAge = 11;\n            yearAge--;\n            }\n        }\n\n        age = {\n            years: yearAge,\n            months: monthAge,\n            days: dateAge\n            };\n\n        if ( age.years > 1 ) yearString = \" years\";\n        else yearString = \" year\";\n        if ( age.months> 1 ) monthString = \" months\";\n        else monthString = \" month\";\n        if ( age.days > 1 ) dayString = \" days\";\n        else dayString = \" day\";\n\n\n        if ( (age.years > 0) && (age.months > 0) && (age.days > 0) )\n            ageString = age.years + yearString;\n        else if ( (age.years == 0) && (age.months == 0) && (age.days > 0) )\n            ageString = age.days + dayString;\n        else if ( (age.years > 0) && (age.months == 0) && (age.days == 0) )\n            ageString = age.years + yearString;\n        else if ( (age.years > 0) && (age.months > 0) && (age.days == 0) )\n            ageString = age.years + yearString;\n        else if ( (age.years == 0) && (age.months > 0) && (age.days > 0) )\n            ageString = age.months + monthString + \" and \" + age.days + dayString;\n        else if ( (age.years > 0) && (age.months == 0) && (age.days > 0) )\n            ageString = age.years + yearString;\n        else if ( (age.years == 0) && (age.months > 0) && (age.days == 0) )\n            ageString = age.months + monthString;\n        else ageString = \"-\";\n\n        return ageString;\n    }\n\n\n    getDepartments(resolve, reject) {\n        this.departmentServices.getAllDepartmentsByHospitalID(this.userData.hospitalId).subscribe(\n            data => {\n                this.allDepartments = data;\n                this.preparePatientData(resolve, reject);\n            },\n            error => {\n                reject(error);\n            }\n        );\n    }\n\n    getBeds(resolve, reject) {\n        this.bedServices.getAllBedsByHospitalID(this.hospitalID).subscribe(\n            data => {\n                this.allBeds = data;\n                this.getDepartments(resolve, reject);\n            },\n            error => {\n                reject(error);\n            }\n        );\n    }\n\n    getHospitals(resolve, reject) {\n        this.hospitalServices.getHospitalDataByHospitalId(this.hospitalID).subscribe(\n            data => {\n                this.allHospitals = data;\n                this.getBeds(resolve, reject);\n            },\n            error => {\n                reject(error);\n            }\n        );\n    }\n\n\n    getAllPresencePatientsData():Promise<any> {\n      return new Promise((resolve, reject)=>{\n            this.patientServices.getAllPatients().subscribe(\n            data => {\n                let patientsList: any;\n                let dataPatient = [];\n                patientsList = data;\n                patientsList.forEach(currentPatient => {\n                    let responseCurrrentPatient:any = currentPatient;\n                    let birthdate = moment(responseCurrrentPatient.dateOfBirth).format('MM/DD/YYYY');\n                    let age  = this.getAge(birthdate);\n                    let patientDetails = {\n                        id: responseCurrrentPatient.id,\n                        name: responseCurrrentPatient.name,\n                        gender: responseCurrrentPatient.gender,\n                        dateOfBirth: age,\n                        maritialStatus: responseCurrrentPatient.maritialStatus,\n                        mrn: responseCurrrentPatient.mrn,\n                        lastSeen: responseCurrrentPatient.lastSeen,\n                        hospitalName: responseCurrrentPatient.hospitalName,\n                        department: responseCurrrentPatient.icuName,\n                        bedName: responseCurrrentPatient.bedName,\n                        cameraId: responseCurrrentPatient.cameraId,\n                        cameraName: responseCurrrentPatient.cameraName\n                    };\n                    dataPatient.push(patientDetails);\n                });\n                resolve(data);\n            },\n            error => {\n                reject(error);\n            });\n        });\n    }\n\n    getAllFhirPatientsData():Promise<any>{\n      return new Promise((resolve, reject)=>{\n        this.patientFhirServices.getAllFhirPatients().subscribe(\n          data=>{\n            resolve(data);\n          },\n          error=>{\n            reject(error);\n          }\n       )\n      });\n    }\n\n    getPractitionerData():Promise<any>{\n      let userId=JSON.parse(sessionStorage.getItem('userData')).id;\n      return new Promise((resolve, reject)=>{\n        this.practitionerServices.getPractitionerByIdentifier(userId).subscribe(\n          data=>{\n            resolve(data);\n          },\n          error=>{\n            reject(error);\n          }\n       )\n      });\n    }\n\n    getPatients() {\n        let role = JSON.parse(sessionStorage.getItem('userRoleInfo')).role;\n        let presencePatientPromise:any;\n        let fhirPatientPromise:any;\n        let practitionerPromise:any;\n\n        //get Presence patients details\n        if (this.hospitalID) {\n          presencePatientPromise = new Promise((resolve, reject)=>{\n            this.patientServices.getAllPatientsByHospital(this.hospitalID).subscribe(\n                data => {\n                    this.hospitalAllPatients = data;\n                    this.allPatients = this.hospitalAllPatients.filter(patient => patient.status === \"Admitted\");\n                    this.getHospitals(resolve, reject);\n                },\n                error => {\n                    reject(error);\n                }\n            );\n          });\n        } else {\n           presencePatientPromise = this.getAllPresencePatientsData();\n        }\n\n        //depends on role, get FhirPatients and Practitioner Data\n        if(role === 'HOSPITAL_DOCTOR' || role === 'HOSPITAL_NURSE' || role === 'CC_CONSULTANT'){\n            fhirPatientPromise = this.getAllFhirPatientsData();\n            practitionerPromise = this.getPractitionerData();\n        }\n\n        //setting the values\n        Promise.all([presencePatientPromise,fhirPatientPromise,practitionerPromise]).then(data=>{\n            this.patientsList = data[0] || [];\n            this.fhirPatients = data[1];\n            this.practitionerData=data[2];\n            if(this.patientsList.length && this.fhirPatients){\n              this.patientsList.forEach((patient)=>{\n                let fhirPatient = this.fhirPatients.find(item=>item.pid === patient.id)\n                if(fhirPatient){\n                  patient.fhirData=fhirPatient;\n                }\n              })\n            }\n            this.loading = false;\n        },\n        err=>{\n            this.modelMessage.errorMessage(err);\n            this.loading = false;\n        });\n    }\n    callZoomMeeting(data) {\n        let zoomURL = JSON.parse(data._body);\n        window.open(zoomURL.startUrl, '_blank');\n    }\n\n    clickCamera(id) {\n        let meeting = {\n            \"hostId\": JSON.parse(sessionStorage.getItem('userData')).zoomUserId,\n            \"invitees\": [id]\n        };\n\n        this.meetingServices.createMeeting(meeting).subscribe(\n            data => {\n                this.callZoomMeeting(data);\n            },\n            error => {\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    clickNote(id, pname, hospitalId) {\n        this.notePatientID = id;\n        this.patientName = pname;\n        this.noteHospitalId = hospitalId;\n        this.noteStartTime = new Date();\n        $('#editor-lightbox .patient-note').show();\n    }\n\n    clickEdit(id) {\n        this.router.navigate(['/patient/create/', id,'Edit']);\n    }\n\n    clickFavPatient(id) {\n        console.log('clickFavPatient');\n    }\n\n    clickNotesAdd() {\n        let notes = $(\"<div/>\").text(this.enteryPatientNotes).html();\n        if (notes !== '') {\n            this.errorMessage = '';\n            let noteObject = {\n                consultantid: this.consultantID,\n                details: [notes],\n                endtime: new Date(),\n                hospitalId: this.noteHospitalId,\n                patientid: this.notePatientID,\n                starttime: this.noteStartTime,\n                status: 'ACTIVE'\n            };\n\n            this.notesServices.createNote(noteObject).subscribe(\n                data => {\n                    let msg = 'Patient ' + this.patientName + ' notes saved ';\n                    this.modelMessage.successMessage(msg);\n                },\n                error => {\n                    this.modelMessage.errorMessage(error);\n                }\n            );\n\n            this.enteryPatientNotes = '';\n            $('#editor-lightbox .patient-note').hide();\n        } else {\n            this.errorMessage = 'Please enter notes';\n        }\n    }\n\n    clickNotesCancel() {\n        this.enteryPatientNotes = '';\n        this.errorMessage = '';\n        $('#editor-lightbox .patient-note').hide();\n    }\n\n    clickDiagnosis(patient) {\n        this.currentPatientData = patient;\n        this.enableDiagnosis=true;\n        $('#editor-lightbox .patient-diagnosis').show();\n    }\n\n    clickDiagnosisCancel() {\n        this.currentPatientData = null;\n        this.enableDiagnosis=false;\n        $('#editor-lightbox .patient-diagnosis').hide();\n    }\n\n    clickProcedure(patient) {\n        this.currentPatientData = patient;\n        this.enableProcedure=true;\n        $('#editor-lightbox .patient-procedure').show();\n    }\n\n    clickProcedureCancel() {\n        this.currentPatientData = null;\n        this.enableProcedure=false;\n        $('#editor-lightbox .patient-procedure').hide();\n    }\n\n    clickSpecialInstructions(patient) {\n        this.currentPatientData = patient;\n        this.enableSpecialInstructions=true;\n        $('#editor-lightbox .patient-special-instructions').show();\n    }\n\n    clickSpecialInstructionsCancel() {\n        this.currentPatientData = null;\n        this.enableSpecialInstructions=false;\n        $('#editor-lightbox .patient-special-instructions').hide();\n    }\n\n    clickDischargeConfirm(patient) {\n        this.currentPatientData = patient;\n        this.patientName = patient.name;\n        $('.dischargeConfirmPopUp').show();\n    }\n\n    clickCancelDischarge() {\n        this.currentPatientData = null;\n        this.patientName = null;\n        $('.dischargeConfirmPopUp').hide();\n    }\n\n    clickDischargePatient(){\n        if (this.currentPatientData.status === 'Admitted') {\n            let patientData = this.currentPatientData;\n            patientData.dateOfBirth = moment(patientData.dateOfBirth).format('YYYY-MM-DD');\n            patientData.status = 'Discharged';\n            //patientData.bedId = '';\n            patientData.ipno = this.currentPatientData.fhirData.ipn;\n            patientData.encounterId = this.currentPatientData.fhirData.encounterId;\n            this.patientServices.updatePatient(patientData,this.currentPatientData.fhirData.id,this.fhirHospitalId).subscribe(\n                data => {\n                    this.clickCancelDischarge();\n                    let msg = 'Patient ' + patientData.name + ' was discharged ';\n                    this.modelMessage.successMessage(msg);\n                    setTimeout(()=>{ location.reload(); }, 1000);\n                },\n                error => {\n                    let errorResponse = {status: 500, statusText: \"Failed to discharge patient\"};\n                    this.modelMessage.errorMessage(errorResponse);\n                }\n            );\n        } else {\n            this.router.navigate(['/patient/create/', this.currentPatientData.id, 'Edit']);\n        }\n    }\n\n    clickPatientGridView() {\n        this.activeBtnGrid = \"bg-info\";\n        this.activeBtnList = \"\";\n        this.patientGridView = true;\n        this.patientListView = false;\n    }\n\n    clickPatientListView() {\n        this.activeBtnGrid = \"\";\n        this.activeBtnList = \"bg-info\";\n        this.patientGridView = false;\n        this.patientListView = true;\n    }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    routeCreatePatient() {\n        this.router.navigate(['/patient/create']);\n    }\n\n    routPatientDetails(id) {\n        this.router.navigate(['/patient/details/', id]);\n    }\n\n    ngOnInit() {\n        $('#editor-lightbox .patient-diagnosis, #editor-lightbox .patient-procedure').hide();\n        let userRole = this.roleServices.getRole('patient');\n        if (userRole.write) {\n            this.roleWrite = true;\n        }\n        if (userRole.write) {\n            this.roleWrite = true;\n        }\n        let userNotesRole = this.roleServices.getRole('notes');\n        if (userNotesRole.write) {\n            this.roleNoteWrite = true;\n        }\n        if (userNotesRole.read) {\n            this.roleNoteRead = true;\n        }\n        let patientClinicalInformation = this.roleServices.getRole('patient-detail');\n        if (patientClinicalInformation.read) {\n            this.rolePatientClinicalInformationAccess = true;\n            this.roleDiagnosisAccess = true;\n            this.roleprocedureAccess=true;\n        }\n        let meetingRole = this.roleServices.getRole('meeting');\n        if (meetingRole.write) {\n            this.roleCameraAccess = true;\n        }\n        \n        this.userData = JSON.parse(sessionStorage.getItem('userRoleInfo'));\n        this.consultantID = this.userData.uuid;\n        this.hospitalID = this.userData.hospitalId;\n        this.fhirHospitalId = sessionStorage.getItem('fhirHospitalId');\n        this.getPatients();\n\n       this.route.params.subscribe(params => {\n            if (params['search']) {\n                this.patientSearchbox= params['search'];\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/patients.summary.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { PatientsSummaryComponent } from './patients.summary.component';\nimport {PatientSearch} from '../patients_summary/search';\nimport { PatientDiagnosisComponent } from '../patient_diagnosis/index';\nimport { PatientProcedureComponent } from '../patient_procedure/index';\nimport { PatientSpecialInstructionsComponent } from '../patient-special-instructions/index';\n\n@NgModule({\n    imports: [CommonModule, FormsModule,ReactiveFormsModule],\n    declarations: [PatientsSummaryComponent,PatientSearch,PatientDiagnosisComponent,PatientProcedureComponent,PatientSpecialInstructionsComponent],\n    exports: [PatientsSummaryComponent,PatientDiagnosisComponent,PatientProcedureComponent,PatientSpecialInstructionsComponent]\n})\n\nexport class PatientsSummaryModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/patients.summary.module.ts","import { Route } from '@angular/router';\nimport { PatientsSummaryComponent } from './index';\n\nexport const PatientsSummaryRoutes: Route[] = [\n  {\n    path: 'patients',\n    component: PatientsSummaryComponent\n  },\n  {\n    path: 'patients/:search',\n    component: PatientsSummaryComponent\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/patients.summary.routes.ts","import {Injectable, Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'PatientSearch'\n})\n\n@Injectable()\n\nexport class PatientSearch implements PipeTransform {\n    transform(value: any, searchTerm: string) \n    {\n       let filter = searchTerm.toUpperCase();\n       return filter ? value.filter(patient=> patient.name.toUpperCase().indexOf(filter) != -1 \n                                           || patient.mrn.toUpperCase().indexOf(filter) != -1) : value \n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/patients_summary/search.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class CommonServices {\n\n    private tenantName: any;\n    private headers: any;\n    private options: any;\n    private getReqHeaders: any;\n    private getReqOptions: any;\n    appTimeZone:any = \"Asia/Calcutta\";\n    constructor(private http: Http) {}\n\n    //function to find the String is JSON or not\n    isJson(str:string) {\n        try {\n            JSON.parse(str);\n        } catch (e) {\n            return false;\n        }\n        return true;\n    }\n\n    dataServiceHandler(dataUrl,requestType,requestData?: any) {\n            if(requestType === 'GET'){\n               return this.http.get(dataUrl, this.getServiceOptions()).map(res =>{\n                   let response :any = res;\n                   if(response._body  && this.isJson(response._body)){\n                       return response.json();\n                   }else{\n                       return response;\n                   }\n               });\n            }else if(requestType === 'POST'){\n                return this.http.post(dataUrl, JSON.stringify(requestData), this.postServiceOptions()).map(res => {\n                   let response :any = res;\n                   if(response._body && this.isJson(response._body)){\n                        return response.json();\n                   }else{\n                       return response;\n                   }\n                });\n            }else if(requestType === 'PUT'){\n                return this.http.put(dataUrl, JSON.stringify(requestData), this.postServiceOptions()).map(res => {\n                  let response :any = res;\n                  if(response._body  && this.isJson(response._body)){\n                      return response.json();\n                  }else{\n                      return response;\n                  }\n                });;\n            }else if(requestType === 'DELETE'){\n                return this.http.delete(dataUrl, this.getServiceOptions()).map(res => {\n                  let response :any = res;\n                  if(response._body  && this.isJson(response._body)){\n                      return response.json();\n                  }else{\n                      return response;\n                  }\n                });\n            }   \n    }\n\n    prepareReqOptions(){\n        this.tenantName = sessionStorage.getItem('tenantName');\n        this.getReqHeaders = new Headers({'X-TennantID': this.tenantName});\n        this.getReqOptions =  new RequestOptions({ headers: this.getReqHeaders });\n        this.headers = new Headers({ 'Content-Type': 'application/json', 'charset': 'UTF-8','X-TennantID': this.tenantName});\n        this.options = new RequestOptions({ headers: this.headers });\n    }\n\n    // get http request options\n    getServiceOptions() {\n        return this.getReqOptions;\n    }\n\n    // post http request options\n    postServiceOptions() {\n        return this.options;\n    }\n\n    getUserTypes(){\n        let userTypes= [\n                {\n                    id: 'CC_ADMIN',\n                    name: 'Command Centre Admin'\n                }, {\n                    id: 'CC_CONSULTANT',\n                    name: 'Command Centre Consultant'\n                }, {\n                    id: 'HOSPITAL_ADMIN',\n                    name: 'Hospital Admin'\n                }, {\n                    id: 'HOSPITAL_DOCTOR',\n                    name: 'Hospital Doctor'\n                },\n                {\n                    id: 'HOSPITAL_NURSE',\n                    name: 'Hospital Nurse'\n                }\n            ];\n\n       return userTypes;\n    }\n\n    getAppTimeZone(){\n        return this.appTimeZone;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/common.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class CarePlanServices{\n\n    constructor(private commonServices: CommonServices) {}\n\n    getCarePlan(patientId,encounterId){\n        return this.commonServices.dataServiceHandler(\"fhir/carePlan/\" + patientId + \"/\" + encounterId, 'GET')\n    }\n\n    createCarePlan(carePlanData){\n        return this.commonServices.dataServiceHandler(\"fhir/carePlan\", 'POST', carePlanData)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/care.plan.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class ClinicalProgressNoteServices{\n\n    constructor(private commonServices: CommonServices) {}\n\n    getProgressNote(patientId,encounterId){\n        return this.commonServices.dataServiceHandler(\"fhir/clinicalProgressNote/\" + patientId + \"/\" + encounterId, 'GET')\n    }\n\n    createProgressNote(progressData){\n        return this.commonServices.dataServiceHandler(\"fhir/clinicalProgressNote\", 'POST', progressData)\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/clinical.progress.note.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class DeviceServices {\n\n    constructor(private commonServices: CommonServices) {}\n\n    getAvailableDevicesByOrg(fhirOrgId) \n    {\n        return this.commonServices.dataServiceHandler(\"/fhir/device/\" + fhirOrgId ,'GET');\n    }\n\n    getAllDevicesByLocationIdentifier(locationIdentifier) \n    {\n        return this.commonServices.dataServiceHandler(\"/fhir/device/all/location/\" + locationIdentifier ,'GET');\n    }\n}   \n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/devices.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class DiagnosisServices {\n\n    constructor( private commonServices: CommonServices) {}\n\n    getDiagnosis(patientId,encounterId) {\n        return this.commonServices.dataServiceHandler(\"/fhir/diagnosis/\" + patientId + \"/\" + encounterId,'GET');\n    }\n\n    createDiagnosis(diagnosisData) {\n        return this.commonServices.dataServiceHandler(\"/fhir/diagnosis\", 'POST',diagnosisData);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/diagnosis.services.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class FhirServices {\n\n    private headers = new Headers({ 'Content-Type': 'application/json', 'charset': 'UTF-8' });\n    private options = new RequestOptions({ headers: this.headers });\n    private changedObservations = [];\n    constructor(private http: Http) { }\n\n    //changedObservations methods\n    setChangedObservations(observations){\n        if(observations.length == 0){\n         this.changedObservations = [];\n        }else{\n         this.changedObservations = observations;\n        }\n    }\n\n    getChangedObservations(){\n         return this.changedObservations;\n    }\n\n    createDiagnosis(diagnosisData) {\n        return this.http.post(\"/fhir/diagnosis\", JSON.stringify(diagnosisData),this.options);\n    }\n\n    getDiagnosis(patientId,patientAdmittedDate) {\n        return this.http.get(\"/fhir/diagnosis/\" + patientId + \"/\" + patientAdmittedDate,this.options);\n    }\n\n    updateDiagnosis(diagnosisId,diagnosisData) {\n        return this.http.put(\"/fhir/diagnosis/\" + diagnosisId, JSON.stringify(diagnosisData),this.options);\n    }\n\n    createProcedure(procedureData) {\n        return this.http.post(\"/fhir/procedure\", JSON.stringify(procedureData),this.options);\n    }\n\n     getProcedure(patientId, patientAdmittedDate)\n    {\n        return this.http.get(\"/fhir/procedure/\" + patientId + \"/\" + patientAdmittedDate, this.options);\n    }\n\n    postScores(diagnosisData)\n    {\n        return this.http.post(\"/fhir/scores/\", JSON.stringify(diagnosisData), this.options )\n    }\n\n    getScores(patientId,patientAdmittedDate) {\n        return this.http.get(\"/fhir/scores/\" + patientId + \"/\" + patientAdmittedDate,this.options);\n    }\n\n    postCvc(diagnosisData)\n    {\n        return this.http.post(\"/fhir/cvc/\", JSON.stringify(diagnosisData), this.options )\n    }\n\n    getCvc(patientId,patientAdmittedDate) {\n        return this.http.get(\"/fhir/cvc/\" + patientId + \"/\" + patientAdmittedDate,this.options);\n    }\n\n    postCurrentProblems(diagnosisData)\n    {\n        return this.http.post(\"/fhir/currentProblems/\", JSON.stringify(diagnosisData), this.options )\n    }\n\n    getCurrentProblems(patientId,patientAdmittedDate) {\n        return this.http.get(\"/fhir/currentProblems/\" + patientId + \"/\" + patientAdmittedDate,this.options);\n    }\n\n    postCardiovascularSystem(diagnosisData)\n    {\n        return this.http.post(\"/fhir/cardiovascularSystem/\", JSON.stringify(diagnosisData), this.options )\n    }\n\n    getCardiovascularSystem(patientId,patientAdmittedDate) {\n        return this.http.get(\"/fhir/cardiovascularSystem/\" + patientId + \"/\" + patientAdmittedDate,this.options);\n    }\n\n    postRespiratorySystem(diagnosisData)\n    {\n        return this.http.post(\"/fhir/respiratorySystem/\", JSON.stringify(diagnosisData), this.options )\n    }\n\n    getRespiratorySystem(patientId,patientAdmittedDate) {\n        return this.http.get(\"/fhir/respiratorySystem/\" + patientId + \"/\" + patientAdmittedDate,this.options);\n    }\n\n    postCentralNervousSystem(diagnosisData)\n    {\n        return this.http.post(\"/fhir/centralNervousSystem/\", JSON.stringify(diagnosisData), this.options )\n    }\n\n    getCentralNervousSystem(patientId,patientAdmittedDate) {\n        return this.http.get(\"/fhir/centralNervousSystem/\" + patientId + \"/\" + patientAdmittedDate,this.options);\n    }\n\n    postFluidElectrolytesNutrition(diagnosisData)\n    {\n        return this.http.post(\"/fhir/fluidElectrolytesNutrition/\", JSON.stringify(diagnosisData), this.options )\n    }\n\n    getFluidElectrolytesNutrition(patientId,patientAdmittedDate) {\n        return this.http.get(\"/fhir/fluidElectrolytesNutrition/\" + patientId + \"/\" + patientAdmittedDate,this.options);\n    }\n\n    postHaematologyInfectionsDisease(diagnosisData)\n    {\n        return this.http.post(\"/fhir/haematologyInfectionsDisease/\", JSON.stringify(diagnosisData), this.options )\n    }\n\n    getHaematologyInfectionsDisease(patientId,patientAdmittedDate) {\n        return this.http.get(\"/fhir/haematologyInfectionsDisease/\" + patientId + \"/\" + patientAdmittedDate,this.options);\n    }\n\n    postMedications(diagnosisData)\n    {\n        return this.http.post(\"/fhir/medications/\", JSON.stringify(diagnosisData), this.options )\n    }\n\n    getMedications(patientId,patientAdmittedDate) {\n        return this.http.get(\"/fhir/medications/\" + patientId + \"/\" + patientAdmittedDate,this.options);\n    }\n\n    postOthers(diagnosisData)\n    {\n        return this.http.post(\"/fhir/others/\", JSON.stringify(diagnosisData), this.options )\n    }\n\n    getOthers(patientId,patientAdmittedDate) {\n        return this.http.get(\"/fhir/others/\" + patientId + \"/\" + patientAdmittedDate,this.options);\n    }\n\n    postPlanForToday(diagnosisData)\n    {\n        return this.http.post(\"/fhir/planForToday/\", JSON.stringify(diagnosisData), this.options )\n    }\n\n    getPlanForToday(patientId,patientAdmittedDate) {\n        return this.http.get(\"/fhir/planForToday/\" + patientId + \"/\" + patientAdmittedDate,this.options);\n    }\n\n    //  postSpecialInstructionObservation(specialinstructionobrData)\n    // {\n    //     return this.http.post(\"/fhir/specialInstructionObservation/\", JSON.stringify(specialinstructionobrData), this.options )\n    // }\n\n    // getSpecialInstructionObservation(patientId, patientAdmittedDate)\n    // {\n    //     return this.http.get(\"/fhir/specialInstruction/\" + patientId + \"/\" + patientAdmittedDate, this.options);\n    // }\n\n    // getSpecialInstruction(patientId,patientAdmittedDate)\n    // {\n    //     return this.http.get(\"/fhir/specialInstructionsObservation/\" + patientId + \"/\" + patientAdmittedDate, this.options);\n    // }\n\n    postNursingCare(nursingCareData)\n    {\n        return this.http.post(\"/fhir/nursingCare/\", JSON.stringify(nursingCareData), this.options )\n    }\n\n     getNursingCare(patientId, patientAdmittedDate)\n    {\n        return this.http.get(\"/fhir/nursingCare/\" + patientId + \"/\" + patientAdmittedDate, this.options);\n    }\n\n    getNursingDevices(patientId, patientAdmittedDate)\n    {\n        return this.http.get(\"/fhir/nursingDevices/\" + patientId + \"/\" + patientAdmittedDate, this.options);\n    }\n\n    getBloodTransfusion(patientId,patientAdmittedDate)\n    {\n        return this.http.get(\"/fhir/bloodTransfusion/\" + patientId + \"/\" + patientAdmittedDate, this.options);\n    }\n\n    // getPractitioner(organizationId)\n    // {\n    //     return this.http.get(\"/fhir/practitioner/\" + organizationId, this.options);\n    // }\n\n    // getNurse(organizationId)\n    // {\n    //     return this.http.get(\"/fhir/nurse/\" + organizationId, this.options);\n    // }\n\n     getFluidSummary(patientId,patientAdmittedDate)\n    {\n        return this.http.get(\"/fhir/fluidSummary/\" + patientId + \"/\" + patientAdmittedDate, this.options);\n    }\n\n    updateNursingCare(nursingCareId,nursingData) {\n        return this.http.put(\"/fhir/nursingCare/\" + nursingCareId, JSON.stringify(nursingData),this.options);\n    }\n\n    //flowsheet services\n    // getFlowSheetData(patientId,patientAdmittedDate){\n    //     return this.http.get(\"/fhir/flowsheet/\" + patientId + \"/\" + patientAdmittedDate,this.options).map(res => res.json());\n    // }\n\n    // updateFlowsheetData(patientId,patientAdmittedDate,flowSheetData){\n    //     return this.http.post(\"/fhir/flowsheet/\" + patientId + \"/\" + patientAdmittedDate, JSON.stringify(flowSheetData),this.options).map(res => res.json());\n    // }\n\n    //Practitioner services\n    getPractitionerByIdentifier(presenceUserId){\n      return this.http.get(\"/fhir/practitioner/\" + presenceUserId ,this.options).map(res => res.json());\n    }\n\n     getPractitionerByRoleAndOrg(role,fhirOrgId){\n      return this.http.get(\"/fhir/practitioner/\" + role + \"/\" + fhirOrgId ,this.options).map(res => res.json());\n    }\n\n    //devices\n    /*getAvailableDevicesByOrg(fhirOrgId){\n      return this.http.get(\"/fhir/device/\" + fhirOrgId ,this.options).map(res => res.json());  \n    }\n\n    getAllDevicesByLocationIdentifier(locationIdentifier) {\n      return this.http.get(\"/fhir/device/all/location/\" + locationIdentifier ,this.options).map(res => res.json());\n    }*/\n\n    // Clinical Document\n    createClinicalDocumentHistoryForm(clinicalData){\n        return  this.http.post(\"/fhir/clinicalDocumentHistoryForm/\",clinicalData,this.options);\n    }\n    getClinicalDocument(patientId,encounterId){\n         return this.http.get(\"/fhir/clinicalDocument/\" + patientId + \"/\" + encounterId ,this.options).map(res => res.json());\n    }\n    editClinicaldocumentHistoryForm(clinicalData){\n        return  this.http.put(\"/fhir/clinicalDocumentHistoryForm/\",clinicalData,this.options);\n    }\n\n    createClinicalDocumentPhysicalForm(clinicalData){\n        return  this.http.post(\"/fhir/clinicalDocumentPhysicalExamForm/\",clinicalData,this.options);\n    }\n    editClinicaldocumentPhysicalForm(clinicalData){\n        return  this.http.put(\"/fhir/clinicalDocumentPhysicalExamForm/\",clinicalData,this.options);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/fhir.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class FlowsheetServices {\n\n    private changedObservations = [];\n    constructor(private commonServices: CommonServices) {}\n\n    //changedObservations methods\n    setChangedObservations(observations){\n        if(observations.length == 0){\n         this.changedObservations = [];\n        }else{\n         this.changedObservations = observations;\n        }\n    }\n\n    getChangedObservations(){\n         return this.changedObservations;\n    }\n\n    getFlowSheetData(patientId,flowsheetId){\n        return this.commonServices.dataServiceHandler(\"/fhir/flowsheet/\" + patientId + \"/\" + flowsheetId,'GET');\n    }\n\n    updateFlowsheetData(patientId,encounterId,flowsheetId,effectiveDate,flowSheetData){\n        return this.commonServices.dataServiceHandler(\"/fhir/flowsheet/\" + patientId + \"/\" + encounterId+\"/\"+flowsheetId+\"/\"+effectiveDate, 'POST', flowSheetData);\n    }\n}   \n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/flowsheet.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\n\nexport class HistoryServices {\n\n    constructor(private commonServices:CommonServices){}\n\n    getClinicalDocumentHistoryForm(patientId,encounterId){\n        return this.commonServices.dataServiceHandler(\"/fhir/clinicalDocumentHistoryForm/\" + patientId + \"/\" + encounterId, 'GET')\n    }\n\n    createClinicaldocumentHistoryForm(historyData){\n        return this.commonServices.dataServiceHandler(\"/fhir/clinicalDocumentHistoryForm/\", 'POST', historyData)\n    }\n\n    updateClinicaldocumentHistoryForm(historyData){\n        return this.commonServices.dataServiceHandler(\"/fhir/clinicalDocumentHistoryForm/\",'PUT', historyData);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/history.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class MedicationIdServices {\n\n    constructor( private commonServices: CommonServices) {}\n\n    getMedicationId(orgId) {\n        return this.commonServices.dataServiceHandler(\"/fhir/medicationid/\" + orgId,'GET');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/medicationId.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class NurseServices {\n\n    constructor(private commonServices: CommonServices) {}\n\n    getPractitionerByIdentifier(presenceUserId){\n      return this.commonServices.dataServiceHandler(\"/fhir/practitioner/\" + presenceUserId,'GET');\n    }\n\n     getPractitionerByRoleAndOrg(role,fhirOrgId){\n      return this.commonServices.dataServiceHandler(\"/fhir/practitioner/\" + role + \"/\" + fhirOrgId,'GET');\n    }\n\n    getNurse(organizationId)\n    {\n        return this.commonServices.dataServiceHandler(\"/fhir/nurse/\" + organizationId, 'GET');\n    }\n}   \n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/nurse.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\n\nexport class NursingCareServices {\n\n    constructor(private commonServices:CommonServices){}\n\n    getNursingCare(patientId,encounterId){\n        return this.commonServices.dataServiceHandler(\"/fhir/nursingCare/\" + patientId + \"/\" + encounterId, 'GET')\n    }\n\n    createNursingCare(nursingCareCreateData){\n        return this.commonServices.dataServiceHandler(\"/fhir/nursingCare/\", 'POST', nursingCareCreateData)\n    }\n\n    updateNursingCare(nursingCareId,nursingData) {\n        return this.commonServices.dataServiceHandler(\"/fhir/nursingCare/\" + nursingCareId, 'PUT', nursingData);\n    }\n\n    getNursingDevices(){\n         return this.commonServices.dataServiceHandler(\"/fhir/nursingDevices/\", 'GET');\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/nursingcare.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class OrdersServices {\n\n    constructor( private commonServices: CommonServices) {}\n\n    getOrders(patientId,encounterId,tag) {\n        return this.commonServices.dataServiceHandler(\"/fhir/orders/\" + patientId + \"/\" + encounterId + \"/\" + tag,'GET');\n    }\n\n    createOrders(ordersData) {\n        return this.commonServices.dataServiceHandler(\"/fhir/orders\", 'POST', ordersData);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/orders.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class PatientFhirServices {\n\n    constructor( private commonServices: CommonServices) {}\n\n    getAllFhirPatients() {\n        return this.commonServices.dataServiceHandler('/fhir/patient/all','GET');\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/patient.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\n\nexport class PhysicalExamServices {\n\n    constructor(private commonServices:CommonServices){}\n\n    getClinicalDocumentPhysicalForm(patientId,encounterId){\n        return this.commonServices.dataServiceHandler(\"/fhir/clinicalDocumentPhysicalExamForm/\" + patientId + \"/\" + encounterId, 'GET')\n    }\n\n    createClinicalDocumentPhysicalForm(physicalExamData){\n        return this.commonServices.dataServiceHandler(\"/fhir/clinicalDocumentPhysicalExamForm/\", 'POST', physicalExamData)\n    }\n\n    updateClinicalDocumentPhysicalForm(physicalExamData){\n        return this.commonServices.dataServiceHandler(\"/fhir/clinicalDocumentPhysicalExamForm/\",'PUT', physicalExamData);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/physical.exam.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class PractitionerServices {\n\n    constructor(private commonServices: CommonServices) {}\n\n    getPractitionerByIdentifier(presenceUserId){\n      return this.commonServices.dataServiceHandler(\"/fhir/practitioner/\" + presenceUserId,'GET');\n    }\n\n     getPractitionerByRoleAndOrg(role,fhirOrgId){\n      return this.commonServices.dataServiceHandler(\"/fhir/practitioner/\" + role + \"/\" + fhirOrgId,'GET');\n    }\n\n    getPractitioner(organizationId)\n    {\n        return this.commonServices.dataServiceHandler(\"/fhir/practitioner/\" + organizationId, 'GET');\n    }\n}   \n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/practitioner.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class ProcedureServices {\n\n    constructor( private commonServices: CommonServices) {}\n\n    createProcedure(procedureData) {\n        return this.commonServices.dataServiceHandler(\"/fhir/procedure\", 'POST',procedureData);\n    }\n\n     getProcedure(patientId, encounterId)\n    {\n        return this.commonServices.dataServiceHandler(\"/fhir/procedure/\" + patientId + \"/\" + encounterId, 'GET');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/procedure.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class ProgressNotesServices {\n\n    constructor(private commonServices: CommonServices) {}\n\n    createProgressNotes(progressData){\n        return this.commonServices.dataServiceHandler(\"/fhir/progressNotes/\", 'POST', progressData)\n    }\n\n    getProgressNotes(patientId,encounterId) {\n        return this.commonServices.dataServiceHandler(\"/fhir/progressNotes/\" + patientId + \"/\" + encounterId + \"/\" , 'GET');\n    }\n}   \n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/progress.notes.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class SpecialInstructionsServices {\n\n    constructor( private commonServices: CommonServices) {}\n\n    postSpecialInstructionsNote(specialinstructionobrData)\n    {\n        return this.commonServices.dataServiceHandler(\"/fhir/specialInstructionsNotes/\", 'POST', specialinstructionobrData)\n    }\n\n    getSpecialInstructionsNotes(patientId, encounterID)\n    {\n        return this.commonServices.dataServiceHandler(\"/fhir/specialInstructionsNotes/\" + patientId + \"/\" + encounterID, 'GET');\n    }\n\n    getSpecialInstructionsVitals(patientId,encounterID)\n    {\n        return this.commonServices.dataServiceHandler(\"/fhir/specialInstructionsVitals/\" + patientId + \"/\" + encounterID, 'GET');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/fhir/special.instructions.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class BedServices {\n\n    constructor(private commonServices: CommonServices) {}\n\n    createBed(bedData) {\n        return  this.commonServices.dataServiceHandler(\"/presence/bed\",'POST',bedData);\n    }\n\n    updateBed(bedData) {\n        return  this.commonServices.dataServiceHandler(\"/presence/bed/\" + bedData.id,'PUT',bedData);\n    }\n\n    getAllBeds() {\n        return  this.commonServices.dataServiceHandler('/api/bed/all','GET');\n    }\n\n    getBedDataByBedID(id) {\n        return  this.commonServices.dataServiceHandler('/api/bed/' + id,'GET');\n    }\n\n    getAllBedsByHospitalID(id) {\n        return  this.commonServices.dataServiceHandler('/api/bed/all/hospital/' + id,'GET');\n    }\n\n    getAllBedsByIcu(id) {\n        return this.commonServices.dataServiceHandler('/api/bed/all/icu/' + id,'GET');\n    }\n\n    deleteBed(id) {\n        return this.commonServices.dataServiceHandler(\"/presence/bed/\" + id,'DELETE');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/bed.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class CameraServices {\n\n    constructor(private commonServices: CommonServices) {}\n\n    createCamera(formData) {\n        return this.commonServices.dataServiceHandler(\"/api/camera\",'POST',formData);\n    }\n\n    updateCamera(formData) {\n        return this.commonServices.dataServiceHandler(\"/api/camera/\" + formData.id,'PUT',formData);\n    }\n\n    getCamera(id) {\n        return this.commonServices.dataServiceHandler('/api/camera/' + id,'GET');\n    }\n\n    getAllCameras() {\n        return this.commonServices.dataServiceHandler('/api/camera/all','GET');\n    }\n\n    getAllCamerasByHospitalID(id) {\n        return this.commonServices.dataServiceHandler('/api/camera/all/hospital/' + id,'GET');\n    }\n\n    getAllCamerasByDepartmentID(id) {\n        return this.commonServices.dataServiceHandler('/api/camera/all/icu/' + id,'GET');\n    }\n\n    deleteCamera(id) {\n        return this.commonServices.dataServiceHandler(\"/api/camera/\" + id,'DELETE');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/camera.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class DashboardServices {\n\n    constructor(private commonServices: CommonServices) {}\n\n    getDashboard() {\n        return  this.commonServices.dataServiceHandler('/api/summaryreport','GET');\n    }\n\n    getDashboardByHospital(id) {\n        return  this.commonServices.dataServiceHandler('/api/summaryreport/hospital/' + id,'GET');\n    }\n\n    getBedSummaryreportByHospital(id) {\n        return  this.commonServices.dataServiceHandler('/api/summaryreport/allbeds/hospital/' + id,'GET');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/dashboard.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class DepartmentServices {\n    \n    constructor(private commonServices: CommonServices) {}\n\n    createDepartment(formData) {\n        return this.commonServices.dataServiceHandler(\"/api/dept\",'POST',formData);\n    }\n\n    updateDepartment(formData) {\n        return this.commonServices.dataServiceHandler(\"/api/dept/\" + formData.id,'PUT',formData);\n    }\n\n    getAllDepartments() {\n        return this.commonServices.dataServiceHandler('/api/dept/all','GET');\n    }\n\n    getDepartment(id) {\n        return this.commonServices.dataServiceHandler('/api/dept/' + id,'GET');\n    }\n\n    deleteDepartment(id) {\n        return this.commonServices.dataServiceHandler(\"/api/dept/\" + id,'DELETE');\n    }\n\n    getAllDepartmentsByHospitalID(id) {\n        return this.commonServices.dataServiceHandler('/api/dept/all/hospital/' + id,'GET');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/department.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class HospitalServices {\n    \n    constructor(private commonServices: CommonServices) {}\n   \n    createHospital(hospitalData,fhirOrgId) {\n        return this.commonServices.dataServiceHandler(\"/presence/hospital/\" + fhirOrgId,'POST',hospitalData);\n    }\n\n    updateHospital(hospitalData,fhirOrgId) {\n       return this.commonServices.dataServiceHandler(\"/presence/hospital/\" + fhirOrgId,'PUT',hospitalData);\n    }\n\n    getAllHospitals() {\n        return this.commonServices.dataServiceHandler('/api/hospital/all','GET');\n    }\n\n    getHospitalDataByHospitalId(hospitalId) {\n        return this.commonServices.dataServiceHandler('/api/hospital/' + hospitalId,'GET');\n    }\n\n    getFhirOrgByHospitalId(hospitalId) {\n        return this.commonServices.dataServiceHandler(\"/presence/hospital/\" + hospitalId,'GET');\n    }\n\n    deleteHospital(hospitalId, fhirOrgId) {\n        return this.commonServices.dataServiceHandler(\"/presence/hospital/\" + hospitalId + \"/org/\" + fhirOrgId,'DELETE');\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/hospital.services.ts","\nimport { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class LoginServices {\n    \n    constructor(private commonServices: CommonServices, private router:Router) { }\n\n    login(loginCredentials) {\n        return this.commonServices.dataServiceHandler(\"/auth/login\",'POST',loginCredentials);\n    }\n\n    logout(){\n        this.commonServices.dataServiceHandler(\"/auth/logout\",'POST').subscribe(\n           data => {\n             sessionStorage.clear();\n             this.router.navigate(['/']);\n             location.reload();\n           }\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/login.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class MeetingServices {\n\n    constructor(private commonServices: CommonServices) {}\n\n    createMeeting(meeting) {\n        return this.commonServices.dataServiceHandler('/api/meeting/create','POST',meeting);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/meeting.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class NotesServices {\n\n    constructor(private commonServices: CommonServices) {}\n\n    createNote(formData) {\n        return this.commonServices.dataServiceHandler(\"/api/notes\",'POST',formData);\n    }\n\n    getAllNotes() {\n        return this.commonServices.dataServiceHandler('/api/summaryreport/allnotes','GET');\n    }\n\n    getNotes(id) {\n        return this.commonServices.dataServiceHandler('/api/notes/all/patient/' + id,'GET');\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/notes.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class PatientServices {\n\n    constructor( private commonServices: CommonServices) {}\n\n    createPatient(patientData,fhirOrgId) {\n        return this.commonServices.dataServiceHandler(\"/presence/patient/\" + fhirOrgId,'POST',patientData);\n    }\n\n    updatePatient(patientData,patientFhirId, fhirOrgId) {\n        return this.commonServices.dataServiceHandler(\"/presence/patient/\" + patientFhirId + \"/org/\" + fhirOrgId,'PUT',patientData);\n    }\n\n    getAllPatients() {\n        return this.commonServices.dataServiceHandler('/api/patient/all','GET');\n    }\n\n    getPatient(id) {\n        return this.commonServices.dataServiceHandler('/api/patient/' + id,'GET');\n    }\n\n    getFhirPatientById(patientId) {\n        return this.commonServices.dataServiceHandler(\"/presence/patient/\" + patientId,'GET');\n    }\n\n    getFhirPatientWithEOCById(patientId) {\n        return this.commonServices.dataServiceHandler(\"/presence/patient/eoc/\" + patientId,'GET');\n    }\n\n    getAllPatientsByHospital(id) {\n        return this.commonServices.dataServiceHandler('/api/patient/all/hospital/' + id,'GET');\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/patient.services.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class RoleServices {\n\n    scope: any[];\n    role: any;\n\n    constructor() { }\n\n    resetRole() {\n        this.role = { read: false, write: false, delete: false };\n    }\n\n    getRole(moduleRole) {\n        this.scope = JSON.parse(sessionStorage.getItem('userScope'));\n\n        this.resetRole();\n\n        if (moduleRole === 'patient') {\n            this.resetRole();\n            this.scope.forEach(currentScope => {\n                if (currentScope === 'PAT_READ') {\n                    this.role.read = true;\n                } else if (currentScope === 'PAT_WRITE') {\n                    this.role.write = true;\n                } else if (currentScope === 'PAT_DELETE') {\n                    this.role.delete = true;\n                }\n            });\n            return this.role;\n        }else if (moduleRole === 'patient-detail') {\n            this.resetRole();\n            this.scope.forEach(currentScope => {\n                if (currentScope === 'PAT_DETAIL_READ') {\n                    this.role.read = true;\n                } else if (currentScope === 'PAT_DETAIL_WRITE') {\n                    this.role.write = true;\n                }\n            });\n            return this.role;\n        } else if (moduleRole === 'hospital') {\n            this.resetRole();\n            this.scope.forEach(currentScope => {\n                if (currentScope === 'HOS_READ') {\n                    this.role.read = true;\n                } else if (currentScope === 'HOS_WRITE') {\n                    this.role.write = true;\n                } else if (currentScope === 'HOS_DELETE') {\n                    this.role.delete = true;\n                }\n            });\n            return this.role;\n        } else if (moduleRole === 'bed') {\n            this.resetRole();\n            this.scope.forEach(currentScope => {\n                if (currentScope === 'BED_READ') {\n                    this.role.read = true;\n                } else if (currentScope === 'BED_WRITE') {\n                    this.role.write = true;\n                } else if (currentScope === 'BED_DELETE') {\n                    this.role.delete = true;\n                }\n            });\n            return this.role;\n        } else if (moduleRole === 'consultant' || moduleRole === 'user') {\n            this.resetRole();\n            this.scope.forEach(currentScope => {\n                if (currentScope === 'USER_READ') {\n                    this.role.read = true;\n                } else if (currentScope === 'USER_WRITE') {\n                    this.role.write = true;\n                } else if (currentScope === 'USER_DELETE') {\n                    this.role.delete = true;\n                }\n            });\n            return this.role;\n        } else if (moduleRole === 'camera') {\n            this.resetRole();\n            this.scope.forEach(currentScope => {\n                if (currentScope === 'CAM_READ') {\n                    this.role.read = true;\n                } else if (currentScope === 'CAM_WRITE') {\n                    this.role.write = true;\n                } else if (currentScope === 'CAM_DELETE') {\n                    this.role.delete = true;\n                }\n            });\n            return this.role;\n        } else if (moduleRole === 'department') {\n            this.resetRole();\n            this.scope.forEach(currentScope => {\n                if (currentScope === 'DEP_READ') {\n                    this.role.read = true;\n                } else if (currentScope === 'DEP_WRITE') {\n                    this.role.write = true;\n                } else if (currentScope === 'DEP_DELETE') {\n                    this.role.delete = true;\n                }\n            });\n            return this.role;\n        } else if (moduleRole === 'notes') {\n            this.resetRole();\n            this.scope.forEach(currentScope => {\n                if (currentScope === 'NOTES_READ') {\n                    this.role.read = true;\n                } else if (currentScope === 'NOTES_WRITE') {\n                    this.role.write = true;\n                } else if (currentScope === 'NOTES_DELETE') {\n                    this.role.delete = true;\n                }\n            });\n            return this.role;\n        } else if (moduleRole === 'meeting') {\n            this.resetRole();\n            this.scope.forEach(currentScope => {\n                if (currentScope === 'MTG_READ') {\n                    this.role.read = true;\n                } else if (currentScope === 'MTG_WRITE') {\n                    this.role.write = true;\n                }\n            });\n            return this.role;\n        }\n    }\n\n    getRoleInfo(role) {\n        if (role === 'CC_ADMIN') {\n            return {\n                \"patients\": true,\n                \"hospital\": true,\n                \"bed\": true,\n                \"consultant\": true\n            }\n        } else if (role === 'CC_CONSULTANT') {\n            return {\n                \"patients\": true,\n                \"hospital\": true,\n                \"bed\": true,\n                \"consultant\": true\n            }\n        } else if (role.startsWith('HOS')) {\n            return {\n                \"patients\": true,\n                \"bed\": true,\n                \"camera\": true,\n                \"department\": true\n            }\n        } else {\n            return {\n                \"patients\": false,\n                \"bed\": false,\n                \"camera\": false,\n                \"department\": false\n            }\n        }\n    }\n\n    ngOnInit() {}\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/role.services.ts","import { Injectable } from '@angular/core';\nimport { CommonServices } from '../common.services';\n\n@Injectable()\nexport class UserServices {\n\n    constructor(private commonServices: CommonServices) {}\n    \n    createUser(formData) {\n        return this.commonServices.dataServiceHandler(\"/user/\",'POST',formData);\n    }\n\n    updateUser(formData) {\n        return this.commonServices.dataServiceHandler(\"/user/\",'PUT',formData);\n    }\n\n    getAllUsers() {\n        return this.commonServices.dataServiceHandler('/api/user/all','GET');\n    }\n\n    getUserInfo(id) {\n        return this.commonServices.dataServiceHandler('/api/user/' + id,'GET');\n    }\n\n    getAllUsersByHospitalID(id) {\n        return this.commonServices.dataServiceHandler('/api/user/all/hospital/' + id,'GET');\n    }\n\n    deleteUser(id,userName,fhirUserId) {\n        return this.commonServices.dataServiceHandler(\"/user/\"+ id +\"/\" + userName+ \"/\"+ fhirUserId,'DELETE');\n    }\n    \n    getTenantInfo(tenantName){\n        return this.commonServices.dataServiceHandler(\"/api/tenant/\"+ tenantName,'GET');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/presence/user.services.ts","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { BedServices } from '../presence/bed.services';\n\n@Injectable()\nexport class BedListResolver implements Resolve<any> {\n    constructor( private bedServices:BedServices){\n\n    }\n\n    resolve(){\n        let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n        if(hospitalId){\n           return this.bedServices.getAllBedsByHospitalID(hospitalId).map(bedList => bedList);        \n        }else{\n           return this.bedServices.getAllBeds().map(bedList => bedList);         \n            }   \n        }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/bed-resolver.services.ts","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { CameraServices } from '../presence/camera.services';\n\n@Injectable()\nexport class CameraListResolver implements Resolve<any> {\n    constructor( private cameraServices:CameraServices){\n    }\n\n    resolve(){\n         let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n         if(hospitalId){\n             return this.cameraServices.getAllCamerasByHospitalID(hospitalId).map(cameraList => cameraList);\n         }else{\n             return this.cameraServices.getAllCameras().map(cameraList => cameraList);\n         }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/camera-resolver.services.ts","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { DepartmentServices } from '../presence/department.services';\n\n@Injectable()\nexport class DepartmentListResolver implements Resolve<any> {\n    constructor( private departmentServices:DepartmentServices){\n\n    }\n\n    resolve(){\n        let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n        if(hospitalId){\n           return this.departmentServices.getAllDepartmentsByHospitalID(hospitalId).map(departmentList => departmentList);  \n        }else{\n            return this.departmentServices.getAllDepartments().map(departmentList => departmentList);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/department-resolver.services.ts","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { DepartmentServices } from '../presence/department.services';\n\n@Injectable()\nexport class DepartmentsByHospitalResolver implements Resolve<any> {\n    constructor( private departmentServices:DepartmentServices){\n\n    }\n\n    resolve(){\n        let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n        return this.departmentServices.getAllDepartmentsByHospitalID(hospitalId).map(departmentList => departmentList);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/departmentsByHospital-resolver.services.ts","import { Injectable } from '@angular/core';\nimport { Resolve} from '@angular/router';\nimport { DeviceServices } from '../fhir/devices.services';\n\n@Injectable()\nexport class DeviceListResolver implements Resolve<any> {\n    constructor(private deviceServices:DeviceServices){}\n\n    resolve(){\n        let fhirOrgId = sessionStorage.getItem('fhirHospitalId');\n        return this.deviceServices.getAvailableDevicesByOrg(fhirOrgId).map(devicesList => devicesList); \n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/device-resolver.services.ts","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { PractitionerServices } from '../fhir/practitioner.services';\n\n@Injectable()\nexport class DoctorsListResolver implements Resolve<any> {\n    constructor( private practitionerServices:PractitionerServices){\n\n    }\n\n    resolve(){\n        let fhirOrgId = sessionStorage.getItem('fhirHospitalId');\n        return this.practitionerServices.getPractitionerByRoleAndOrg('Doctor', fhirOrgId).map(doctorsList => doctorsList);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/doctors-resolver.services.ts","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { HospitalServices } from '../presence/hospital.services';\n\n@Injectable()\nexport class HospitalListResolver implements Resolve<any> {\n    constructor( private hospitalServices:HospitalServices){\n     }\n\n    resolve(){\n        let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n        if(hospitalId){\n            return this.hospitalServices.getHospitalDataByHospitalId(hospitalId)\n                   .map(hospital => {\n                       let hospitalList = [hospital];\n                       return hospitalList;\n                    });\n        }else{\n             return this.hospitalServices.getAllHospitals().map(hospitalList => hospitalList);\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/hospital-resolver.services.ts","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { PractitionerServices } from '../fhir/practitioner.services';\n\n@Injectable()\nexport class NursesListResolver implements Resolve<any> {\n    constructor( private practitionerServices:PractitionerServices){\n\n    }\n\n    resolve(){\n        let fhirOrgId = sessionStorage.getItem('fhirHospitalId');\n        return this.practitionerServices.getPractitionerByRoleAndOrg('Nurse', fhirOrgId).map(nursesList => nursesList);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/nurses-resolver.services.ts","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { PatientServices } from '../presence/patient.services';\n\n@Injectable()\nexport class PatientListResolver implements Resolve<any> {\n    constructor( private patientServices:PatientServices){\n\n    }\n\n    resolve(){\n        let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n        if(hospitalId){\n            return this.patientServices.getAllPatientsByHospital(hospitalId).map(patientList => patientList);\n        }else{\n        return this.patientServices.getAllPatients().map(patientList => patientList);\n            }\n        }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/patient-resolver.services.ts","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { PatientServices } from '../presence/patient.services';\n\n@Injectable()\nexport class PatientsByHospitalResolver implements Resolve<any> {\n    constructor( private patientServices:PatientServices){\n\n    }\n\n    resolve(){\n        let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n        return this.patientServices.getAllPatientsByHospital(hospitalId).map(patientList => patientList);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/patientsByHospital-resolver.services.ts","import { Injectable } from '@angular/core';\nimport { Resolve } from '@angular/router';\nimport { UserServices } from '../presence/user.services';\n\n@Injectable()\nexport class UserListResolver implements Resolve<any> {\n    constructor( private userServices:UserServices){}\n\n    resolve(){\n        let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n        if(hospitalId){\n           return this.userServices.getAllUsersByHospitalID(hospitalId).map(userList => userList);        \n        }else{\n           return this.userServices.getAllUsers().map(userList => userList);         \n        }   \n   }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/services/resolvers/user-resolver.services.ts","/**\n * This barrel file provides the export for the shared ToolbarComponent.\n */\nexport * from './toolbar.component';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/toolbar/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".user-icon-1 {\\n    display: inline-block;\\n}\\n\\n.user-icon-1 i {\\n    font-size: 18px;\\n    display: inline-block;\\n    margin-right: 5px;\\n}\\n\\n.user-icon-2 {\\n    display: block;\\n    text-align: center;\\n}\\n\\n.user-icon-2 i {\\n    font-size: 50px;\\n    color: #fff;\\n}\\n\\n.search-box-panel {\\n    display: inline;\\n}\\n\\n.search-box-panel .sidebar-form {\\n    display: inline-block !important;\\n    width: 80%;\\n    border: 0;\\n    margin-bottom: 0;\\n}\\n\\n.search-box-panel .sidebar-form input[type=\\\"text\\\"]:focus,\\n.search-box-panel .sidebar-form input[type=\\\"text\\\"]:focus+.input-group-btn .btn {\\n    background-color: #fff;\\n    color: #666;\\n}\\n\\n.search-box-panel .sidebar-form input[type=\\\"text\\\"] {\\n    height: 26px;\\n    background-color: #3c8dbc;\\n}\\n\\n.search-box-panel .sidebar-form input[type=\\\"text\\\"]::-webkit-input-placeholder {\\n    color: #fff;\\n}\\n\\n.search-box-panel .sidebar-form .btn {\\n    padding: 0;\\n    color: #3c8dbc;\\n    background-color: #3c8dbc;\\n    height: 26px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/toolbar/toolbar.component.css\n// module id = ../../../../../src/app/toolbar/toolbar.component.css\n// module chunks = 0","module.exports = \"<header class=\\\"main-header\\\">\\n    <a class=\\\"logo\\\">\\n        <span class=\\\"logo-mini\\\"><b>I</b>CU</span>\\n        <span class=\\\"logo-lg\\\"><b>Digital</b> ICU</span>\\n    </a>\\n    <nav class=\\\"navbar navbar-static-top\\\" role=\\\"navigation\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <a href=\\\"javascript:;\\\" class=\\\"sidebar-toggle\\\" data-toggle=\\\"offcanvas\\\" role=\\\"button\\\">\\n                        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                    </a>\\n            <div class=\\\"search-box-panel\\\">\\n                <form action=\\\"#\\\" method=\\\"get\\\" class=\\\"sidebar-form\\\" style=\\\"display: inline-block !important\\\">\\n                    <div class=\\\"input-group\\\">\\n                        <input type=\\\"text\\\" name=\\\"q\\\" [(ngModel)]=\\\"navbarSearchInput\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\n                        <span class=\\\"input-group-btn\\\">\\n                                <button type=\\\"submit\\\" (click)=\\\"search($event.target.value);\\\" name=\\\"search\\\" id=\\\"search-btn\\\" class=\\\"btn btn-flat\\\"><i class=\\\"fa fa-search\\\"></i>\\n                                    <select class=\\\"btn btn-flat\\\" style=\\\"width:25px; height:25px\\\" (blur)=\\\"onChangeSearchOption($event.target.value)\\\" (change)=\\\"onChangeSearchOption($event.target.value)\\\" >\\n                                        <option value=\\\"Patient\\\" select=\\\"selected\\\" *ngIf=\\\"navPatients\\\" >Patient</option>\\n                                        <option value=\\\"Bed\\\" *ngIf=\\\"navBeds\\\">Bed</option>\\n                                        <option value=\\\"Camera\\\" *ngIf=\\\"navCameras\\\">Camera</option>\\n                                        <option value=\\\"Hospital\\\" *ngIf=\\\"navHospitals\\\">Hospital</option>\\n                                        <option value=\\\"Consultant\\\" *ngIf=\\\"navConsultants\\\">Consultant</option>\\n                                        <option value=\\\"Department\\\" *ngIf=\\\"navDepartments\\\">Department</option>\\n                                        <option value=\\\"User\\\" *ngIf=\\\"navAdmin\\\">User</option>\\n                                </select>\\n                                </button>\\n                            </span>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"navbar-custom-menu\\\">\\n                <ul class=\\\"nav navbar-nav\\\">\\n                    <li class=\\\"dropdown user user-menu\\\">\\n                        <a href=\\\"javascript:;\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\n                            <div class=\\\"user-icon-1\\\">\\n                                <i class=\\\"fa fa-user-circle-o\\\" aria-hidden=\\\"true\\\"></i>\\n                            </div>\\n                            <span class=\\\"hidden-xs\\\">{{userName}}</span>\\n                        </a>\\n                        <ul class=\\\"dropdown-menu\\\">\\n                            <li class=\\\"user-header\\\">\\n                                <div class=\\\"user-icon-2\\\">\\n                                    <i class=\\\"fa fa-user-circle-o\\\" aria-hidden=\\\"true\\\"></i>\\n                                </div>\\n                                <p>{{userName}}<small>{{userDesignation}}</small>\\n                                </p>\\n                            </li>\\n                            <li class=\\\"user-body\\\">\\n                                <div class=\\\"text-align-left\\\">\\n                                    <a (click)=\\\"routeLogout()\\\" href=\\\"javascript:;\\\" class=\\\"\\\">Sign out</a>\\n                                </div>\\n                            </li>\\n                        </ul>\\n                    </li>\\n                </ul>\\n            </div>\\n        </div>\\n\\n\\n    </nav>\\n</header>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/toolbar/toolbar.component.html\n// module id = ../../../../../src/app/toolbar/toolbar.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RoleServices } from '../services/presence/role.services';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-toolbar',\n  templateUrl: 'toolbar.component.html',\n  styleUrls: ['toolbar.component.css']\n})\n\nexport class ToolbarComponent implements OnInit {\n\n  userData: any;\n  userName: string;\n  userDesignation: string;\n  navbarSearchInput: any;\n  navPatients: boolean = false;\n  navHospitals: boolean = false;\n  navBeds: boolean = false;\n  navConsultants: boolean = false;\n  navCameras: boolean = false;\n  navDepartments: boolean = false;\n  navAdmin: boolean = false;\n  roleInfo: any;\n  selectedSearchOption: any;\n\n  constructor(private router: Router, private roleServices: RoleServices) { }\n\n  routeLogout() {\n    this.router.navigate(['/']);\n    sessionStorage.clear();\n    location.reload();\n  }\n\n  onChangeSearchOption(selectedSearchOption) {\n    if (this.navbarSearchInput == \"\" || this.navbarSearchInput == undefined) {\n      this.router.navigate(['/']);\n    } else {\n      this.selectedSearchOption = selectedSearchOption;\n      switch (selectedSearchOption) {\n        case \"Bed\":\n          this.router.navigate(['/beds', this.navbarSearchInput]);\n          break;\n\n        case \"Patient\":\n          this.router.navigate(['/patients', this.navbarSearchInput]);\n          break;\n\n        case \"Camera\":\n          this.router.navigate(['/cameras', this.navbarSearchInput]);\n          break;\n\n        case \"Hospital\":\n          this.router.navigate(['/hospitals', this.navbarSearchInput]);\n          break;\n\n        case \"Consultant\":\n          this.router.navigate(['/consultants', this.navbarSearchInput]);\n          break;\n\n        case \"Department\":\n          this.router.navigate(['/departments', this.navbarSearchInput]);\n          break;\n\n        case \"User\":\n          this.router.navigate(['/users', this.navbarSearchInput]);\n          break;\n\n        case \"\":\n          this.router.navigate(['/']);\n          break;\n\n        default:\n          this.router.navigate(['/patients', this.navbarSearchInput]);\n      }\n    }\n  }\n\n  search() {\n    if (this.navbarSearchInput == \"\" || this.navbarSearchInput == undefined) {\n      this.router.navigate(['/']);\n    } else {\n      this.onChangeSearchOption(this.selectedSearchOption)\n    }\n  }\n\n  ngOnInit() {\n      if (JSON.parse(sessionStorage.getItem('userRoleInfo'))) {\n        this.userData = JSON.parse(sessionStorage.getItem('userData'));\n        if (this.userData) {\n          this.userName = this.userData.firstName + ' ' + this.userData.lastName;\n          this.userDesignation = this.userData.designation;\n        }\n        let role = JSON.parse(sessionStorage.getItem('userRoleInfo')).role;\n        this.roleInfo = this.roleServices.getRoleInfo(role);\n        this.navPatients = this.roleInfo.patients;\n        this.navHospitals = this.roleInfo.hospital;\n        this.navBeds = this.roleInfo.bed;\n        this.navConsultants = this.roleInfo.consultant;\n        this.navCameras = this.roleInfo.camera;\n        this.navDepartments = this.roleInfo.department;\n        if (role.indexOf('ADMIN') > -1) {\n          this.navAdmin = true;\n        }\n      }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/toolbar/toolbar.component.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './user.create.component';\nexport * from './user.create.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/user_create/index.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".user-create .data-lable {\\n    display: block;\\n    padding-top: 7px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/user_create/user.create.component.css\n// module id = ../../../../../src/app/user_create/user.create.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header user-create\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <h1 class=\\\"sub-page-header\\\">\\n                User\\n                <small>({{mode}})</small>\\n            </h1>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n            <div class=\\\"top-action-buttons\\\">\\n                <div class=\\\"btn-group\\\">\\n                    <a (click)=\\\"routeUsers()\\\" class=\\\"btn bg-default\\\" title=\\\"Back\\\"><i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i></a>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6\\\">\\n            <ol class=\\\"breadcrumb\\\">\\n                <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                <li><a (click)=\\\"routeUsers()\\\"><i class=\\\"fa fa-user\\\"></i> Users</a></li>\\n                <li class=\\\"active\\\"><i class=\\\"fa fa-plus\\\"></i> {{mode}} User</li>\\n            </ol>\\n        </div>\\n        <div class=\\\"col-md-6\\\">\\n        </div>\\n    </div>\\n</section>\\n<section class=\\\"user-create\\\">\\n    <form class=\\\"form-horizontal\\\" [formGroup]=\\\"createUserForm\\\" (ngSubmit)=\\\"save(createUserForm.value, createUserForm.valid)\\\" novalidate>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n                <div class=\\\"box box-info\\\">\\n                    <div class=\\\"box-header with-border\\\">\\n                        <h3 class=\\\"box-title\\\">{{mode}} User</h3>\\n                    </div>\\n                    <div class=\\\"box-body\\\">\\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-6\\\">\\n                                <!--<div class=\\\"form-group\\\" *ngIf=\\\"adminUser\\\" >-->\\n                                <div class=\\\"form-group\\\">    \\n                                    <label class=\\\"col-sm-3 control-label\\\">User Type</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <label *ngIf=\\\"mode == 'Edit'\\\" class=\\\"data-lable\\\">{{editUserType}}</label>\\n                                        <select *ngIf=\\\"mode != 'Edit'\\\" class=\\\"form-control\\\" name=\\\"userType\\\" id=\\\"userType\\\" formControlName=\\\"userType\\\" (change)=\\\"onChangeUserType($event.target.value)\\\" required>\\n                                            <option value=\\\"\\\" selected=\\\"selected\\\">Choose User Type</option>\\n                                            <option *ngFor=\\\"let type of allUsersType\\\" [value]=\\\"type.id\\\">{{type.name}}</option>\\n                                        </select>\\n                                        <small *ngIf=\\\"mode != 'Edit'\\\" class=\\\"form-error\\\" [hidden]=\\\"createUserForm.controls.userType.valid || (createUserForm.controls.userType.pristine && !submitted)\\\">\\n                                               Select user type.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\" *ngIf=\\\"showHospitalList\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Hospital</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <select class=\\\"form-control\\\" name=\\\"userType\\\" id=\\\"userType\\\" [(ngModel)]=\\\"selectedHospital\\\" formControlName=\\\"hospitalId\\\" required>\\n                                            <option value=\\\"\\\" selected=\\\"selected\\\">Choose Hospital</option>\\n                                            <option *ngFor=\\\"let hospital of hospitals\\\" [value]=\\\"hospital.id\\\">{{hospital.name}}</option>\\n                                        </select>\\n                                        <small *ngIf=\\\"mode != 'Edit'\\\" class=\\\"form-error\\\" [hidden]=\\\"createUserForm.controls.hospitalId.valid || (createUserForm.controls.hospitalId.pristine && !submitted)\\\">\\n                                               Select hospital.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\" *ngIf=\\\"(!showHospitalList && hospitalUser) || (mode == 'Edit' && showHospital)\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Hospital</label>\\n                                   <div class=\\\"col-sm-9\\\">\\n                                       <label class=\\\"control-label\\\">{{hospitalName}}</label>\\n                                   </div>\\n                               </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">User ID</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <label *ngIf=\\\"mode == 'Edit'\\\" class=\\\"data-lable\\\">{{editUserId}}{{tenantName}}</label>\\n                                        <div class=\\\"input-group\\\">\\n                                            <input *ngIf=\\\"mode != 'Edit'\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter User Id\\\" pattern=\\\"^\\\\w[a-zA-Z0-9._-]*$\\\" formControlName=\\\"userID\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" required>\\n                                            <span *ngIf=\\\"mode != 'Edit'\\\" class=\\\"input-group-addon\\\">{{tenantName}}</span>\\n                                        </div>\\n                                        <small *ngIf=\\\"mode != 'Edit'\\\" class=\\\"form-error\\\" [hidden]=\\\"createUserForm.controls.userID.valid || (createUserForm.controls.userID.pristine && !submitted)\\\">\\n                                                User name pattern policy violated. User name can only contain digit[0-9], lower case letter[a-z], upper case letter[A-Z], special character[_-.] and maximum number of characters can be 30.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\" *ngIf=\\\"createMode\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Password</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Password\\\" formControlName=\\\"password\\\" minlength=\\\"6\\\" maxlength=\\\"12\\\" pattern=\\\"^((?=.*\\\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%&*])).{0,100}$\\\" required=\\\"required\\\">\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createUserForm.controls.password.valid || (createUserForm.controls.password.pristine && !submitted)\\\">\\n                                            Password pattern policy violated. Password should contain a digit[0-9], a lower case letter[a-z], an upper case letter[A-Z], one of !@#$%&* characters.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\" *ngIf=\\\"createMode\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\">Confirm Password</label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Confirm Password\\\" formControlName=\\\"confirmPassword\\\" maxlength=\\\"12\\\" required=\\\"required\\\">\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createUserForm.controls.confirmPassword.valid || (createUserForm.controls.confirmPassword.pristine && !submitted)\\\">\\n                                            Enter password again to confirm.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-6\\\">\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\"> First Name </label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter First Name\\\" formControlName=\\\"firstName\\\" maxlength=\\\"30\\\" required=\\\"required\\\">\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createUserForm.controls.firstName.valid || (createUserForm.controls.firstName.pristine && !submitted)\\\">\\n                                            Frist name is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\"> Last Name </label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Last Name\\\" formControlName=\\\"lastName\\\" maxlength=\\\"30\\\" required=\\\"required\\\">\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createUserForm.controls.lastName.valid || (createUserForm.controls.lastName.pristine && !submitted)\\\">\\n                                            Last name is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\"> Designation </label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Designation\\\" formControlName=\\\"designation\\\">\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createUserForm.controls.designation.valid || (createUserForm.controls.designation.pristine && !submitted)\\\">\\n                                        Designation is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\"> Qualification </label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Qualification\\\" formControlName=\\\"qualification\\\">\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createUserForm.controls.qualification.valid || (createUserForm.controls.qualification.pristine && !submitted)\\\">\\n                                        Qualification is required.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\"> Mobile </label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Mobile No\\\" formControlName=\\\"mobile\\\" maxlength=\\\"15\\\" pattern=\\\"^[\\\\d\\\\ \\\\-+]+$\\\">\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createUserForm.controls.mobile.valid || (createUserForm.controls.mobile.pristine && !submitted)\\\">\\n                                            Mobile number should be 10 digit.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                                <div class=\\\"form-group\\\">\\n                                    <label class=\\\"col-sm-3 control-label\\\"> E-mail </label>\\n                                    <div class=\\\"col-sm-9\\\">\\n                                        <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Enter email\\\" formControlName=\\\"email\\\" pattern=\\\"[a-zA-Z0-9!#$%&'*+=?^_`{|}~-]+(?:\\\\.[a-z0-9!#$%&'*+=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\\" required>\\n                                        <small class=\\\"form-error\\\" [hidden]=\\\"createUserForm.controls.email.valid || (createUserForm.controls.email.pristine && !submitted)\\\">\\n                                            E-mail is required and it should be a proper E-mail id.\\n                                        </small>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>                        \\n                        <div class=\\\"row\\\">\\n                            <div class=\\\"col-md-12\\\">\\n                                <div class=\\\"box-header\\\">\\n                                    <div class=\\\"box-footer text-align-right\\\" *ngIf=\\\"!disableCreateAction\\\">\\n                                        <button type=\\\"button\\\" (click)=\\\"routeUsers()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                                        <button type=\\\"submit\\\" class=\\\"btn btn-info margin\\\">\\n                                            <span *ngIf=\\\"createMode\\\">Create</span>\\n                                            <span *ngIf=\\\"!createMode\\\">Update</span>\\n                                        </button>\\n                                    </div>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </form>\\n</section>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/user_create/user.create.component.html\n// module id = ../../../../../src/app/user_create/user.create.component.html\n// module chunks = 0","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\nimport { UserServices } from '../services/presence/user.services';\nimport { HospitalServices } from '../services/presence/hospital.services';\nimport { PractitionerServices } from '../services/fhir/practitioner.services';\nimport { CommonServices } from '../services/common.services';\nimport { UserInterface } from './user.interface';\nimport { ModelMessage } from '../model_message/model.message';\n\n@Component({\n    moduleId: module.id,\n    selector: 'cm-user-create',\n    templateUrl: 'user.create.component.html',\n    styleUrls: ['user.create.component.css']\n})\n\nexport class UserCreateComponent implements OnInit, OnDestroy {\n\n    public createUserForm: FormGroup;\n    createMode: boolean = true;\n    mode: string = 'Create';\n    public submitted: boolean;\n    private sub: any;\n    userData: any;\n    hospitalID: any;\n    hospitalName: any;\n    editUserType: any;\n    editUserId: any;\n    tenantName: any;\n    allUsersType: any;\n    hospitals: any;\n    selectedHospital: any;\n    hospitalUser: boolean = false;\n    showHospitalList: boolean = false;\n    showHospital: boolean = false;\n    disableCreateAction: boolean = false;\n\n    constructor(private router: Router, private route: ActivatedRoute, private fb: FormBuilder, private practitionerServices: PractitionerServices, private commonServices: CommonServices, private userServices: UserServices, private hospitalServices:HospitalServices, private modelMessage: ModelMessage) { }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    routeUsers() {\n        this.router.navigate(['/users']);\n    }\n\n    onChangeUserType(type) {\n        if (type.startsWith('HOS') && !this.hospitalUser) {\n            this.showHospitalList = true;\n        } else {\n            this.showHospitalList = false;\n        }\n    }\n\n    updateUser(userData){\n        this.disableCreateAction = true; \n        this.userServices.updateUser(userData).subscribe(\n            data => {\n                let msg = \"User \" + userData.firstName + \" was updated\";\n                this.modelMessage.successMessage(msg);\n                this.routeUsers();\n            },\n            error => {\n                this.disableCreateAction = false; \n                this.modelMessage.errorMessage(error.json());\n            }\n        ); \n    }\n\n    createUser(userData){\n      this.disableCreateAction = true;\n      this.userServices.createUser(userData).subscribe(\n        data => {\n            let msg = \"User \" + userData.firstName + \" was created\";\n            this.modelMessage.successMessage(msg);\n            this.routeUsers();\n        },\n        error => {\n            this.disableCreateAction = false; \n            this.modelMessage.errorMessage(error.json());\n        }\n     );\n    }\n\n    save(model: UserInterface, isValid: Boolean) {\n        if (model.password !== model.confirmPassword) {\n            this.modelMessage.errorMessage({ statusText: 'Password does not match the confirm password.' });\n        } else {\n        this.submitted = true;\n        if (isValid) {\n            if (this.createMode) { \n                this.disableCreateAction = true;\n                delete model.confirmPassword;\n                if(this.hospitalUser){\n                    model.hospitalId = this.hospitalID;\n                    model.fhirHospitalId = sessionStorage.getItem('fhirHospitalId');\n                  this.createUser(model);\n                }else if(!this.hospitalUser && model.userType.startsWith(\"HOS\")){\n                    this.disableCreateAction = true;\n                    this.hospitalServices.getFhirOrgByHospitalId(model.hospitalId).subscribe(\n                        data => {\n                            let responseData:any = data || {};\n                            if(responseData.id){\n                               model.fhirHospitalId = responseData.id;\n                               this.createUser(model);\n                            }\n                            else{\n                               this.disableCreateAction = false;\n                               let errorResponse = {status: 500, statusText: \"Failed to create patient\"};\n                               this.modelMessage.errorMessage(errorResponse);\n                            }\n                        },\n                        error => {\n                            this.disableCreateAction = false;\n                            let errorResponse = {status: 500, statusText: \"Failed to create patient\"};\n                            this.modelMessage.errorMessage(errorResponse);\n                        }\n                    );\n                }else{\n                   this.createUser(model);\n                }\n            }\n            \n            else {\n                this.disableCreateAction = true;\n                model.zoomUserId = JSON.parse(sessionStorage.getItem('userData')).zoomUserId;\n                if(model.userType === \"HOSPITAL_DOCTOR\" || model.userType === \"HOSPITAL_NURSE\"){\n                   this.practitionerServices.getPractitionerByIdentifier(model.id).subscribe(\n                       data => {\n                           let responseData:any = data || {};\n                           if(responseData.id){\n                              model.fhirHospitalId = responseData.fhirOrgId; \n                              model.fhirId = responseData.id;\n                              this.updateUser(model);\n                           }else{\n                               this.disableCreateAction = false;\n                               let errorResponse = {status: 500, statusText: \"Failed to update patient\"};\n                               this.modelMessage.errorMessage(errorResponse);\n                           }\n                       },\n                       error => {\n                           this.disableCreateAction = false;\n                           this.modelMessage.errorMessage(error.json());\n                       }\n                   );\n                }else{\n                   this.updateUser(model);\n               }\n            }\n         }\n       }\n     }\n    initiateUserForm() {\n        this.createUserForm = new FormGroup({\n            id: new FormControl(''),\n            designation: new FormControl(''),\n            email: new FormControl(''),\n            firstName: new FormControl(''),\n            lastName: new FormControl(''),\n            hospitalId: new FormControl(''),\n            mobile: new FormControl(''),\n            qualification: new FormControl(''),\n            userID: new FormControl(''),\n            userType: new FormControl(''),\n            password: new FormControl(''),\n            confirmPassword: new FormControl('')\n        });\n    }\n\n    createEditUserForm(data) {\n        this.editUserType = this.allUsersType.find(userType => userType.id === data.userType).name;\n        this.editUserId = data.userID;\n        if (data.userType.startsWith('HOS') && !this.hospitalUser) {\n          this.showHospital = true;  \n          this.hospitalName = this.hospitals.find(hospital => hospital.id == data.hospitalId).name;\n        }else{\n            this.showHospital = false;\n        }\n        this.createUserForm = new FormGroup({\n            id: new FormControl(data.id),\n            designation: new FormControl(data.designation),\n            email: new FormControl(data.email),\n            firstName: new FormControl(data.firstName),\n            hospitalId: new FormControl(data.hospitalId),\n            lastName: new FormControl(data.lastName),\n            mobile: new FormControl(data.mobile),\n            qualification: new FormControl(data.qualification),\n            userID: new FormControl(data.userID),\n            userType: new FormControl(data.userType)\n        });\n    }\n\n\n    ngOnInit() {\n        this.userData = JSON.parse(sessionStorage.getItem('userData'));\n        this.hospitalID = this.userData.hospitalId;\n        this.tenantName = '@' + sessionStorage.tenantName;\n        this.hospitals = this.route.snapshot.data['hospitalList'];\n        if (this.userData.userType === 'CC_ADMIN') {\n            this.allUsersType = this.commonServices.getUserTypes();\n        } else {\n            this.showHospitalList = false;\n            this.hospitalUser = true;\n            this.hospitalName = this.hospitals.find(hospital => hospital.id == this.hospitalID).name;\n            this.allUsersType = this.commonServices.getUserTypes().filter(userType => userType.id.startsWith('HOS'));\n        }\n\n        this.initiateUserForm();\n       \n        this.sub = this.route.params.subscribe(params => {\n            if (params['id']) {\n                this.mode = 'Edit';\n                this.createMode = false;\n                this.userServices.getUserInfo(params['id']).subscribe(\n                    data => {\n                        let responseData:any = data || {};\n                        this.selectedHospital = responseData.hospitalId;\n                        this.createEditUserForm(responseData);\n                    },\n                    error => {\n                        this.modelMessage.errorMessage(error);\n                    }\n                );\n            }\n        });\n    }\n\n    ngOnDestroy() { }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/user_create/user.create.component.ts","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserCreateComponent } from './user.create.component';\n\n@NgModule({\n    imports: [CommonModule, BrowserModule, FormsModule, ReactiveFormsModule],\n    declarations: [UserCreateComponent],\n    exports: [UserCreateComponent, FormsModule, ReactiveFormsModule]\n})\n\nexport class UserCreateModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/user_create/user.create.module.ts","import { Route } from '@angular/router';\nimport { UserCreateComponent } from './index';\nimport { HospitalListResolver } from '../services/resolvers/hospital-resolver.services';\n\nexport const UserCreateRoutes: Route[] = [\n    {\n        path: 'user/create',\n        component: UserCreateComponent,\n        resolve: {hospitalList: HospitalListResolver}\n    }, {\n        path: 'user/create/:id',\n        component: UserCreateComponent,\n        resolve: {hospitalList: HospitalListResolver}\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/user_create/user.create.routes.ts","/**\n * This barrel file provides the export for the lazy loaded AboutComponent.\n */\nexport * from './users.component';\nexport * from './users.routes';\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/index.ts","import {Injectable, Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({\n  name: 'UserSearch'\n})\n\n@Injectable()\n\nexport class UserSearch implements PipeTransform {\n    transform(value: any, searchTerm: string) \n    {\n       let filter = searchTerm.toUpperCase();\n       return filter ? value.filter(patient=> patient.firstName.toUpperCase().indexOf(filter) != -1 \n                                           || patient.lastName.toUpperCase().indexOf(filter) != -1\n                                           || patient.userType.toUpperCase().indexOf(filter) != -1) : value \n    }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/search.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".users .widget-user-2 .widget-user-username, .users .widget-user-2 .widget-user-desc {\\n    margin-left: 0;\\n}\\n\\n.users .widget-user-2 .widget-user-header {\\n    padding: 5px;\\n}\\n\\n.users .card-list-key {\\n    display: inline-block;\\n    width: 90px;\\n    color: #666;\\n}\\n\\n.users .card-list-value {\\n    /*display: inline-block;*/\\n}\\n\\n.users .widget-user-2 .widget-user-image>img {\\n    width: 100px;\\n}\\n\\n.users .box-widget {\\n    border: solid 1px #7fdff7;\\n}\\n\\n.users .box-widget:hover .widget-user-header {\\n    background-color: #00c0ef;\\n    color: #fff;\\n}\\n\\n.users .widget-user-2 .box-footer ul li a:hover {\\n    cursor: default;\\n}\\n\\n.users .btn-bitbucket, .users .btn-flickr {\\n    background-color: #0099bf;\\n}\\n\\n.users .btn-social {\\n    padding-left: 30px;\\n    padding-bottom: 2px;\\n    padding-top: 2px;\\n}\\n\\n.users .btn-social> :first-child {\\n    width: 28px;\\n    line-height: 25px;\\n    font-size: 20px;\\n}\\n\\n.users .action-buttons {\\n    margin-top: 10px;\\n}\\n\\n.users .action-buttons a {\\n    display: inline-block;\\n    margin-right: 10px;\\n}\\n\\n.users .action-buttons a i {\\n    font-size: 20px;\\n}\\n\\n.users table.table {\\n    border: 1px solid #d2d6de;\\n    display: table;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/users.component.css\n// module id = ../../../../../src/app/users/users.component.css\n// module chunks = 0","module.exports = \"<section class=\\\"content-header users\\\">\\n     <div class=\\\"row\\\">\\n         <div class=\\\"col-md-6\\\">\\n             <h1 class=\\\"sub-page-header\\\">\\n             Users\\n             <small>(All)</small>\\n           </h1>\\n         </div>\\n         <div class=\\\"col-md-6\\\">\\n             <div class=\\\"top-action-buttons\\\">\\n                 <div class=\\\"btn-group\\\">\\n                     <a (click)=\\\"clickGridView()\\\" [ngClass]=\\\"activeBtnGrid\\\" class=\\\"btn bg-default\\\" title=\\\"Grid View\\\"><i class=\\\"fa fa-th\\\"></i></a>\\n                     <a (click)=\\\"clickListView()\\\" [ngClass]=\\\"activeBtnList\\\" class=\\\"btn bg-default btn-mid-border\\\" title=\\\"List View\\\"><i class=\\\"fa fa-align-justify\\\"></i></a>\\n                     <a (click)=\\\"routeCreateUser()\\\" *ngIf=\\\"roleWrite\\\" class=\\\"btn bg-default\\\" title=\\\"Create User\\\"><i class=\\\"fa fa-plus\\\"></i></a>\\n                 </div>\\n             </div>\\n         </div>\\n     </div>\\n     <div class=\\\"row\\\">\\n         <div class=\\\"col-md-6\\\">\\n             <ol class=\\\"breadcrumb\\\">\\n                 <li><a (click)=\\\"routeDashboard()\\\"><i class=\\\"fa fa-dashboard\\\"></i> Dashboard</a></li>\\n                 <li class=\\\"active\\\"><i class=\\\"fa fa-user\\\"></i> Users</li>\\n             </ol>\\n         </div>\\n         <div class=\\\"col-md-6\\\">\\n             <div class=\\\"input-group\\\">\\n                 <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"userSearchBoxInput\\\" placeholder=\\\"Search Users...\\\" #listFilter (keyup)=\\\"0\\\">\\n                 <span class=\\\"input-group-addon\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n             </div>\\n         </div>\\n     </div>\\n </section>\\n <section class=\\\"users\\\">\\n     <div class=\\\"row\\\" *ngIf=\\\"userGridView\\\">\\n         <div class=\\\"col-xs-12 col-sm-6 col-md-4 col-lg-3 col-xl-3 col-xxl-5\\\" *ngFor=\\\"let user of users | UserSearch:listFilter.value;\\\">\\n             <div class=\\\"box box-widget widget-user-2\\\">\\n                 <div class=\\\"widget-user-header bg-info\\\">\\n                     <h3 class=\\\"widget-user-username text-ellipsis\\\" title=\\\"{{user.firstName}} {{user.lastName}}\\\">{{user.firstName}} {{user.lastName}}</h3>\\n                     <div class=\\\"action-buttons widget-user-desc\\\">\\n                          <a (click)=\\\"clickEdit(user.id)\\\" *ngIf=\\\"roleWrite\\\">\\n                              <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                          </a>\\n                         <a (click)=\\\"clickDeleteConfirm(user)\\\" *ngIf=\\\"disableDelete(user.id)\\\">\\n                             <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n                         </a>\\n                      </div>\\n                  </div>\\n                  <div class=\\\"box-footer no-padding\\\">\\n                     <ul class=\\\"nav nav-stacked\\\">\\n                         <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Designation</span><span class=\\\"card-list-value\\\" title=\\\"{{user.userType}}\\\">: {{user.designation}}</span></a></li>\\n                         <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Qualification</span><span class=\\\"card-list-value\\\" title=\\\"{{user.userType}}\\\">: {{user.qualification}}</span></a></li>\\n                         <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Email</span><span class=\\\"card-list-value\\\" title=\\\"{{user.userType}}\\\">: {{user.email}}</span></a></li>\\n                         <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">Mobile</span><span class=\\\"card-list-value\\\" title=\\\"{{user.userType}}\\\">: {{user.mobile}}</span></a></li>\\n                         <li><a class=\\\"text-ellipsis\\\"><span class=\\\"card-list-key\\\">User Type</span><span class=\\\"card-list-value\\\" title=\\\"{{user.userType}}\\\">: {{user.userType}}</span></a></li>\\n                     </ul>\\n                 </div>\\n             </div>\\n         </div>\\n     </div>\\n     <div class=\\\"row\\\" *ngIf=\\\"userListView\\\">\\n         <div class=\\\"col-md-12\\\">\\n             <table class=\\\"table table-bordered\\\">\\n                 <thead>\\n                     <tr>\\n                         <th>\\n                             Name\\n                         </th>\\n                         <th>\\n                             Designation\\n                         </th>\\n                         <th>\\n                             Qualification\\n                         </th>\\n                         <th>\\n                             Email\\n                         </th>\\n                         <th>\\n                             Mobile\\n                         </th>\\n                         <th>\\n                             Landline\\n                         </th>\\n                         <th>\\n                             User Type\\n                         </th>\\n                         <th>\\n                             Action\\n                         </th>\\n                     </tr>\\n                 </thead>\\n                 <tbody>\\n                     <tr *ngFor=\\\"let user of users | UserSearch:listFilter.value;\\\">\\n                         <td>\\n                             {{user.firstName}} {{user.lastName}}\\n                         </td>\\n                         <td>\\n                             {{user.designation}}\\n                         </td>\\n                         <td>\\n                             {{user.qualification}}\\n                         </td>\\n                         <td>\\n                             {{user.email}}\\n                         </td>\\n                         <td>\\n                             {{user.mobile}}\\n                         </td>\\n                         <td>\\n                             {{user.landline}}\\n                         </td>\\n                         <td>\\n                             {{user.userType}}\\n                         </td>\\n                         <td>\\n                             <div class=\\\"action-buttons\\\">\\n                                  <a (click)=\\\"clickEdit(user.id)\\\" *ngIf=\\\"roleWrite\\\">\\n                                      <i class=\\\"fa fa-pencil\\\" aria-hidden=\\\"true\\\"></i>\\n                                  </a>\\n                                 <a (click)=\\\"clickDeleteConfirm(user.id, user.firstName, user.lastName)\\\" *ngIf=\\\"roleWrite\\\">\\n                                     <i class=\\\"fa fa-trash-o\\\" aria-hidden=\\\"true\\\"></i>\\n                                 </a>\\n                              </div>\\n                          </td>\\n                      </tr>\\n                 </tbody>\\n             </table>\\n         </div>\\n      </div>\\n  </section>\\n  \\n <div class=\\\"modal deleteConfirmPopUp\\\" role=\\\"dialog\\\">\\n     <div class=\\\"modal-dialog\\\">\\n         <div class=\\\"modal-content\\\">\\n             <div class=\\\"modal-header\\\">\\n                 <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"clickClosePopup()\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                 <h4 class=\\\"modal-title\\\">User Delete Confirmation</h4>\\n             </div>\\n             <div class=\\\"modal-body\\\">\\n                 Are you sure you want to delete user <strong>{{deleteUsername}}</strong>?\\n             </div>\\n             <div class=\\\"modal-footer\\\">\\n                 <button type=\\\"button\\\" (click)=\\\"clickClosePopup()\\\" class=\\\"btn btn-default\\\">Cancel</button>\\n                 <button type=\\\"button\\\" (click)=\\\"clickDelete()\\\" class=\\\"btn btn-primary\\\">Delete</button>\\n             </div>\\n         </div>\\n     </div>\\n </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/users.component.html\n// module id = ../../../../../src/app/users/users.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { RoleServices } from '../services/presence/role.services';\nimport { UserServices } from '../services/presence/user.services';\nimport { PractitionerServices } from '../services/fhir/practitioner.services';\nimport { CommonServices } from '../services/common.services';\nimport { ModelMessage } from '../model_message/model.message';\nimport * as $ from 'jquery';\n\n@Component({\n    moduleId: module.id,\n    selector: 'users',\n    templateUrl: './users.component.html',\n    styleUrls: ['users.component.css']\n})\n\nexport class UsersComponent implements OnInit {\n\n    userGridView: boolean = true;\n    userListView: boolean = false;\n    activeBtnGrid: string = \"bg-info\";\n    activeBtnList: string = \"\";\n    roleWrite: boolean = false;\n    users: any;\n    loggedInUserData: any;\n    deleteUserID:any;\n    deleteWso2UserId:any;\n    deleteFhirUserId:any;\n    deleteUsername:any;\n    deleteUserData:any;\n    userSearchBoxInput: any;\n\n\n    constructor(private router: Router, private route: ActivatedRoute, private roleServices: RoleServices,private practitionerServices: PractitionerServices, private commonServices: CommonServices, private userServices: UserServices, private modelMessage: ModelMessage) { }\n\n    routeDashboard() {\n        this.router.navigate(['/']);\n    }\n\n    routeCreateUser() {\n        this.router.navigate(['/user/create']);\n    }\n\n    getusers() {\n        let hospitalId = JSON.parse(sessionStorage.getItem('userData')).hospitalId;\n        if(hospitalId){\n           return this.userServices.getAllUsersByHospitalID(hospitalId).subscribe(\n                    data => {\n                        this.users = data;\n                        this.mapUserTypes();\n                    },\n                    error => {\n                        this.modelMessage.errorMessage(error);\n                    }\n                  );      \n        }else{\n           return this.userServices.getAllUsers().subscribe(\n                    data => {\n                        this.users = data;\n                        this.mapUserTypes();\n                    },\n                    error => {\n                        this.modelMessage.errorMessage(error);\n                    }\n                  );         \n        } \n    }\n\n    clickGridView() {\n        this.activeBtnGrid = \"bg-info\";\n        this.activeBtnList = \"\";\n        this.userGridView = true;\n        this.userListView = false;\n    }\n\n    clickListView() {\n        this.activeBtnGrid = \"\";\n        this.activeBtnList = \"bg-info\";\n        this.userGridView = false;\n        this.userListView = true;\n    }\n\n    clickEdit(id) \n    { \n        this.router.navigate(['/user/create/', id])\n    }\n\n    clickDeleteConfirm(deleteUser) {\n        this.deleteUserData = deleteUser;\n        $('.deleteConfirmPopUp').show();\n    }\n\n    clickClosePopup() {\n        $('.deleteConfirmPopUp').hide();\n    }\n\n    deleteUser(){\n       let msg = 'User ' + this.deleteUserData.firstName + ' ' + this.deleteUserData.lastName +' deleted';\n       this.userServices.deleteUser(this.deleteUserData.id,this.deleteUserData.userID,this.deleteFhirUserId).subscribe(\n            data => {\n                this.getusers();\n                $('.deleteConfirmPopUp').hide();\n                this.modelMessage.successMessage(msg);\n            },\n            error => {\n                this.modelMessage.errorMessage(error);\n            }\n        );\n    }\n\n    clickDelete() {\n        if(this.deleteUserData.userType === \"HOSPITAL_DOCTOR\" || this.deleteUserData.userType === \"HOSPITAL_NURSE\"){\n            this.practitionerServices.getPractitionerByIdentifier(this.deleteUserData.id).subscribe(\n                data => {\n                    let responseData:any = data || {}; \n                    if(responseData.id){ \n                        this.deleteFhirUserId = responseData.id;\n                        this.deleteUser();\n                    }else{\n                        let errorResponse = {status: 500, statusText: \"Failed to update patient\"};\n                        this.modelMessage.errorMessage(errorResponse);\n                    }\n                },\n                error => {\n                    this.modelMessage.errorMessage(error.json());\n                }\n            );\n        }else{\n            this.deleteFhirUserId = \"notHospitalUser\";\n            this.deleteUser();\n        }\n    }\n\n    disableDelete(userId){\n        let loggedInUserId = JSON.parse(sessionStorage.getItem('userData')).id;\n        \n        if(loggedInUserId==userId){\n            return false\n        }\n        return this.roleWrite;\n    }\n    \n    mapUserTypes(){\n        this.users = this.users.map(user => {\n            let userTypes: any = this.commonServices.getUserTypes();\n            let userType = userTypes.find(userType => userType.id == user.userType);\n            if(userType){\n                user.userType = userType.name;\n            }\n            return user;\n        });\n    }\n\n\n\n    ngOnInit() {\n        let userRole = this.roleServices.getRole('user');\n        if (userRole.write) {\n            this.roleWrite = true;\n        }\n        this.users = this.route.snapshot.data['userList'];\n        this.mapUserTypes();\n        //this.disableDelete();\n        this.route.params.subscribe(params => {\n             if (params['search']) {\n                 this.userSearchBoxInput = params['search'];\n             }\n         });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/users.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { UsersComponent } from './users.component';\nimport { FormsModule } from '@angular/forms';\nimport {UserSearch} from '../users/search'\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [UsersComponent,UserSearch],\n    exports: [UsersComponent]\n})\n\nexport class UsersModule { }\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/users.module.ts","import { Route } from '@angular/router';\nimport { UsersComponent } from './index';\nimport { UserListResolver } from '../services/resolvers/user-resolver.services';\n\nexport const UsersRoutes: Route[] = [\n    {\n        path: 'users',\n        component: UsersComponent,\n        resolve:{userList:UserListResolver}\n    },\n    {\n        path: 'users/:search',\n        component: UsersComponent,\n        resolve:{userList:UserListResolver}\n    }\n];\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/app/users/users.routes.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/src/main.ts","var map = {\n\t\"./af\": \"../../../../moment/locale/af.js\",\n\t\"./af.js\": \"../../../../moment/locale/af.js\",\n\t\"./ar\": \"../../../../moment/locale/ar.js\",\n\t\"./ar-dz\": \"../../../../moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"../../../../moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"../../../../moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"../../../../moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"../../../../moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"../../../../moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"../../../../moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"../../../../moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"../../../../moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"../../../../moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"../../../../moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"../../../../moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"../../../../moment/locale/ar.js\",\n\t\"./az\": \"../../../../moment/locale/az.js\",\n\t\"./az.js\": \"../../../../moment/locale/az.js\",\n\t\"./be\": \"../../../../moment/locale/be.js\",\n\t\"./be.js\": \"../../../../moment/locale/be.js\",\n\t\"./bg\": \"../../../../moment/locale/bg.js\",\n\t\"./bg.js\": \"../../../../moment/locale/bg.js\",\n\t\"./bn\": \"../../../../moment/locale/bn.js\",\n\t\"./bn.js\": \"../../../../moment/locale/bn.js\",\n\t\"./bo\": \"../../../../moment/locale/bo.js\",\n\t\"./bo.js\": \"../../../../moment/locale/bo.js\",\n\t\"./br\": \"../../../../moment/locale/br.js\",\n\t\"./br.js\": \"../../../../moment/locale/br.js\",\n\t\"./bs\": \"../../../../moment/locale/bs.js\",\n\t\"./bs.js\": \"../../../../moment/locale/bs.js\",\n\t\"./ca\": \"../../../../moment/locale/ca.js\",\n\t\"./ca.js\": \"../../../../moment/locale/ca.js\",\n\t\"./cs\": \"../../../../moment/locale/cs.js\",\n\t\"./cs.js\": \"../../../../moment/locale/cs.js\",\n\t\"./cv\": \"../../../../moment/locale/cv.js\",\n\t\"./cv.js\": \"../../../../moment/locale/cv.js\",\n\t\"./cy\": \"../../../../moment/locale/cy.js\",\n\t\"./cy.js\": \"../../../../moment/locale/cy.js\",\n\t\"./da\": \"../../../../moment/locale/da.js\",\n\t\"./da.js\": \"../../../../moment/locale/da.js\",\n\t\"./de\": \"../../../../moment/locale/de.js\",\n\t\"./de-at\": \"../../../../moment/locale/de-at.js\",\n\t\"./de-at.js\": \"../../../../moment/locale/de-at.js\",\n\t\"./de-ch\": \"../../../../moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"../../../../moment/locale/de-ch.js\",\n\t\"./de.js\": \"../../../../moment/locale/de.js\",\n\t\"./dv\": \"../../../../moment/locale/dv.js\",\n\t\"./dv.js\": \"../../../../moment/locale/dv.js\",\n\t\"./el\": \"../../../../moment/locale/el.js\",\n\t\"./el.js\": \"../../../../moment/locale/el.js\",\n\t\"./en-au\": \"../../../../moment/locale/en-au.js\",\n\t\"./en-au.js\": \"../../../../moment/locale/en-au.js\",\n\t\"./en-ca\": \"../../../../moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"../../../../moment/locale/en-ca.js\",\n\t\"./en-gb\": \"../../../../moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"../../../../moment/locale/en-gb.js\",\n\t\"./en-ie\": \"../../../../moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"../../../../moment/locale/en-ie.js\",\n\t\"./en-nz\": \"../../../../moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"../../../../moment/locale/en-nz.js\",\n\t\"./eo\": \"../../../../moment/locale/eo.js\",\n\t\"./eo.js\": \"../../../../moment/locale/eo.js\",\n\t\"./es\": \"../../../../moment/locale/es.js\",\n\t\"./es-do\": \"../../../../moment/locale/es-do.js\",\n\t\"./es-do.js\": \"../../../../moment/locale/es-do.js\",\n\t\"./es.js\": \"../../../../moment/locale/es.js\",\n\t\"./et\": \"../../../../moment/locale/et.js\",\n\t\"./et.js\": \"../../../../moment/locale/et.js\",\n\t\"./eu\": \"../../../../moment/locale/eu.js\",\n\t\"./eu.js\": \"../../../../moment/locale/eu.js\",\n\t\"./fa\": \"../../../../moment/locale/fa.js\",\n\t\"./fa.js\": \"../../../../moment/locale/fa.js\",\n\t\"./fi\": \"../../../../moment/locale/fi.js\",\n\t\"./fi.js\": \"../../../../moment/locale/fi.js\",\n\t\"./fo\": \"../../../../moment/locale/fo.js\",\n\t\"./fo.js\": \"../../../../moment/locale/fo.js\",\n\t\"./fr\": \"../../../../moment/locale/fr.js\",\n\t\"./fr-ca\": \"../../../../moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"../../../../moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"../../../../moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"../../../../moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"../../../../moment/locale/fr.js\",\n\t\"./fy\": \"../../../../moment/locale/fy.js\",\n\t\"./fy.js\": \"../../../../moment/locale/fy.js\",\n\t\"./gd\": \"../../../../moment/locale/gd.js\",\n\t\"./gd.js\": \"../../../../moment/locale/gd.js\",\n\t\"./gl\": \"../../../../moment/locale/gl.js\",\n\t\"./gl.js\": \"../../../../moment/locale/gl.js\",\n\t\"./gom-latn\": \"../../../../moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"../../../../moment/locale/gom-latn.js\",\n\t\"./he\": \"../../../../moment/locale/he.js\",\n\t\"./he.js\": \"../../../../moment/locale/he.js\",\n\t\"./hi\": \"../../../../moment/locale/hi.js\",\n\t\"./hi.js\": \"../../../../moment/locale/hi.js\",\n\t\"./hr\": \"../../../../moment/locale/hr.js\",\n\t\"./hr.js\": \"../../../../moment/locale/hr.js\",\n\t\"./hu\": \"../../../../moment/locale/hu.js\",\n\t\"./hu.js\": \"../../../../moment/locale/hu.js\",\n\t\"./hy-am\": \"../../../../moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"../../../../moment/locale/hy-am.js\",\n\t\"./id\": \"../../../../moment/locale/id.js\",\n\t\"./id.js\": \"../../../../moment/locale/id.js\",\n\t\"./is\": \"../../../../moment/locale/is.js\",\n\t\"./is.js\": \"../../../../moment/locale/is.js\",\n\t\"./it\": \"../../../../moment/locale/it.js\",\n\t\"./it.js\": \"../../../../moment/locale/it.js\",\n\t\"./ja\": \"../../../../moment/locale/ja.js\",\n\t\"./ja.js\": \"../../../../moment/locale/ja.js\",\n\t\"./jv\": \"../../../../moment/locale/jv.js\",\n\t\"./jv.js\": \"../../../../moment/locale/jv.js\",\n\t\"./ka\": \"../../../../moment/locale/ka.js\",\n\t\"./ka.js\": \"../../../../moment/locale/ka.js\",\n\t\"./kk\": \"../../../../moment/locale/kk.js\",\n\t\"./kk.js\": \"../../../../moment/locale/kk.js\",\n\t\"./km\": \"../../../../moment/locale/km.js\",\n\t\"./km.js\": \"../../../../moment/locale/km.js\",\n\t\"./kn\": \"../../../../moment/locale/kn.js\",\n\t\"./kn.js\": \"../../../../moment/locale/kn.js\",\n\t\"./ko\": \"../../../../moment/locale/ko.js\",\n\t\"./ko.js\": \"../../../../moment/locale/ko.js\",\n\t\"./ky\": \"../../../../moment/locale/ky.js\",\n\t\"./ky.js\": \"../../../../moment/locale/ky.js\",\n\t\"./lb\": \"../../../../moment/locale/lb.js\",\n\t\"./lb.js\": \"../../../../moment/locale/lb.js\",\n\t\"./lo\": \"../../../../moment/locale/lo.js\",\n\t\"./lo.js\": \"../../../../moment/locale/lo.js\",\n\t\"./lt\": \"../../../../moment/locale/lt.js\",\n\t\"./lt.js\": \"../../../../moment/locale/lt.js\",\n\t\"./lv\": \"../../../../moment/locale/lv.js\",\n\t\"./lv.js\": \"../../../../moment/locale/lv.js\",\n\t\"./me\": \"../../../../moment/locale/me.js\",\n\t\"./me.js\": \"../../../../moment/locale/me.js\",\n\t\"./mi\": \"../../../../moment/locale/mi.js\",\n\t\"./mi.js\": \"../../../../moment/locale/mi.js\",\n\t\"./mk\": \"../../../../moment/locale/mk.js\",\n\t\"./mk.js\": \"../../../../moment/locale/mk.js\",\n\t\"./ml\": \"../../../../moment/locale/ml.js\",\n\t\"./ml.js\": \"../../../../moment/locale/ml.js\",\n\t\"./mr\": \"../../../../moment/locale/mr.js\",\n\t\"./mr.js\": \"../../../../moment/locale/mr.js\",\n\t\"./ms\": \"../../../../moment/locale/ms.js\",\n\t\"./ms-my\": \"../../../../moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"../../../../moment/locale/ms-my.js\",\n\t\"./ms.js\": \"../../../../moment/locale/ms.js\",\n\t\"./my\": \"../../../../moment/locale/my.js\",\n\t\"./my.js\": \"../../../../moment/locale/my.js\",\n\t\"./nb\": \"../../../../moment/locale/nb.js\",\n\t\"./nb.js\": \"../../../../moment/locale/nb.js\",\n\t\"./ne\": \"../../../../moment/locale/ne.js\",\n\t\"./ne.js\": \"../../../../moment/locale/ne.js\",\n\t\"./nl\": \"../../../../moment/locale/nl.js\",\n\t\"./nl-be\": \"../../../../moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"../../../../moment/locale/nl-be.js\",\n\t\"./nl.js\": \"../../../../moment/locale/nl.js\",\n\t\"./nn\": \"../../../../moment/locale/nn.js\",\n\t\"./nn.js\": \"../../../../moment/locale/nn.js\",\n\t\"./pa-in\": \"../../../../moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"../../../../moment/locale/pa-in.js\",\n\t\"./pl\": \"../../../../moment/locale/pl.js\",\n\t\"./pl.js\": \"../../../../moment/locale/pl.js\",\n\t\"./pt\": \"../../../../moment/locale/pt.js\",\n\t\"./pt-br\": \"../../../../moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"../../../../moment/locale/pt-br.js\",\n\t\"./pt.js\": \"../../../../moment/locale/pt.js\",\n\t\"./ro\": \"../../../../moment/locale/ro.js\",\n\t\"./ro.js\": \"../../../../moment/locale/ro.js\",\n\t\"./ru\": \"../../../../moment/locale/ru.js\",\n\t\"./ru.js\": \"../../../../moment/locale/ru.js\",\n\t\"./sd\": \"../../../../moment/locale/sd.js\",\n\t\"./sd.js\": \"../../../../moment/locale/sd.js\",\n\t\"./se\": \"../../../../moment/locale/se.js\",\n\t\"./se.js\": \"../../../../moment/locale/se.js\",\n\t\"./si\": \"../../../../moment/locale/si.js\",\n\t\"./si.js\": \"../../../../moment/locale/si.js\",\n\t\"./sk\": \"../../../../moment/locale/sk.js\",\n\t\"./sk.js\": \"../../../../moment/locale/sk.js\",\n\t\"./sl\": \"../../../../moment/locale/sl.js\",\n\t\"./sl.js\": \"../../../../moment/locale/sl.js\",\n\t\"./sq\": \"../../../../moment/locale/sq.js\",\n\t\"./sq.js\": \"../../../../moment/locale/sq.js\",\n\t\"./sr\": \"../../../../moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"../../../../moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"../../../../moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"../../../../moment/locale/sr.js\",\n\t\"./ss\": \"../../../../moment/locale/ss.js\",\n\t\"./ss.js\": \"../../../../moment/locale/ss.js\",\n\t\"./sv\": \"../../../../moment/locale/sv.js\",\n\t\"./sv.js\": \"../../../../moment/locale/sv.js\",\n\t\"./sw\": \"../../../../moment/locale/sw.js\",\n\t\"./sw.js\": \"../../../../moment/locale/sw.js\",\n\t\"./ta\": \"../../../../moment/locale/ta.js\",\n\t\"./ta.js\": \"../../../../moment/locale/ta.js\",\n\t\"./te\": \"../../../../moment/locale/te.js\",\n\t\"./te.js\": \"../../../../moment/locale/te.js\",\n\t\"./tet\": \"../../../../moment/locale/tet.js\",\n\t\"./tet.js\": \"../../../../moment/locale/tet.js\",\n\t\"./th\": \"../../../../moment/locale/th.js\",\n\t\"./th.js\": \"../../../../moment/locale/th.js\",\n\t\"./tl-ph\": \"../../../../moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"../../../../moment/locale/tl-ph.js\",\n\t\"./tlh\": \"../../../../moment/locale/tlh.js\",\n\t\"./tlh.js\": \"../../../../moment/locale/tlh.js\",\n\t\"./tr\": \"../../../../moment/locale/tr.js\",\n\t\"./tr.js\": \"../../../../moment/locale/tr.js\",\n\t\"./tzl\": \"../../../../moment/locale/tzl.js\",\n\t\"./tzl.js\": \"../../../../moment/locale/tzl.js\",\n\t\"./tzm\": \"../../../../moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"../../../../moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"../../../../moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"../../../../moment/locale/tzm.js\",\n\t\"./uk\": \"../../../../moment/locale/uk.js\",\n\t\"./uk.js\": \"../../../../moment/locale/uk.js\",\n\t\"./ur\": \"../../../../moment/locale/ur.js\",\n\t\"./ur.js\": \"../../../../moment/locale/ur.js\",\n\t\"./uz\": \"../../../../moment/locale/uz.js\",\n\t\"./uz-latn\": \"../../../../moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"../../../../moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"../../../../moment/locale/uz.js\",\n\t\"./vi\": \"../../../../moment/locale/vi.js\",\n\t\"./vi.js\": \"../../../../moment/locale/vi.js\",\n\t\"./x-pseudo\": \"../../../../moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"../../../../moment/locale/x-pseudo.js\",\n\t\"./yo\": \"../../../../moment/locale/yo.js\",\n\t\"./yo.js\": \"../../../../moment/locale/yo.js\",\n\t\"./zh-cn\": \"../../../../moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"../../../../moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"../../../../moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"../../../../moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"../../../../moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"../../../../moment/locale/zh-tw.js\"\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"../../../../moment/locale recursive ^\\\\.\\\\/.*$\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/basavareddy/Documents/development/cohere-med-git/presence-hub/comet-presence-cli/~/moment/locale ^\\.\\/.*$\n// module id = ../../../../moment/locale recursive ^\\.\\/.*$\n// module chunks = 0","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// ws (ignored)\n// module id = 0\n// module chunks = 0"],"sourceRoot":"webpack:///"}